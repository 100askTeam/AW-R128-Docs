import{_ as n,o as s,c as a,e as p}from"./app-e85d5a28.js";const t={},e=p(`<h1 id="smart-card" tabindex="-1"><a class="header-anchor" href="#smart-card" aria-hidden="true">#</a> Smart Card</h1><h2 id="模块介绍" tabindex="-1"><a class="header-anchor" href="#模块介绍" aria-hidden="true">#</a> 模块介绍</h2><p>智能卡读取器（SCR）是一种通信控制器，可在系统和智能卡之间传输数据。控制器可以执行完整的智能卡会话，包括停用卡激活卡，冷/热重置，重置应答（ATR）响应接收，数据传输等。</p><h2 id="模块配置" tabindex="-1"><a class="header-anchor" href="#模块配置" aria-hidden="true">#</a> 模块配置</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Kernel Setup ---&gt;
    Drivers Setup ---&gt;
        SoC HAL Drivers ---&gt;
            smartcard devices ---&gt;
                [*] enable smartcard driver
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="源码结构" tabindex="-1"><a class="header-anchor" href="#源码结构" aria-hidden="true">#</a> 源码结构</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>rtos<span class="token operator">-</span>hal<span class="token operator">/</span>
<span class="token operator">|</span><span class="token operator">--</span>hal<span class="token operator">/</span>source<span class="token operator">/</span>smartcard<span class="token operator">/</span>scr_hal<span class="token punctuation">.</span>c <span class="token comment">// hal层接口代码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模块接口说明" tabindex="-1"><a class="header-anchor" href="#模块接口说明" aria-hidden="true">#</a> 模块接口说明</h2><p>头文件</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sunxi_hal_scr.h&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="scr-命令枚举" tabindex="-1"><a class="header-anchor" href="#scr-命令枚举" aria-hidden="true">#</a> SCR 命令枚举</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">enum</span> <span class="token class-name">scr_cmd</span> <span class="token punctuation">{</span>
    SCR_IOCGSTATUS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    SCR_IOCRESET<span class="token punctuation">,</span>
    SCR_IOCGATR<span class="token punctuation">,</span>
    SCR_IOCGPARA<span class="token punctuation">,</span>
    SCR_IOCSPARA<span class="token punctuation">,</span>
    SCR_IOCGATRPARA<span class="token punctuation">,</span>
    SCR_IOCGPPSPARA<span class="token punctuation">,</span>
    SCR_IOCWRDATA<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scr-ata-数据结构体" tabindex="-1"><a class="header-anchor" href="#scr-ata-数据结构体" aria-hidden="true">#</a> SCR ATA 数据结构体</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">scr_atr</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> atr_len<span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> atr_data<span class="token punctuation">[</span>MAX_ATR_LEN<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="smartcard-初始化接口" tabindex="-1"><a class="header-anchor" href="#smartcard-初始化接口" aria-hidden="true">#</a> SMARTCARD 初始化接口</h3><p>SMARTCARD 模块初始化，主要初始化采样率、通道选择及注册中断等</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">hal_scr_status_t</span> <span class="token function">hal_scr_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>无</li></ul><p>返回值</p><ul><li>0：成功</li><li>负数：失败</li></ul><h3 id="smartcard-测试接口" tabindex="-1"><a class="header-anchor" href="#smartcard-测试接口" aria-hidden="true">#</a> SMARTCARD 测试接口</h3><p>SMARTCARD 模块功能测试</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">hal_scr_test</span><span class="token punctuation">(</span><span class="token keyword">enum</span> <span class="token class-name">scr_cmd</span> cmd<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>cmd：命令</li><li>arg：参数</li></ul><p>返回值</p><ul><li>0：成功</li><li>负数：失败</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;interrupt.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;irqs.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;console.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;param.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;hal_osal.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;hal_timer.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;hal_atomic.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;hal_clk.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;hal_gpio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;hal_reset.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sunxi_hal_scr.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;scr_test.h&quot;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">SCR_TEST_INFO</span>  <span class="token expression">printf</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">SCR_TEST_DBG</span>   <span class="token expression">printf</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">get_wvalue</span>  <span class="token expression">readl</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">APB2CLK</span> <span class="token expression"><span class="token number">24000000</span></span></span>

<span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> SCR_REG_DEFAULT<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">12</span>             <span class="token comment">//reg Count</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x000</span> <span class="token punctuation">,</span><span class="token number">0x01ff0f07</span>   <span class="token comment">//reg 0: (default, addr, mask)</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x004</span> <span class="token punctuation">,</span><span class="token number">0x00ff1e1f</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x008</span> <span class="token punctuation">,</span><span class="token number">0x00ff1e1f</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000101</span> <span class="token punctuation">,</span><span class="token number">0x00c</span> <span class="token punctuation">,</span><span class="token number">0x00000707</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x010</span> <span class="token punctuation">,</span><span class="token number">0x1f1f1f1f</span> <span class="token comment">//0x1f001f1f //</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x014</span> <span class="token punctuation">,</span><span class="token number">0x000000ff</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x018</span> <span class="token punctuation">,</span><span class="token number">0xffffffff</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x01c</span> <span class="token punctuation">,</span><span class="token number">0x00ffffff</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x020</span> <span class="token punctuation">,</span><span class="token number">0xffff00ff</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x030</span> <span class="token punctuation">,</span><span class="token number">0x000000ff</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x03c</span> <span class="token punctuation">,</span><span class="token number">0xffffffff</span>
                               <span class="token punctuation">,</span><span class="token number">0x000003ff</span> <span class="token punctuation">,</span><span class="token number">0x040</span> <span class="token punctuation">,</span><span class="token number">0xffffffff</span>
                               <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> SCR_REG_RW<span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token operator">=</span>   <span class="token punctuation">{</span><span class="token number">12</span>               <span class="token comment">//reg Count</span>
                               <span class="token punctuation">,</span><span class="token number">0x01</span>  <span class="token comment">//Byte|Hword|Word</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x000</span> <span class="token punctuation">,</span><span class="token number">0x01ff0007</span>   <span class="token comment">//reg 0: (default, addr, mask)</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x004</span> <span class="token punctuation">,</span><span class="token number">0x00ff1e1f</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x008</span> <span class="token punctuation">,</span><span class="token number">0x00000000</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000101</span> <span class="token punctuation">,</span><span class="token number">0x00c</span> <span class="token punctuation">,</span><span class="token number">0x00000000</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x010</span> <span class="token punctuation">,</span><span class="token number">0x1f1f0000</span> <span class="token comment">//0x1f000000 //</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x014</span> <span class="token punctuation">,</span><span class="token number">0x000000ff</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x018</span> <span class="token punctuation">,</span><span class="token number">0xffffffff</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x01c</span> <span class="token punctuation">,</span><span class="token number">0x00ffffff</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x020</span> <span class="token punctuation">,</span><span class="token number">0xffff00ff</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x030</span> <span class="token punctuation">,</span><span class="token number">0x000000fd</span>
                               <span class="token punctuation">,</span><span class="token number">0x00000000</span> <span class="token punctuation">,</span><span class="token number">0x03c</span> <span class="token punctuation">,</span><span class="token number">0x00000000</span>
                               <span class="token punctuation">,</span><span class="token number">0x000003ff</span> <span class="token punctuation">,</span><span class="token number">0x040</span> <span class="token punctuation">,</span><span class="token number">0xffffffff</span>
                               <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">uint8_t</span> ic_card_atr<span class="token punctuation">[</span>SMART_CARD_NUM<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x41</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//莱西有线</span>
    <span class="token punctuation">{</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0x7d</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span>
        <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x9d</span><span class="token punctuation">,</span> <span class="token number">0xf7</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x9d</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//神州大众卡1</span>
    <span class="token punctuation">{</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0xb9</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span>
        <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x30</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//神州大众卡2</span>
    <span class="token punctuation">{</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0x9d</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0xe9</span><span class="token punctuation">,</span>
        <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0x8f</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x8f</span><span class="token punctuation">,</span> <span class="token number">0x4a</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//数字电视卡1</span>
    <span class="token punctuation">{</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0x9d</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0xe9</span><span class="token punctuation">,</span>
        <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0xf3</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x8f</span><span class="token punctuation">,</span> <span class="token number">0x4a</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//数字电视卡2</span>
    <span class="token punctuation">{</span>
        <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0x9f</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x1f</span><span class="token punctuation">,</span> <span class="token number">0xc3</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span>
        <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0xe0</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0xfe</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span>
        <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0xa8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//电信4G卡</span>
    <span class="token punctuation">{</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0xfb</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x1f</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span>
        <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xf4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//联通卡</span>
    <span class="token punctuation">{</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0x7b</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0xa0</span><span class="token punctuation">,</span>
        <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//移动卡</span>
    <span class="token punctuation">{</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0x7f</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0x4e</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span>
        <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0x31</span> <span class="token punctuation">}</span> <span class="token comment">// digital</span>
    <span class="token comment">// TV卡</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">uint8_t</span> ic_card_send_cmd<span class="token punctuation">[</span>SMART_CARD_NUM<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0xe5</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//莱西有线</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">0xA0</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//移动卡</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">uint8_t</span> ic_card_rev_data<span class="token punctuation">[</span>SMART_CARD_NUM<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x4d</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x4f</span><span class="token punctuation">,</span> <span class="token number">0x4b</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//莱西有线</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0xa4</span><span class="token punctuation">,</span> <span class="token number">0x9f</span><span class="token punctuation">,</span> <span class="token number">0x1b</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//移动卡</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

scr_struct scr<span class="token punctuation">;</span>
scr_fsm_record scr_fsm<span class="token punctuation">;</span>
scatr_struct scatr<span class="token punctuation">;</span>
upps_struct pps<span class="token punctuation">;</span>

<span class="token keyword">extern</span> scr_test_stage stage<span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">int</span> state_dly <span class="token operator">=</span> <span class="token number">0x0</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">SCR_SIM_DBG</span><span class="token expression"><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token function">pattern_mod_goto</span><span class="token punctuation">(</span><span class="token number">0x2</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span></span></span>

<span class="token keyword">void</span> <span class="token function">scr_ccu_clk_gate_on</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
    ret <span class="token operator">=</span> <span class="token function">readl</span><span class="token punctuation">(</span><span class="token number">0x4003c004</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">hal_write_reg32</span><span class="token punctuation">(</span><span class="token number">0x4003c004</span><span class="token punctuation">,</span> <span class="token number">0x4000000</span> <span class="token operator">|</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">scr_ccu_clk_gate_off</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
    ret <span class="token operator">=</span> <span class="token function">readl</span><span class="token punctuation">(</span><span class="token number">0x4003c004</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">hal_write_reg32</span><span class="token punctuation">(</span><span class="token number">0x4003c004</span><span class="token punctuation">,</span> <span class="token number">0xfbffffff</span> <span class="token operator">&amp;</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">scr_module_rst_on</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
    ret <span class="token operator">=</span> <span class="token function">readl</span><span class="token punctuation">(</span><span class="token number">0x4003c00c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">hal_write_reg32</span><span class="token punctuation">(</span><span class="token number">0x4003c00c</span><span class="token punctuation">,</span> <span class="token number">0x4000000</span> <span class="token operator">|</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">scr_module_rst_off</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
    ret <span class="token operator">=</span> <span class="token function">readl</span><span class="token punctuation">(</span><span class="token number">0x4003c00c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">hal_write_reg32</span><span class="token punctuation">(</span><span class="token number">0x4003c00c</span><span class="token punctuation">,</span> <span class="token number">0xfbffffff</span> <span class="token operator">&amp;</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">scr_module_rst</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">scr_module_rst_off</span><span class="token punctuation">(</span>sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">udelay</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">scr_module_rst_on</span><span class="token punctuation">(</span>sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">udelay</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">scr_pio_setup</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
    ret <span class="token operator">=</span> <span class="token function">hal_gpio_pinmux_set_function</span><span class="token punctuation">(</span><span class="token function">GPIOA</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ret<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;scr pin set function failed\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* Configure the CCMU Clock &amp; De-assert Reset &amp; Gating &amp; GPIO configure */</span>
<span class="token keyword">void</span> <span class="token function">scr_system_setup</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">scr_module_rst_off</span><span class="token punctuation">(</span>sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">scr_ccu_clk_gate_off</span><span class="token punctuation">(</span>sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">udelay</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">scr_ccu_clk_gate_on</span><span class="token punctuation">(</span>sel<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/*enable APB clock*/</span>
    <span class="token function">scr_module_rst_on</span><span class="token punctuation">(</span>sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">scr_pio_setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/*IO configure*/</span>
<span class="token punctuation">}</span>

<span class="token class-name">uint32_t</span>
<span class="token function">scr_reg_test</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token comment">// registers default values cheak and read write check</span>
<span class="token punctuation">{</span>
    <span class="token class-name">uint32_t</span> temp<span class="token punctuation">;</span>

    <span class="token function">scr_module_rst</span><span class="token punctuation">(</span>SCR_NO<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;SCR Register Test Pass!!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token class-name">hal_irqreturn_t</span> <span class="token function">scr0_irq_handler</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> dev<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">scr_handler_irq</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">reg_scr0_irq_handler</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">hal_request_irq</span><span class="token punctuation">(</span>scr<span class="token punctuation">.</span>irq_no<span class="token punctuation">,</span> scr0_irq_handler<span class="token punctuation">,</span> <span class="token string">&quot;scr0&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>scr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">hal_enable_irq</span><span class="token punctuation">(</span>scr<span class="token punctuation">.</span>irq_no<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">scr_params_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    scr<span class="token punctuation">.</span>reg_base <span class="token operator">=</span> <span class="token number">0x40045400</span><span class="token punctuation">;</span>

    scr<span class="token punctuation">.</span>irq_no <span class="token operator">=</span> <span class="token number">69</span><span class="token punctuation">;</span> <span class="token comment">//中断号</span>
    scr<span class="token punctuation">.</span>csr_config <span class="token operator">=</span> CSR_CONFIG_DETPOL <span class="token operator">|</span> CSR_CONFIG_T <span class="token operator">|</span> CSR_CONFIG_ATRSTFLUSH <span class="token operator">|</span> CSR_CONFIG_TSRXEN <span class="token operator">|</span> CSR_CONFIG_CLKSTPPOL <span class="token operator">|</span> CSR_CONFIG_PECRXE <span class="token operator">|</span> CSR_CONFIG_MSBF <span class="token operator">|</span> CSR_CONFIG_DPOL<span class="token punctuation">;</span>

    scr<span class="token punctuation">.</span>inten_bm <span class="token operator">=</span> <span class="token number">0xffffffff</span><span class="token punctuation">;</span> <span class="token comment">// Enbale all the interrupts</span>
    scr<span class="token punctuation">.</span>txfifo_thh <span class="token operator">=</span> SCR_FIFO_DEPTH <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// set the txfifo trigger level as half full</span>
    scr<span class="token punctuation">.</span>rxfifo_thh <span class="token operator">=</span> SCR_FIFO_DEPTH <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// set the rxfifo trigger level as half full</span>
    scr<span class="token punctuation">.</span>tx_repeat <span class="token operator">=</span> <span class="token number">0x3</span><span class="token punctuation">;</span> <span class="token comment">// iso7816中规定对于存在争议的字符，最多只能重发3次</span>
    scr<span class="token punctuation">.</span>rx_repeat <span class="token operator">=</span> <span class="token number">0x3</span><span class="token punctuation">;</span> <span class="token comment">// iso7816中规定对于存在争议的字符，最多只能重发3次</span>

    scr<span class="token punctuation">.</span>scclk_div <span class="token operator">=</span> <span class="token punctuation">(</span>APB2CLK <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> SCR_CLK_FRQ<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// PCLK/12, &lt;175, &amp;&amp; SCCLK &gt;= 1M &amp;&amp; =&lt;4M</span>
    scr<span class="token punctuation">.</span>baud_div <span class="token operator">=</span> <span class="token punctuation">(</span>scr<span class="token punctuation">.</span>scclk_div <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">372</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// ETU = 372*SCCLK</span>

    scr<span class="token punctuation">.</span>act_time <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 1*256 clock cycle</span>
    scr<span class="token punctuation">.</span>rst_time <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 1*256 clock cycle</span>
    scr<span class="token punctuation">.</span>atr_time <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">35000</span> <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 400~40000   冷复位和热复位时,在RST拉高后,IO要作出ATR的时间限制</span>
    scr<span class="token punctuation">.</span>guard_time <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">//=2*ETUs   /* GT = 12etu + R * N/f   ---   Default extra</span>
        <span class="token comment">// guard time is 0 */</span>
    scr<span class="token punctuation">.</span>chlimit_time <span class="token operator">=</span> <span class="token number">9600</span><span class="token punctuation">;</span> <span class="token comment">// 1024*(10+scr.guard_time); //1K Characters</span>
    scr<span class="token punctuation">.</span>debounce_time <span class="token operator">=</span> <span class="token number">0xfffff</span><span class="token punctuation">;</span> <span class="token comment">// insert detect debounce time</span>
<span class="token punctuation">}</span>

<span class="token keyword">volatile</span> u32 card_name <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">volatile</span> u32 scr_ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token class-name">uint32_t</span> <span class="token function">scr_test_process</span><span class="token punctuation">(</span>pscr_struct pscr<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> atr_temp<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> rsp_temp<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    u32 i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    u32 j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> atr_cmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">switch</span> <span class="token punctuation">(</span>stage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> sts_wait_connect<span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>scr<span class="token punctuation">.</span>detected<span class="token punctuation">)</span> <span class="token comment">/*if detect card, ACT the card*/</span>
        <span class="token punctuation">{</span>
            state_dly<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>state_dly <span class="token operator">&gt;=</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">msleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">scr_start_activation</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* Activation */</span>
                stage <span class="token operator">=</span> sts_wait_act<span class="token punctuation">;</span>
                state_dly <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            state_dly <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> sts_wait_act<span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>scr<span class="token punctuation">.</span>activated<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stage <span class="token operator">=</span> sts_wait_atr<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> sts_wait_atr<span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>scr<span class="token punctuation">.</span>atr_resp <span class="token operator">!=</span> SCR_ATR_RESP_INVALID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>scr<span class="token punctuation">.</span>atr_resp <span class="token operator">==</span> SCR_ATR_RESP_OK<span class="token punctuation">)</span> <span class="token comment">/*ATR response is 有效的*/</span>
            <span class="token punctuation">{</span>
                <span class="token class-name">uint32_t</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token function">SCR_TEST_DBG</span><span class="token punctuation">(</span><span class="token string">&quot;ATR = &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">.</span>wptr<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">SCR_TEST_DBG</span><span class="token punctuation">(</span><span class="token string">&quot;0x%02x &quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">.</span>buffer <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    atr_temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">.</span>buffer <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token function">SCR_TEST_DBG</span><span class="token punctuation">(</span><span class="token string">&quot; \\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">.</span>rptr <span class="token operator">=</span> scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">.</span>wptr<span class="token punctuation">;</span>
                <span class="token function">smartcard_atr_decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scatr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token operator">*</span><span class="token punctuation">)</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">.</span>buffer<span class="token punctuation">,</span> <span class="token operator">&amp;</span>pps<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token function">scr_buffer_flush</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// clean rxbuffer</span>
                stage <span class="token operator">=</span> sts_start_pps<span class="token punctuation">;</span>

                <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> SMART_CARD_NUM<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    u32 atr_length <span class="token operator">=</span> ic_card_atr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> atr_length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>atr_temp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> ic_card_atr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> atr_length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        card_name <span class="token operator">=</span> i<span class="token punctuation">;</span>
                        atr_cmp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        atr_cmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>atr_cmp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;crad_name = %d\\n&quot;</span><span class="token punctuation">,</span> card_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;ATR Function PASS!!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;ATR Function FAIL!!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                stage <span class="token operator">=</span> sts_start_deact<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> sts_start_pps<span class="token operator">:</span> <span class="token comment">/* Protocol and parameters selection */</span>
        pscr<span class="token operator">-&gt;</span>chto_flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token function">scr_buffer_flush</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">scr_write_fifo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">,</span> pps<span class="token punctuation">.</span>ppss<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;ppss:%x  \\n&quot;</span><span class="token punctuation">,</span> pps<span class="token punctuation">.</span>ppss<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">scr_write_fifo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pps0<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pps0:%x  \\n&quot;</span><span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pps0<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pps<span class="token punctuation">.</span>pps0 <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">0x1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">scr_write_fifo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pps1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pps1:%x  \\n&quot;</span><span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pps1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pps<span class="token punctuation">.</span>pps0 <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">0x1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">scr_write_fifo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pps2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pps2:%x  \\n&quot;</span><span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pps2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pps<span class="token punctuation">.</span>pps0 <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">0x1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">scr_write_fifo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pps3<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pps3:%x  \\n&quot;</span><span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pps3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">scr_write_fifo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pck<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pck:%x  \\n&quot;</span><span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pck<span class="token punctuation">)</span><span class="token punctuation">;</span>

        stage <span class="token operator">=</span> sts_wait_pps_resp<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> sts_wait_pps_resp<span class="token operator">:</span> <span class="token comment">// pps交换成功的最普通的情况就是:卡设备的pps请求和ic卡的pps应答的内容完全一样</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pscr<span class="token operator">-&gt;</span>chto_flag<span class="token punctuation">)</span> <span class="token comment">// Wait Data Timeout/*time is too long, time is</span>
        <span class="token comment">// out*/</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">scr_buffer_is_empty</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// RX Buffer, No Response</span>
            <span class="token punctuation">{</span>
                <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;No PPS Response!!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                stage <span class="token operator">=</span> sts_warm_reset<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">uint8_t</span> data <span class="token operator">=</span> <span class="token function">scr_dump_buffer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// read ppss</span>
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;ppss:%x  \\n&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">!=</span> pps<span class="token punctuation">.</span>ppss<span class="token punctuation">)</span> <span class="token comment">// check ppss</span>
                <span class="token punctuation">{</span>
                    <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;PPS Resp Start Error: 0x%x !!\\n&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">scr_buffer_is_empty</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// no pps0</span>
                <span class="token punctuation">{</span>
                    <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;PPS Resp Too Short 1\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                data <span class="token operator">=</span> <span class="token function">scr_dump_buffer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// read pps0</span>
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pps0:%x  \\n&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">!=</span> pps<span class="token punctuation">.</span>pps0<span class="token punctuation">)</span> <span class="token comment">// check pps0</span>
                <span class="token punctuation">{</span>
                    <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;PPS Resp PPS0 Error: 0x%x vs 0x%x !!\\n&quot;</span><span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pps0<span class="token punctuation">,</span>
                        data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>pps<span class="token punctuation">.</span>pps0 <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">0x1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//根据pps0的值,有pps1</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">scr_buffer_is_empty</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//收不到pps1</span>
                    <span class="token punctuation">{</span>
                        <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;PPS Resp Too Short 2\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    data <span class="token operator">=</span> <span class="token function">scr_dump_buffer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取pps1</span>
                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pps1:%x  \\n&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">!=</span> pps<span class="token punctuation">.</span>pps1<span class="token punctuation">)</span> <span class="token comment">//检测pps1</span>
                    <span class="token punctuation">{</span>
                        <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;PPS Resp PPS1 Error: 0x%x vs 0x%x !!\\n&quot;</span><span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pps1<span class="token punctuation">,</span>
                            data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>pps<span class="token punctuation">.</span>pps0 <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">0x1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//根据pps0的值,有pps2</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">scr_buffer_is_empty</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//收不到pps2</span>
                    <span class="token punctuation">{</span>
                        <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;PPS Resp Too Short 3\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    data <span class="token operator">=</span> <span class="token function">scr_dump_buffer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取pps2</span>
                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pps2:%x  \\n&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">!=</span> pps<span class="token punctuation">.</span>pps2<span class="token punctuation">)</span> <span class="token comment">//检测pps2</span>
                    <span class="token punctuation">{</span>
                        <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;PPS Resp PPS2 Error: 0x%x vs 0x%x !!\\n&quot;</span><span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pps2<span class="token punctuation">,</span>
                            data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>pps<span class="token punctuation">.</span>pps0 <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">0x1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//根据pps0的值,有pps3</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">scr_buffer_is_empty</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//收不到pps3</span>
                    <span class="token punctuation">{</span>
                        <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;PPS Resp Too Short 4\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    data <span class="token operator">=</span> <span class="token function">scr_dump_buffer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取pps3</span>
                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pps3:%x  \\n&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">!=</span> pps<span class="token punctuation">.</span>pps3<span class="token punctuation">)</span> <span class="token comment">//检测pps3</span>
                    <span class="token punctuation">{</span>
                        <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;PPS Resp PPS3 Error: 0x%x vs 0x%x !!\\n&quot;</span><span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pps3<span class="token punctuation">,</span>
                            data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">scr_buffer_is_empty</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//收不到pck</span>
                <span class="token punctuation">{</span>
                    <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;PPS Resp Too Short 5\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                data <span class="token operator">=</span> <span class="token function">scr_dump_buffer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取pck</span>
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pck:%x  \\n&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">!=</span> pps<span class="token punctuation">.</span>pck<span class="token punctuation">)</span> <span class="token comment">//检测pck</span>
                <span class="token punctuation">{</span>
                    <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;PPS Resp PCK Error: 0x%x vs 0x%x !!\\n&quot;</span><span class="token punctuation">,</span> pps<span class="token punctuation">.</span>pck<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token function">scr_buffer_flush</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">;</span>
                stage <span class="token operator">=</span> sts_send_cmd<span class="token punctuation">;</span>

                <span class="token function">SCR_TEST_INFO</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;PPS Response OK!!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//如果上述if中都没有break出来,则表示pps交换成功</span>

                scr<span class="token punctuation">.</span>baud_div <span class="token operator">=</span> <span class="token punctuation">(</span>scr<span class="token punctuation">.</span>scclk_div <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>scatr<span class="token punctuation">.</span>F<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>scatr<span class="token punctuation">.</span>D<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token function">scr_set_baud_divisor</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">,</span> pscr<span class="token operator">-&gt;</span>baud_div<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>

    <span class="token keyword">case</span> sts_warm_reset<span class="token operator">:</span>
        scr<span class="token punctuation">.</span>atr_resp <span class="token operator">=</span> SCR_ATR_RESP_INVALID<span class="token punctuation">;</span>
        <span class="token function">scr_start_warmreset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        stage <span class="token operator">=</span> sts_wait_atr_again<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>

    <span class="token keyword">case</span> sts_wait_atr_again<span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>scr<span class="token punctuation">.</span>atr_resp <span class="token operator">!=</span> SCR_ATR_RESP_INVALID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>scr<span class="token punctuation">.</span>atr_resp <span class="token operator">==</span> SCR_ATR_RESP_OK<span class="token punctuation">)</span> <span class="token comment">/*ATR response is 有效的*/</span>
            <span class="token punctuation">{</span>
                <span class="token class-name">uint32_t</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token function">SCR_TEST_DBG</span><span class="token punctuation">(</span><span class="token string">&quot;ATR : &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">.</span>wptr<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">SCR_TEST_DBG</span><span class="token punctuation">(</span><span class="token string">&quot;0x%02x &quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">.</span>buffer <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    atr_temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">.</span>buffer <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token function">SCR_TEST_DBG</span><span class="token punctuation">(</span><span class="token string">&quot; \\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">.</span>rptr <span class="token operator">=</span> scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">.</span>wptr<span class="token punctuation">;</span>
                <span class="token function">smartcard_atr_decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scatr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token operator">*</span><span class="token punctuation">)</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">.</span>buffer<span class="token punctuation">,</span> <span class="token operator">&amp;</span>pps<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> SMART_CARD_NUM<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    u32 atr_length <span class="token operator">=</span> ic_card_atr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> atr_length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>atr_temp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> ic_card_atr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> atr_length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        card_name <span class="token operator">=</span> i<span class="token punctuation">;</span>
                        atr_cmp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        atr_cmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>atr_cmp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;crad_name = %d\\n&quot;</span><span class="token punctuation">,</span> card_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;ATR Function PASS!!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;ATR Function FAIL!!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                scr<span class="token punctuation">.</span>baud_div <span class="token operator">=</span> <span class="token punctuation">(</span>scr<span class="token punctuation">.</span>scclk_div <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>scatr<span class="token punctuation">.</span>F<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>scatr<span class="token punctuation">.</span>D<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token function">scr_set_baud_divisor</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">,</span> pscr<span class="token operator">-&gt;</span>baud_div<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token function">scr_buffer_flush</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">.</span>rxbuf<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// clean rxbuffer</span>
                stage <span class="token operator">=</span> sts_send_cmd<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                stage <span class="token operator">=</span> sts_start_deact<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>

    <span class="token keyword">case</span> sts_send_cmd<span class="token operator">:</span> <span class="token comment">//这里应该可以加入我们想要的沟通命令</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">uint8_t</span> cmp_rlt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ic_card_send_cmd<span class="token punctuation">[</span>card_name<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ic_card_send_cmd<span class="token punctuation">[</span>card_name<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">uint8_t</span> send <span class="token operator">=</span> ic_card_send_cmd<span class="token punctuation">[</span>card_name<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token function">scr_write_fifo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">,</span> send<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">msleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">scr_rx_fifo_read</span><span class="token punctuation">(</span>rsp_temp<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ic_card_rev_data<span class="token punctuation">[</span>card_name<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>rsp_temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> ic_card_rev_data<span class="token punctuation">[</span>card_name<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    cmp_rlt <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp_rlt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Communication Command Error: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ic_card_rev_data<span class="token punctuation">[</span>card_name<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;0x%02x  &quot;</span><span class="token punctuation">,</span> rsp_temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                scr_ret<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Communication Command Respone PASS!!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;No communication command, No command test!!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            stage <span class="token operator">=</span> sts_idle<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">msleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> sts_start_deact<span class="token operator">:</span>
        stage <span class="token operator">=</span> sts_wait_deact<span class="token punctuation">;</span>
        <span class="token function">scr_start_deactivation</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* Deactivation */</span>
        <span class="token function">msleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> sts_wait_deact<span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>scr<span class="token punctuation">.</span>activated<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stage <span class="token operator">=</span> sts_wait_disconnect<span class="token punctuation">;</span>
            <span class="token function">scr_module_rst</span><span class="token punctuation">(</span>SCR_NO<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">scr_params_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">smartcard_params_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scatr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/*set smart card protocol, v,i,frequency*/</span>
            <span class="token function">scr_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> sts_wait_disconnect<span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>scr<span class="token punctuation">.</span>detected<span class="token punctuation">)</span>
            stage <span class="token operator">=</span> sts_wait_connect<span class="token punctuation">;</span>

        <span class="token keyword">break</span><span class="token punctuation">;</span>

    <span class="token keyword">case</span> sts_idle<span class="token operator">:</span>
        <span class="token function">msleep</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sts_idle <span class="token operator">==</span> stage<span class="token punctuation">)</span>
            stage <span class="token operator">=</span> sts_idle<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
        stage <span class="token operator">=</span> sts_idle<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">scr_data_transfer_test</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">scr_params_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">scr_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">reg_scr0_irq_handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">scr_global_interrupt_enable</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token function">scr_test_process</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>scr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* s32 scr_test(void) */</span>
<span class="token keyword">int</span> <span class="token function">scr_test1</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">scr_params_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/*register default check and read write check*/</span>
    <span class="token function">scr_system_setup</span><span class="token punctuation">(</span>SCR_NO<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">scr_reg_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token comment">/*SCR Control and smart card data transfer test*/</span>
    <span class="token function">scr_system_setup</span><span class="token punctuation">(</span>SCR_NO<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">scr_data_transfer_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">FINSH_FUNCTION_EXPORT_CMD</span><span class="token punctuation">(</span>scr_test1<span class="token punctuation">,</span> hal_smartcard<span class="token punctuation">,</span> smartcard<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29),c=[e];function o(u,l){return s(),a("div",null,c)}const k=n(t,[["render",o],["__file","chapter23.html.vue"]]);export{k as default};
