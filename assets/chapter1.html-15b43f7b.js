import{_ as a,o as s,c as e,e as t}from"./app-e85d5a28.js";const n={},o=t(`<h1 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h1><h2 id="打包出现-error-update-mbr-failed" tabindex="-1"><a class="header-anchor" href="#打包出现-error-update-mbr-failed" aria-hidden="true">#</a> 打包出现：ERROR: update_mbr failed</h2><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/quick-start/part7/chapter1/image1.jpg" alt="image1"></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">24993</span><span class="token operator">+</span><span class="token number">0</span> records in
<span class="token number">24993</span><span class="token operator">+</span><span class="token number">0</span> records out
<span class="token number">6398208</span> <span class="token function">bytes</span> <span class="token punctuation">(</span><span class="token number">6.4</span> MB<span class="token punctuation">)</span> copied<span class="token punctuation">,</span> <span class="token number">0.0271082</span> s<span class="token punctuation">,</span> <span class="token number">236</span> MB<span class="token operator">/</span>s
ERROR<span class="token operator">:</span> dl file rtos_riscv<span class="token punctuation">.</span>fex size too large
ERROR<span class="token operator">:</span> filename <span class="token operator">=</span> rtos_riscv<span class="token punctuation">.</span>fex
ERROR<span class="token operator">:</span> dl_file_size <span class="token operator">=</span> <span class="token number">1579</span> sector
ERROR<span class="token operator">:</span> part_size <span class="token operator">=</span> <span class="token number">1000</span> sector
ERROR<span class="token operator">:</span> update mbr file fail
ERROR<span class="token operator">:</span> update_mbr failed
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是因为 <code>rtos_riscv.fex</code> 太大了，分区容量设置过小。</p><h3 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h3><ul><li>确定打包使用的分区表</li></ul><p>运行打包命令，找到打包使用发分区表。例如这里使用的是 <code>sys_partition_xip.fex</code></p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/quick-start/part7/chapter1/image2.jpg" alt="image2"></p><ul><li>编辑分区表</li></ul><p>使用 <code>cconfigs</code> 命令进入目录，找到打包使用的分区表，编辑修改</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/quick-start/part7/chapter1/image3.jpg" alt="image3"></p><ul><li>找到上面报错的行，修改 <code>size</code> 选项，单位是扇区。对于 NOR 方案请对齐。这里我们修改到 <code>7000</code></li></ul><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/quick-start/part7/chapter1/image4.jpg" alt="image4"></p><ul><li>重新打包，正常通过</li></ul><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/quick-start/part7/chapter1/image5.jpg" alt="image5"></p><h2 id="修改分区表后系统无法启动" tabindex="-1"><a class="header-anchor" href="#修改分区表后系统无法启动" aria-hidden="true">#</a> 修改分区表后系统无法启动</h2><p>有些时候，修改 <code>sys_partition_xxx.fex</code> 后系统无法启动，例如将 <code>config</code> 的大小从 <code>32</code> 改到 <code>64</code> 后，系统无法启动卡死。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/quick-start/part7/chapter1/image6.jpg" alt="image6"></p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/quick-start/part7/chapter1/image7.jpg" alt="image7"></p><p>这是由于扩大分区后踩到内存了，一般配置 LPSRAM 前面 2M 给 M33 核使用，M33 的代码运行在前面 2M 上，另外这 2M 中的前 16K 是<code>sysconfig</code> 配置。</p><p>可以看到 M33 系统的启动地址为 <code>0x8004000</code> 但是 <code>config</code> 现在有 32K 载入到了 <code>0x8000000-0x8008000</code> 的内存中，覆盖了 <code>M33</code> 的部分内存，这样一般叫做 &quot;踩内存&quot;。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/quick-start/part7/chapter1/image8.jpg" alt="image8"></p><p>解决方法：</p><ul><li>精简该分区，删除不需要的配置项</li></ul><p>保持 <code>config</code> 大小为 <code>32</code>，删除不需要的配置项目减少 <code>config</code> 的大小。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/quick-start/part7/chapter1/image9.jpg" alt="image9"></p><ul><li>修改 M33 核心的运行地址，这里将 M33 核心往后移动了一部分，将启动地址配置到 <code>0x8008000</code>，同时注意修改内存长度防止踩到 C906 核心的内存，将 <code>0x1FC000</code> 改为 <code>0x1F8000</code>。</li></ul><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/quick-start/part7/chapter1/image10.jpg" alt="image10"></p><p>这样就不会踩到内存导致启动失败。正常启动。</p>`,30),p=[o];function c(r,i){return s(),e("div",null,p)}const l=a(n,[["render",c],["__file","chapter1.html.vue"]]);export{l as default};
