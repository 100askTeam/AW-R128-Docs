import{_ as n,o as s,c as a,e as t}from"./app-e85d5a28.js";const p={},e=t(`<h1 id="g2d" tabindex="-1"><a class="header-anchor" href="#g2d" aria-hidden="true">#</a> G2D</h1><p>G2D 驱动主要实现图像旋转/数据格式/颜色空间转换, 以及图层合成功能(包括包括alpha、colorkey、rotate、mirror、rop、maskblt) 等图形加速功能。</p><h2 id="模块功能" tabindex="-1"><a class="header-anchor" href="#模块功能" aria-hidden="true">#</a> 模块功能</h2><h3 id="矩形填充-fill-color-rectgngle" tabindex="-1"><a class="header-anchor" href="#矩形填充-fill-color-rectgngle" aria-hidden="true">#</a> 矩形填充（fill color rectgngle）</h3><p>填充矩形区域功能可以实现对某块区域进行预订的颜色值填充，如下图就填充了 0xFF0080FF的 ARGB 值，该功能还可以通过设定数据区域大小实现画点和直线，同时也可以通过设定 flag 实现一种填充颜色和目标做 alpha 运算。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part2/chapter8/image1.jpg" alt="image1"></p><h3 id="旋转和镜像-rotate-and-mirror" tabindex="-1"><a class="header-anchor" href="#旋转和镜像-rotate-and-mirror" aria-hidden="true">#</a> 旋转和镜像 (rotate and mirror)</h3><p>旋转镜像主要是实现如下 Horizontal、Vertical、Rotate180°、Mirror45°、Rotate90°、Mirror135°、Rotate270° 共 7 种操作。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part2/chapter8/image2.jpg" alt="image8"></p><h3 id="alpha-blending" tabindex="-1"><a class="header-anchor" href="#alpha-blending" aria-hidden="true">#</a> alpha blending</h3><p>不同的图层之间可以做 alpha blending。Alpha 分为 pixel alpha、plane alpha、multi alpha 三种：</p><ul><li>pixel alpha 意为每个像素自带有一个专属 alpha 值；</li><li>plane alpha 则是一个图层中所有像素共用一个 globe alpha 值；</li><li>multi alpha 则每个像素在代入 alpha 运算时的值为 globe alpha*pixel alpha，可以通过 G2D 驱动接口的 flag 去控制</li></ul><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part2/chapter8/image3.jpg" alt="image3"></p><h3 id="colorkey" tabindex="-1"><a class="header-anchor" href="#colorkey" aria-hidden="true">#</a> colorkey</h3><p>不同 image 之间可以做 colorkey 效果：</p><ul><li>左图中 destination 的优先级高于 source，destination 中 match 部分（橙色五角星部分），则被选择透过，显示为 source 与 destination 做 alpha blending 后的效果图。</li><li>右图中 source 的优先级高于 destination，则 source 中 match 部分（深红色五角星部分），则被选择透过，直接显示 destination 与 source 做 alpha blending 后的效果图。</li></ul><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part2/chapter8/image4.jpg" alt="image4"></p><h3 id="缩放-stretchblt" tabindex="-1"><a class="header-anchor" href="#缩放-stretchblt" aria-hidden="true">#</a> 缩放 (Stretchblt)</h3><p>Stretchblt 主要是把 source 按照 destination 的 size 进行缩放，并最终与 destination 做alpha blending、colorkey 等运算或直接旋转镜像后拷贝到目标</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part2/chapter8/image5.jpg" alt="image5"></p><h3 id="二元光栅操作-rop2" tabindex="-1"><a class="header-anchor" href="#二元光栅操作-rop2" aria-hidden="true">#</a> 二元光栅操作 (rop2)</h3><p>我们在画线和填充区域的时候将画笔和目标像素组合得到新的目标像素。</p><h3 id="三元光栅操作-maskblt-rop3" tabindex="-1"><a class="header-anchor" href="#三元光栅操作-maskblt-rop3" aria-hidden="true">#</a> 三元光栅操作 (maskblt rop3)</h3><p>对于图像有同样光栅操作用于生成各种特殊效果, 我们要处理的有三种像素: 源图像像素, 目标图像像素, 画刷像素 (模板图像像素)。如下图所示, 从左上到右下分别是 src ptn mask dst。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part2/chapter8/image6.jpg" alt="image6"></p><h2 id="支持的format" tabindex="-1"><a class="header-anchor" href="#支持的format" aria-hidden="true">#</a> 支持的format</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>G2D_FORMAT_ARGB8888/G2D_FORMAT_ARGB8888/G2D_FORMAT_ABGR8888/
G2D_FORMAT_RGBA8888/G2D_FORMAT_BGRA8888/G2D_FORMAT_XRGB8888,
G2D_FORMAT_XBGR8888/G2D_FORMAT_RGBX8888/G2D_FORMAT_BGRX8888/
G2D_FORMAT_RGB888/G2D_FORMAT_BGR888/G2D_FORMAT_RGB565,
G2D_FORMAT_BGR565/G2D_FORMAT_ARGB4444/G2D_FORMAT_ABGR4444/
G2D_FORMAT_RGBA4444/G2D_FORMAT_BGRA4444/G2D_FORMAT_ARGB1555,
G2D_FORMAT_ABGR1555/G2D_FORMAT_RGBA5551/G2D_FORMAT_BGRA5551/
G2D_FORMAT_ARGB2101010/G2D_FORMAT_ABGR2101010,
G2D_FORMAT_RGBA1010102/G2D_FORMAT_BGRA1010102
G2D_FORMAT_IYUV422_V0Y1U0Y0, G2D_FORMAT_IYUV422_Y1V0Y0U0, G2D_FORMAT_IYUV422_U0Y1V0Y0, G2D_FORMAT_IYUV422_Y1U0Y0V0, G2D_FORMAT_YUV422UVC_V1U1V0U0, G2D_FORMAT_YUV422UVC_U1V1U0V0, G2D_FORMAT_YUV422_PLANAR, G2D_FORMAT_YUV420UVC_V1U1V0U0, G2D_FORMAT_YUV420UVC_U1V1U0V0, G2D_FORMAT_YUV420_PLANAR, G2D_FORMAT_YUV411UVC_V1U1V0U0, G2D_FORMAT_YUV411UVC_U1V1U0V0, G2D_FORMAT_YUV411_PLANAR, G2D_FORMAT_Y8,
G2D_FORMAT_YVU10_P010,
G2D_FORMAT_YVU10_P210,
G2D_FORMAT_YVU10_444,
G2D_FORMAT_YUV10_444,
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模块配置" tabindex="-1"><a class="header-anchor" href="#模块配置" aria-hidden="true">#</a> 模块配置</h2><p>其menuconfig 的配置如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Kernel Setup ---&gt;
    Drivers Setup ---&gt;
        SoC HAL Drivers ---&gt;
            G2D devices ---&gt;
                [*] enable g2d driver
                [*] enbale g2d hal APIs Test command
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="源码结构" tabindex="-1"><a class="header-anchor" href="#源码结构" aria-hidden="true">#</a> 源码结构</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.
├── g2d_bld.c
├── g2d_bld.h
├── g2d_bsp.h
├── g2d.c
├── g2d_driver.h
├── g2d_driver_i.h
├── g2d_mixer.c
├── g2d_mixer.h
├── g2d_mixer_type.h
├── g2d_ovl_u.c
├── g2d_ovl_u.h
├── g2d_ovl_v.c
├── g2d_ovl_v.h
├── g2d_rcq.c
├── g2d_rcq.h
├── g2d_rotate.c
├── g2d_rotate.h
├── g2d_rotate_type.h
├── g2d_scal.c
├── g2d_scal.h
├── g2d_top.c
├── g2d_top.h
├── g2d_top_type.h
├── g2d_wb.c
├── g2d_wb.h
├── Kconfig
├── Makefile
├── simple_idr.c
└── simple_idr.h
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模块接口说明" tabindex="-1"><a class="header-anchor" href="#模块接口说明" aria-hidden="true">#</a> 模块接口说明</h2><p>头文件</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;g2d_driver_enh.h&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="数据结构" tabindex="-1"><a class="header-anchor" href="#数据结构" aria-hidden="true">#</a> 数据结构</h3><h4 id="g2d-blt-flags" tabindex="-1"><a class="header-anchor" href="#g2d-blt-flags" aria-hidden="true">#</a> g2d_blt_flags</h4><p><code>g2d_blt_flags</code> 用于描述一个bitblt 和stretchblt 的flag 属性信息</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    G2D_BLT_NONE <span class="token operator">=</span> <span class="token number">0x00000000</span><span class="token punctuation">,</span>
    G2D_BLT_PIXEL_ALPHA <span class="token operator">=</span> <span class="token number">0x00000001</span><span class="token punctuation">,</span>
    G2D_BLT_PLANE_ALPHA <span class="token operator">=</span> <span class="token number">0x00000002</span><span class="token punctuation">,</span>
    G2D_BLT_MULTI_ALPHA <span class="token operator">=</span> <span class="token number">0x00000004</span><span class="token punctuation">,</span>
    G2D_BLT_SRC_COLORKEY <span class="token operator">=</span> <span class="token number">0x00000008</span><span class="token punctuation">,</span>
    G2D_BLT_DST_COLORKEY <span class="token operator">=</span> <span class="token number">0x00000010</span><span class="token punctuation">,</span>
    G2D_BLT_FLIP_HORIZONTAL <span class="token operator">=</span> <span class="token number">0x00000020</span><span class="token punctuation">,</span>
    G2D_BLT_FLIP_VERTICAL <span class="token operator">=</span> <span class="token number">0x00000040</span><span class="token punctuation">,</span>
    G2D_BLT_ROTATE90 <span class="token operator">=</span> <span class="token number">0x00000080</span><span class="token punctuation">,</span>
    G2D_BLT_ROTATE180 <span class="token operator">=</span> <span class="token number">0x00000100</span><span class="token punctuation">,</span>
    G2D_BLT_ROTATE270 <span class="token operator">=</span> <span class="token number">0x00000200</span><span class="token punctuation">,</span>
    G2D_BLT_MIRROR45 <span class="token operator">=</span> <span class="token number">0x00000400</span><span class="token punctuation">,</span>
    G2D_BLT_MIRROR135 <span class="token operator">=</span> <span class="token number">0x00000800</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>g2d_blt_flags<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">FLAG</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">G2D_BLT_NONE</td><td style="text-align:left;">纯拷贝</td></tr><tr><td style="text-align:left;">G2D_BLT_PIXEL_ALPHA</td><td style="text-align:left;">点alpha标志</td></tr><tr><td style="text-align:left;">G2D_BLT_PLANE_ALPHA</td><td style="text-align:left;">面alpha标志</td></tr><tr><td style="text-align:left;">G2D_BLT_MULTI_ALPHA</td><td style="text-align:left;">混合alpha标志</td></tr><tr><td style="text-align:left;">G2D_BLT_SRC_COLORKEY</td><td style="text-align:left;">源colorkey标志</td></tr><tr><td style="text-align:left;">G2D_BLT_DST_COLORKEY</td><td style="text-align:left;">目标colorkey标志</td></tr><tr><td style="text-align:left;">G2D_BLT_FLIP_HORIZONTAL</td><td style="text-align:left;">水平翻转</td></tr><tr><td style="text-align:left;">G2D_BLT_FLIP_VERTICAL</td><td style="text-align:left;">垂直翻转</td></tr><tr><td style="text-align:left;">G2D_BLT_ROTATE90</td><td style="text-align:left;">逆时针旋转90度</td></tr><tr><td style="text-align:left;">G2D_BLT_ROTATE180</td><td style="text-align:left;">逆时针旋转180度</td></tr><tr><td style="text-align:left;">G2D_BLT_ROTATE270</td><td style="text-align:left;">逆时针旋转270度</td></tr><tr><td style="text-align:left;">G2D_BLT_MIRROR45</td><td style="text-align:left;">镜像45度</td></tr><tr><td style="text-align:left;">G2D_BLT_MIRROR135</td><td style="text-align:left;">镜像135度</td></tr></tbody></table><h4 id="g2d-fillrect-flags" tabindex="-1"><a class="header-anchor" href="#g2d-fillrect-flags" aria-hidden="true">#</a> g2d_fillrect_flags</h4><p><code>g2d_fillrect_flags</code> 用于描述一个fillrect 属性信息</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    G2D_FIL_NONE <span class="token operator">=</span> <span class="token number">0x00000000</span><span class="token punctuation">,</span>
    G2D_FIL_PIXEL_ALPHA <span class="token operator">=</span> <span class="token number">0x00000001</span><span class="token punctuation">,</span>
    G2D_FIL_PLANE_ALPHA <span class="token operator">=</span> <span class="token number">0x00000002</span><span class="token punctuation">,</span>
    G2D_FIL_MULTI_ALPHA <span class="token operator">=</span> <span class="token number">0x00000004</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>g2d_fillrect_flags<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">FLAG</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">G2D_FIL_NONE</td><td style="text-align:left;">纯填充</td></tr><tr><td style="text-align:left;">G2D_FIL_PIXEL_ALPHA</td><td style="text-align:left;">填充区域和目标做点alpha</td></tr><tr><td style="text-align:left;">G2D_FIL_PLANE_ALPHA</td><td style="text-align:left;">填充区域和目标做面alpha</td></tr><tr><td style="text-align:left;">G2D_FIL_MULTI_ALPHA</td><td style="text-align:left;">填充区域的alpha值 x 面alpha值后再和目标做alpha</td></tr></tbody></table><h4 id="g2d-blt-flags-h" tabindex="-1"><a class="header-anchor" href="#g2d-blt-flags-h" aria-hidden="true">#</a> g2d_blt_flags_h</h4><p><code>g2d_blt_flags_h</code> 定义二元光栅操作码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    G2D_BLT_NONE_H <span class="token operator">=</span> <span class="token number">0x0</span><span class="token punctuation">,</span>
    G2D_BLT_BLACKNESS<span class="token punctuation">,</span>
    G2D_BLT_NOTMERGEPEN<span class="token punctuation">,</span>
    G2D_BLT_MASKNOTPEN<span class="token punctuation">,</span>
    G2D_BLT_NOTCOPYPEN<span class="token punctuation">,</span>
    G2D_BLT_MASKPENNOT<span class="token punctuation">,</span>
    G2D_BLT_NOT<span class="token punctuation">,</span>
    G2D_BLT_XORPEN<span class="token punctuation">,</span>
    G2D_BLT_NOTMASKPEN<span class="token punctuation">,</span>
    G2D_BLT_MASKPEN<span class="token punctuation">,</span>
    G2D_BLT_NOTXORPEN<span class="token punctuation">,</span>
    G2D_BLT_NOP<span class="token punctuation">,</span>
    G2D_BLT_MERGENOTPEN<span class="token punctuation">,</span>
    G2D_BLT_COPYPEN<span class="token punctuation">,</span>
    G2D_BLT_MERGEPENNOT<span class="token punctuation">,</span>
    G2D_BLT_MERGEPEN<span class="token punctuation">,</span>
    G2D_BLT_WHITENESS <span class="token operator">=</span> <span class="token number">0x000000ff</span><span class="token punctuation">,</span>

    G2D_ROT_90  <span class="token operator">=</span> <span class="token number">0x00000100</span><span class="token punctuation">,</span>
    G2D_ROT_180 <span class="token operator">=</span> <span class="token number">0x00000200</span><span class="token punctuation">,</span>
    G2D_ROT_270 <span class="token operator">=</span> <span class="token number">0x00000300</span><span class="token punctuation">,</span>
    G2D_ROT_0   <span class="token operator">=</span> <span class="token number">0x00000400</span><span class="token punctuation">,</span>
    G2D_ROT_H <span class="token operator">=</span> <span class="token number">0x00001000</span><span class="token punctuation">,</span>
    G2D_ROT_V <span class="token operator">=</span> <span class="token number">0x00002000</span><span class="token punctuation">,</span>

<span class="token comment">/*  G2D_SM_TDLR_1  =    0x10000000, */</span>
    G2D_SM_DTLR_1 <span class="token operator">=</span> <span class="token number">0x10000000</span><span class="token punctuation">,</span>
<span class="token comment">/*  G2D_SM_TDRL_1  =    0x20000000, */</span>
<span class="token comment">/*  G2D_SM_DTRL_1  =    0x30000000, */</span>
<span class="token punctuation">}</span> g2d_blt_flags_h<span class="token punctuation">;</span>
G2D_BLT_NONE 单个源操作
G2D_BLT_BLACK BLACKNESS <span class="token operator">:</span>使用与物理调色板的索引<span class="token number">0</span>相关的色彩来填充目标矩形区域<span class="token punctuation">,</span><span class="token punctuation">(</span>对缺省的物理调色板<span class="token punctuation">,</span>该颜
色为黑色<span class="token punctuation">)</span>
G2D_BLT_NOTMERGEPEN dst <span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span>dst<span class="token operator">+</span>src<span class="token punctuation">)</span> <span class="token operator">:</span>
G2D_BLT_MASKNOTPEN dst <span class="token operator">=</span><span class="token operator">~</span>src<span class="token operator">&amp;</span>dst
G2D_BLT_NOTCOPYPEN dst <span class="token operator">=</span><span class="token operator">~</span>src
G2D_BLT_MASKPENNOT dst <span class="token operator">=</span>src<span class="token operator">&amp;</span><span class="token operator">~</span>dst
G2D_BLT_NOT dst <span class="token operator">=</span><span class="token operator">~</span>dst <span class="token operator">:</span>使目标矩形区域颜色取反
G2D_BLT_XORPEN dst <span class="token operator">=</span>src<span class="token operator">^</span>dst
G2D_BLT_NOTMASKPEN dst <span class="token operator">=</span><span class="token operator">~</span><span class="token punctuation">(</span>src<span class="token operator">&amp;</span>dst<span class="token punctuation">)</span>
G2D_BLT_MASKPEN dst <span class="token operator">=</span>src<span class="token operator">&amp;</span>dst
G2D_BLT_NOTXORPEN dst <span class="token operator">=</span><span class="token operator">~</span><span class="token punctuation">(</span>src<span class="token operator">^</span>dst<span class="token punctuation">)</span>
G2D_BLT_NOP dst <span class="token operator">=</span>dst
G2D_BLT_MERGENOTPEN dst <span class="token operator">=</span><span class="token operator">~</span>src<span class="token operator">+</span>dst
G2D_BLT_COPEPEN dst <span class="token operator">=</span>src
G2D_BLT_MERGEPENNOT dst <span class="token operator">=</span>src<span class="token operator">+</span><span class="token operator">~</span>dst
G2D_BLT_MERGEPEN dst <span class="token operator">=</span>src<span class="token operator">+</span>dst
G2D_BLT_WHITE WHITENESS <span class="token operator">:</span>使用与物理调色板中索引<span class="token number">1</span>有关的颜色填充目标矩形区域<span class="token punctuation">(</span>对于缺省物理调色板来说<span class="token punctuation">,</span>这
个颜色为白色<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="g2d-image-enh" tabindex="-1"><a class="header-anchor" href="#g2d-image-enh" aria-hidden="true">#</a> g2d_image_enh</h4><p><code>g2d_image_enh</code> 主要描述图片的宽高、存放地址、是否做Clip 处理，是否为预乘等。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span>      bbuff<span class="token punctuation">;</span>
    __u32        color<span class="token punctuation">;</span>
    g2d_fmt_enh  format<span class="token punctuation">;</span>
    __u32        laddr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    __u32        haddr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    __u32        width<span class="token punctuation">;</span>
    __u32        height<span class="token punctuation">;</span>
    __u32        align<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    g2d_rect     clip_rect<span class="token punctuation">;</span>
    g2d_size     resize<span class="token punctuation">;</span>
    g2d_coor     coor<span class="token punctuation">;</span>

    __u32        gamut<span class="token punctuation">;</span>
    <span class="token keyword">int</span>      bpremul<span class="token punctuation">;</span>
    __u8         alpha<span class="token punctuation">;</span>
    g2d_alpha_mode_enh mode<span class="token punctuation">;</span>
    <span class="token keyword">int</span>      fd<span class="token punctuation">;</span>
    __u32 use_phy_addr<span class="token punctuation">;</span>
<span class="token punctuation">}</span> g2d_image_enh<span class="token punctuation">;</span>
format<span class="token operator">:</span> 图格式
laddr Buffer<span class="token operator">:</span> 起始低位地址
haddr Buffer<span class="token operator">:</span> 起始高位地址
width <span class="token operator">:</span> 图宽度（in pixel）
height <span class="token operator">:</span> 图高度（in pixel）
pitch <span class="token operator">:</span> Buffer的pitch
clip_rect <span class="token operator">:</span> ROI矩形
gamut <span class="token operator">:</span> 图的色域
bpremul <span class="token operator">:</span> 是否为预乘
alpha <span class="token operator">:</span> 面alpha值
mode <span class="token operator">:</span> alpha模式设置
use_phy_addr<span class="token operator">:</span> 是否使用物理地址的标志。<span class="token number">1</span>表示使用，<span class="token number">0</span>表示使用fd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意: 当 <code>use_phy_addr</code> 为 <code>1</code> 的时候，你必须自己设置好 <code>laddr</code> 和 <code>haddr</code>，并自行做好偏移。使用<code>fd</code> 则不需要设置这两个数组。</p><h4 id="g2d-fmt-enh" tabindex="-1"><a class="header-anchor" href="#g2d-fmt-enh" aria-hidden="true">#</a> g2d_fmt_enh</h4><p><code>g2d_fmt_enh</code> 用于描述G2D 模块支持的格式</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>typedef enum {
    G2D_FORMAT_ARGB8888,
    G2D_FORMAT_ABGR8888,
    G2D_FORMAT_RGBA8888,
    G2D_FORMAT_BGRA8888,
    G2D_FORMAT_XRGB8888,
    G2D_FORMAT_XBGR8888,
    G2D_FORMAT_RGBX8888,
    G2D_FORMAT_BGRX8888,
    G2D_FORMAT_RGB888,
    G2D_FORMAT_BGR888,
    G2D_FORMAT_RGB565,
    G2D_FORMAT_BGR565,
    G2D_FORMAT_ARGB4444,
    G2D_FORMAT_ABGR4444,
    G2D_FORMAT_RGBA4444,
    G2D_FORMAT_BGRA4444,
    G2D_FORMAT_ARGB1555,
    G2D_FORMAT_ABGR1555,
    G2D_FORMAT_RGBA5551,
    G2D_FORMAT_BGRA5551,
    G2D_FORMAT_ARGB2101010,
    G2D_FORMAT_ABGR2101010,
    G2D_FORMAT_RGBA1010102,
    G2D_FORMAT_BGRA1010102,

    /* invailed for UI channel */
    G2D_FORMAT_IYUV422_V0Y1U0Y0 = 0x20,
    G2D_FORMAT_IYUV422_Y1V0Y0U0,
    G2D_FORMAT_IYUV422_U0Y1V0Y0,
    G2D_FORMAT_IYUV422_Y1U0Y0V0,

    G2D_FORMAT_YUV422UVC_V1U1V0U0,
    G2D_FORMAT_YUV422UVC_U1V1U0V0,
    G2D_FORMAT_YUV422_PLANAR,

    G2D_FORMAT_YUV420UVC_V1U1V0U0 = 0x28,
    G2D_FORMAT_YUV420UVC_U1V1U0V0,
    G2D_FORMAT_YUV420_PLANAR,

    G2D_FORMAT_YUV411UVC_V1U1V0U0 = 0x2c,
    G2D_FORMAT_YUV411UVC_U1V1U0V0,
    G2D_FORMAT_YUV411_PLANAR,

    G2D_FORMAT_Y8 = 0x30,

    /* YUV 10bit format */
    G2D_FORMAT_YVU10_P010 = 0x34,

    G2D_FORMAT_YVU10_P210 = 0x36,

    G2D_FORMAT_YVU10_444 = 0x38,
    G2D_FORMAT_YUV10_444 = 0x39,
    G2D_FORMAT_MAX,
} g2d_fmt_enh;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="g2d-rop3-cmd-flag" tabindex="-1"><a class="header-anchor" href="#g2d-rop3-cmd-flag" aria-hidden="true">#</a> g2d_rop3_cmd_flag</h4><p><code>g2d_rop3_cmd_flag</code> 用于定义三元光栅操作码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    G2D_ROP3_BLACKNESS <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">,</span>
    G2D_ROP3_NOTSRCERASE <span class="token operator">=</span> <span class="token number">0x11</span><span class="token punctuation">,</span>
    G2D_ROP3_NOTSRCCOPY <span class="token operator">=</span> <span class="token number">0x33</span><span class="token punctuation">,</span>
    G2D_ROP3_SRCERASE <span class="token operator">=</span> <span class="token number">0x44</span><span class="token punctuation">,</span>
    G2D_ROP3_DSTINVERT <span class="token operator">=</span> <span class="token number">0x55</span><span class="token punctuation">,</span>
    G2D_ROP3_PATINVERT <span class="token operator">=</span> <span class="token number">0x5A</span><span class="token punctuation">,</span>
    G2D_ROP3_SRCINVERT <span class="token operator">=</span> <span class="token number">0x66</span><span class="token punctuation">,</span>
    G2D_ROP3_SRCAND <span class="token operator">=</span> <span class="token number">0x88</span><span class="token punctuation">,</span>
    G2D_ROP3_MERGEPAINT <span class="token operator">=</span> <span class="token number">0xBB</span><span class="token punctuation">,</span>
    G2D_ROP3_MERGECOPY <span class="token operator">=</span> <span class="token number">0xC0</span><span class="token punctuation">,</span>
    G2D_ROP3_SRCCOPY <span class="token operator">=</span> <span class="token number">0xCC</span><span class="token punctuation">,</span>
    G2D_ROP3_SRCPAINT <span class="token operator">=</span> <span class="token number">0xEE</span><span class="token punctuation">,</span>
    G2D_ROP3_PATCOPY <span class="token operator">=</span> <span class="token number">0xF0</span><span class="token punctuation">,</span>
    G2D_ROP3_PATPAINT <span class="token operator">=</span> <span class="token number">0xFB</span><span class="token punctuation">,</span>
    G2D_ROP3_WHITENESS <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> g2d_rop3_cmd_flag<span class="token punctuation">;</span>
G2D_ROP3_BLACKNESS dst <span class="token operator">=</span> BLACK
G2D_ROP3_NOTSRCERASE dst <span class="token operator">=</span> <span class="token punctuation">(</span>NOT src<span class="token punctuation">)</span> <span class="token function">AND</span> <span class="token punctuation">(</span>NOT dst<span class="token punctuation">)</span>
G2D_ROP3_NOTSRCCOPY dst <span class="token operator">=</span> <span class="token punctuation">(</span>NOT src<span class="token punctuation">)</span> <span class="token operator">:</span>将源矩形区域颜色取反<span class="token punctuation">,</span>拷贝到目标矩形区域
G2D_ROP3_SRCERASE dst <span class="token operator">=</span> src <span class="token function">AND</span> <span class="token punctuation">(</span>NOT dst <span class="token punctuation">)</span>
G2D_ROP3_DSTINVERT dst <span class="token operator">=</span> <span class="token punctuation">(</span>NOT dst<span class="token punctuation">)</span>
G2D_ROP3_PATINVERT dst <span class="token operator">=</span> pattern XOR dst <span class="token operator">:</span>通过使用布尔型的异或<span class="token punctuation">(</span>XOR<span class="token punctuation">)</span>操作符将特定模式和目标矩形区域颜色合并
G2D_ROP3_SRCINVERT dst <span class="token operator">=</span> src XOR dst <span class="token operator">:</span>通过使用布尔型的异或<span class="token punctuation">(</span>XOR<span class="token punctuation">)</span>操作符将源和目标矩形区域颜色合并
G2D_ROP3_SRCAND dst <span class="token operator">=</span> srcAND dst <span class="token operator">:</span>通过使用与操作符将源和目标矩形区域颜色值合并
G2D_ROP3_MERGEPAINT dst <span class="token operator">=</span> <span class="token punctuation">(</span>NOT src<span class="token punctuation">)</span> OR dst <span class="token operator">:</span>通过使用布尔型的或<span class="token punctuation">(</span>OR<span class="token punctuation">)</span>操作符将反向的源矩形区域的颜色与目标矩形区域颜色合并
G2D_ROP3_MERGECOPY dst <span class="token operator">=</span> <span class="token punctuation">(</span>src AND pattern<span class="token punctuation">)</span>
G2D_ROP3_SRCCOPY dst <span class="token operator">=</span> src <span class="token operator">:</span>将源矩形区域直接拷贝到目标矩形区域
G2D_ROP3_SRCPAINT dst <span class="token operator">=</span> src OR dst <span class="token operator">:</span>通过使用布尔型的或<span class="token punctuation">(</span>OR<span class="token punctuation">)</span>操作符将源和目标矩形区域颜色合并
G2D_ROP3_PATCOPY dst <span class="token operator">=</span> pattern
G2D_ROP3_PATPAINT dst <span class="token operator">=</span> DPSnoo <span class="token operator">:</span>通过使用布尔型的或<span class="token punctuation">(</span>OR<span class="token punctuation">)</span>操作符将源矩形区域取反后的颜色值与特定模式的颜色合并<span class="token punctuation">,</span>然后使用OR操作符与该操作的结果与目标矩形区域内的颜色合并<span class="token punctuation">.</span>
G2D_ROP3_WHITENESS dst <span class="token operator">=</span> WHITE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="g2d-bld-cmd-flag" tabindex="-1"><a class="header-anchor" href="#g2d-bld-cmd-flag" aria-hidden="true">#</a> g2d_bld_cmd_flag</h4><p><code>g2d_bld_cmd_flag</code> 定义BLD 操作命令</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    G2D_BLD_CLEAR <span class="token operator">=</span> <span class="token number">0x00000001</span><span class="token punctuation">,</span>
    G2D_BLD_COPY <span class="token operator">=</span> <span class="token number">0x00000002</span><span class="token punctuation">,</span>
    G2D_BLD_DST <span class="token operator">=</span> <span class="token number">0x00000003</span><span class="token punctuation">,</span>
    G2D_BLD_SRCOVER <span class="token operator">=</span> <span class="token number">0x00000004</span><span class="token punctuation">,</span>
    G2D_BLD_DSTOVER <span class="token operator">=</span> <span class="token number">0x00000005</span><span class="token punctuation">,</span>
    G2D_BLD_SRCIN <span class="token operator">=</span> <span class="token number">0x00000006</span><span class="token punctuation">,</span>
    G2D_BLD_DSTIN <span class="token operator">=</span> <span class="token number">0x00000007</span><span class="token punctuation">,</span>
    G2D_BLD_SRCOUT <span class="token operator">=</span> <span class="token number">0x00000008</span><span class="token punctuation">,</span>
    G2D_BLD_DSTOUT <span class="token operator">=</span> <span class="token number">0x00000009</span><span class="token punctuation">,</span>
    G2D_BLD_SRCATOP <span class="token operator">=</span> <span class="token number">0x0000000a</span><span class="token punctuation">,</span>
    G2D_BLD_DSTATOP <span class="token operator">=</span> <span class="token number">0x0000000b</span><span class="token punctuation">,</span>
    G2D_BLD_XOR <span class="token operator">=</span> <span class="token number">0x0000000c</span><span class="token punctuation">,</span>
    G2D_CK_SRC <span class="token operator">=</span> <span class="token number">0x00010000</span><span class="token punctuation">,</span>
    G2D_CK_DST <span class="token operator">=</span> <span class="token number">0x00020000</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> g2d_bld_cmd_flag<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="g2d-ck" tabindex="-1"><a class="header-anchor" href="#g2d-ck" aria-hidden="true">#</a> g2d_ck</h4><p><code>g2d_ck</code> 定义了colorkey 操作的参数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> match_rule<span class="token punctuation">;</span>
    __u32 max_color<span class="token punctuation">;</span>
    __u32 min_color<span class="token punctuation">;</span>
<span class="token punctuation">}</span> g2d_ck<span class="token punctuation">;</span>
match_rule 当match_rule为假时，Color Min<span class="token operator">=</span><span class="token operator">&lt;</span>Color<span class="token operator">&lt;=</span>Color Max表示满足匹配条件
当match_rule为真时，Color<span class="token operator">&gt;</span>Color Max or Color <span class="token operator">&lt;</span>Color Min表示满足匹配条件
ck_max_color Color Max
ck_min_color Color Min
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="g2d-alpha-mode-enh" tabindex="-1"><a class="header-anchor" href="#g2d-alpha-mode-enh" aria-hidden="true">#</a> g2d_alpha_mode_enh</h4><p><code>g2d_alpha_mode_enh</code> 定义进行alpha blend 操作时，选择的alpha mode</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>typedef enum{
    G2D_PIXEL_ALPHA,
    G2D_GLOBAL_ALPHA,
    G2D_MIXER_ALPHA,
}g2d_alpha_mode_enh;
G2D_PIXEL_ALPHA 点 alpha
G2D_GLOBAL_ALPHA 面 alpha
G2D_MIXER_ALPHA 混合 alpha
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="g2d-color-gmt" tabindex="-1"><a class="header-anchor" href="#g2d-color-gmt" aria-hidden="true">#</a> g2d_color_gmt</h4><p><code>g2d_color_gmt</code> 定义进行位操作时，选择的颜色空间</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span><span class="token punctuation">{</span>
    G2D_BT601<span class="token punctuation">,</span>
    G2D_BT709<span class="token punctuation">,</span>
    G2D_BT2020<span class="token punctuation">,</span>
<span class="token punctuation">}</span>g2d_color_gmt<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="g2d-blt-h" tabindex="-1"><a class="header-anchor" href="#g2d-blt-h" aria-hidden="true">#</a> g2d_blt_h</h4><p><code>g2d_blt_h</code> 实现对 <code>foreground</code> 带缩放的ROP2 处理。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    g2d_blt_flags_h flag_h<span class="token punctuation">;</span>
    g2d_image_enh src_image_h<span class="token punctuation">;</span>
    g2d_image_enh dst_image_h<span class="token punctuation">;</span>
<span class="token punctuation">}</span> g2d_blt_h<span class="token punctuation">;</span>
flag_h <span class="token operator">:</span> blt操作flag标志，增强版标志
src_image_h <span class="token operator">:</span> 源图像信息<span class="token punctuation">,</span>增强版的图像参数<span class="token punctuation">,</span>详见g2d_image_enh
dst_image_h <span class="token operator">:</span> 目标图像信息，增强版的图像参数
color <span class="token operator">:</span> colorkey颜色
alpha <span class="token operator">:</span> 面alpha值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数接口" tabindex="-1"><a class="header-anchor" href="#函数接口" aria-hidden="true">#</a> 函数接口</h3><p>G2D 驱动向OS 或其他 <code>driver hal</code> 暴露的接口如下表，模块使用主要通过 <code>ioctl</code> 实现，即 <code>sunxi_g2d_control</code>，后续将主要介绍该接口的用法。</p><h4 id="开启-g2d" tabindex="-1"><a class="header-anchor" href="#开启-g2d" aria-hidden="true">#</a> 开启 G2D</h4><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">sunxi_g2d_open</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数</p><ul><li>无</li></ul><p>返回值</p><ul><li>0：成功</li><li>其他：失败</li></ul><h4 id="关闭-g2d" tabindex="-1"><a class="header-anchor" href="#关闭-g2d" aria-hidden="true">#</a> 关闭 G2D</h4><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">sunxi_g2d_close</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数</p><ul><li>无</li></ul><p>返回值</p><ul><li>0：成功</li><li>其他：失败</li></ul><h4 id="g2d-驱动-ioctl-接口" tabindex="-1"><a class="header-anchor" href="#g2d-驱动-ioctl-接口" aria-hidden="true">#</a> G2D 驱动 ioctl 接口</h4><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span><span class="token keyword">int</span> cmd<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数</p><ul><li>cmd: 操作类型</li><li>arg：参数</li></ul><p>返回值</p><ul><li>0：成功</li><li>其他：失败</li></ul><h2 id="g2d-ioctl-操作示例" tabindex="-1"><a class="header-anchor" href="#g2d-ioctl-操作示例" aria-hidden="true">#</a> G2D ioctl 操作示例</h2><h3 id="单幅图的缩放、格式转换" tabindex="-1"><a class="header-anchor" href="#单幅图的缩放、格式转换" aria-hidden="true">#</a> 单幅图的缩放、格式转换</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>g2d_cmd\`：\`G2D_CMD_BITBLT_H
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实现单幅图的缩放、格式转换等。实现对foreground 带缩放的 ROP2 处理。</p><h4 id="旋转功能" tabindex="-1"><a class="header-anchor" href="#旋转功能" aria-hidden="true">#</a> 旋转功能</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>blit<span class="token punctuation">.</span>flag_h <span class="token operator">=</span> G2D_ROT_90<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> saddr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_ARGB8888<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_GLOBAL_ALPHA<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">1080</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">1080</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0xff</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> daddr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_ARGB8888<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_GLOBAL_ALPHA<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">1080</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0xff</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">1080</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span>G2D_CMD_BITBLT_H<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>blit<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_BITBLT_H failure!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>__FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> �<span class="token number">6</span>�<span class="token number">21</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="缩放功能" tabindex="-1"><a class="header-anchor" href="#缩放功能" aria-hidden="true">#</a> 缩放功能</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>blit<span class="token punctuation">.</span>flag_h <span class="token operator">=</span> G2D_BLT_NONE_0<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> saddr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_ARGB8888<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_GLOBAL_ALPHA<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0xff</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> daddr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_ARGB8888<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_GLOBAL_ALPHA<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">1080</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0xff</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">1080</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span>G2D_CMD_BITBLT_H<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>blit<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_BITBLT_H failure!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
         __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> �<span class="token number">6</span>�<span class="token number">21</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="格式转换" tabindex="-1"><a class="header-anchor" href="#格式转换" aria-hidden="true">#</a> 格式转换</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>blit<span class="token punctuation">.</span>flag_h <span class="token operator">=</span> G2D_BLT_NONE_0<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> saddr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_ARGB8888<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_GLOBAL_ALPHA<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0xff</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> daddr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_YUV420UVC_V1U1V0U0<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_GLOBAL_ALPHA<span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0xff</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
blit<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span>G2D_CMD_BITBLT_H<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>blit<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_BITBLT_H failure!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
         __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> �<span class="token number">6</span>�<span class="token number">21</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="两幅图的bld操作" tabindex="-1"><a class="header-anchor" href="#两幅图的bld操作" aria-hidden="true">#</a> 两幅图的BLD操作</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>g2d_cmd\`：\`G2D_CMD_BLD_H
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实现两幅图的BLD(porter�6�2duff) 操作</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>blend<span class="token punctuation">.</span>bld_cmd <span class="token operator">=</span> G2D_BLD_COPY<span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_GLOBAL_ALPHA<span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_ARGB8888<span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_GLOBAL_ALPHA<span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_ARGB8888<span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
blend<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span>G2D_CMD_BLD_H<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>blend<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_BLD_H failure!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
         __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> �<span class="token number">6</span>�<span class="token number">21</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="掩膜图光栅操作" tabindex="-1"><a class="header-anchor" href="#掩膜图光栅操作" aria-hidden="true">#</a> 掩膜图光栅操作</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>g2d_cmd\`：\`G2D_CMD_MASK_H
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据掩膜图和光栅操作码对src、pattern 和dst 进行操作，并将结果保存到dst 中.</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>mask<span class="token punctuation">.</span>back_flag <span class="token operator">=</span> G2D_ROP3_NOTSRCCOPY<span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>fore_flag <span class="token operator">=</span> G2D_ROP3_SRCINVERT<span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_GLOBAL_ALPHA<span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_GLOBAL_ALPHA<span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>mask_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>mask_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>mask_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>mask_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>mask_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>mask_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>mask_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_GLOBAL_ALPHA<span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>ptn_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>ptn_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>ptn_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>ptn_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>ptn_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>ptn_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>ptn_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_GLOBAL_ALPHA<span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0xff</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>mask_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0xff</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>ptn_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0xff</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0xff</span><span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_ARGB8888<span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>mask_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_ARGB8888<span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>ptn_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_ARGB8888<span class="token punctuation">;</span>
mask<span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_ARGB8888<span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span>G2D_CMD_MASK_H<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mask<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_MASK_H failure!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
         __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> �<span class="token number">6</span>�<span class="token number">21</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="批处理接口" tabindex="-1"><a class="header-anchor" href="#批处理接口" aria-hidden="true">#</a> 批处理接口</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>g2d_cmd\`：\`G2D_CMD_MIXER_TASK
struct mixer_para {
    g2d_operation_flag op_flag;
    g2d_blt_flags_h flag_h;
    g2d_rop3_cmd_flag back_flag;
    g2d_rop3_cmd_flag fore_flag;
    g2d_bld_cmd_flag bld_cmd;
    g2d_image_enh src_image_h;
    g2d_image_enh dst_image_h;
    g2d_image_enh ptn_image_h;
    g2d_image_enh mask_image_h;
    g2d_ck ck_para;
};

typedef enum {
    OP_FILLRECT = 0x1,
    OP_BITBLT = 0x2,
    OP_BLEND = 0x4,
    OP_MASK = 0x8,
    OP_SPLIT_MEM = 0x10,
} g2d_operation_flag;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>struct mixer_para</code> 是 RCQ 批处理的核心结构体，可以看到除了第一个成员，其它成员的类型都是旧驱动里面有的，<code>struct mixer_para</code> 是之前驱动接口结构体的一个合集，如图所示：</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part2/chapter8/image7.jpg" alt="image7"></p><p>所以你可以用批处理接口完成上面其它接口的功能，只要你设置好对应的成员和<code>g2d_operation_flag</code>即可.</p><p>其中 arg 的参数如下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>arg[0]: 设备文件标识符arg指向mixer_para指针，批处理的话就是数组指针。
arg[1]: 指针需要处理的帧的数量，大于等于1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>用户要做的事情，就是填充好mixer_para 数组，申请好输入输出内存，将要处理的图像写入到输入内存里面，将处理好的图像在输出内存里面取出来。</p><p>下面是批处理缩放16 帧示例，其中4 帧是rgb 格式的缩放，6 帧是Y8 的是缩放，6 帧是nv12 的缩放。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">RGB_IMAGE_NAME</span> <span class="token string">&quot;../../pic/c1080_good.rgb&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">Y8_IMAGE_NAME</span> <span class="token string">&quot;../../pic/en_dmabuf_bike_1280x720_220_Y8.bin&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">NV12_IMAGE_NAME</span> <span class="token string">&quot;../../pic/bike_1280x720_220.bin&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">FRAME_TO_BE_PROCESS</span> <span class="token expression"><span class="token number">16</span></span></span>

<span class="token comment">/*4 rgb convert 6 Y8 convert 6 yuv420 convert*/</span>
<span class="token keyword">unsigned</span> <span class="token keyword">int</span> out_width<span class="token punctuation">[</span>FRAME_TO_BE_PROCESS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token number">192</span><span class="token punctuation">,</span>  <span class="token number">154</span><span class="token punctuation">,</span>  <span class="token number">108</span><span class="token punctuation">,</span>  <span class="token number">321</span><span class="token punctuation">,</span>  <span class="token number">447</span><span class="token punctuation">,</span>  <span class="token number">960</span><span class="token punctuation">,</span> <span class="token number">241</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">,</span>
    <span class="token number">1920</span><span class="token punctuation">,</span> <span class="token number">1439</span><span class="token punctuation">,</span> <span class="token number">1280</span><span class="token punctuation">,</span> <span class="token number">1920</span><span class="token punctuation">,</span> <span class="token number">2048</span><span class="token punctuation">,</span> <span class="token number">720</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">unsigned</span> <span class="token keyword">int</span> out_height<span class="token punctuation">[</span>FRAME_TO_BE_PROCESS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token number">108</span><span class="token punctuation">,</span>  <span class="token number">87</span><span class="token punctuation">,</span>  <span class="token number">70</span><span class="token punctuation">,</span>   <span class="token number">217</span><span class="token punctuation">,</span> <span class="token number">213</span><span class="token punctuation">,</span> <span class="token number">640</span><span class="token punctuation">,</span>
    <span class="token number">840</span><span class="token punctuation">,</span>  <span class="token number">240</span><span class="token punctuation">,</span> <span class="token number">1080</span><span class="token punctuation">,</span> <span class="token number">777</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">1080</span><span class="token punctuation">,</span>
    <span class="token number">2048</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">,</span>  <span class="token number">240</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">test_info_t</span> <span class="token punctuation">{</span>
  <span class="token keyword">struct</span> <span class="token class-name">mixer_para</span> info<span class="token punctuation">[</span>FRAME_TO_BE_PROCESS<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>flag_h <span class="token operator">=</span> G2D_BLT_NONE_H<span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>op_flag <span class="token operator">=</span> OP_BITBLT<span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_RGB888<span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">1080</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">1080</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token number">0xee8899</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_PIXEL_ALPHA<span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0xaa</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>align<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>align<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>align<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_RGB888<span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">480</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">1080</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token number">0xee8899</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>mode <span class="token operator">=</span> G2D_PIXEL_ALPHA<span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>align<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>align<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>align<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> FRAME_TO_BE_PROCESS<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">memcpy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">mixer_para</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> out_width<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> out_height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> out_width<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> out_height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      test_info<span class="token punctuation">.</span>out_size<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>width <span class="token operator">*</span>
                              test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_BGR888<span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">1080</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">1080</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>in_size<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1920</span> <span class="token operator">*</span> <span class="token number">1080</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">;</span>
      <span class="token function">snprintf</span><span class="token punctuation">(</span>test_info<span class="token punctuation">.</span>src_image_name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> RGB_IMAGE_NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      test_info<span class="token punctuation">.</span>out_size<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>width <span class="token operator">*</span>
                              test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_Y8<span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">720</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">720</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>in_size<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1280</span> <span class="token operator">*</span> <span class="token number">720</span><span class="token punctuation">;</span>
      <span class="token function">snprintf</span><span class="token punctuation">(</span>test_info<span class="token punctuation">.</span>src_image_name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> Y8_IMAGE_NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      test_info<span class="token punctuation">.</span>out_size<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>width <span class="token operator">*</span>
                              test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> G2D_FORMAT_YUV420UVC_U1V1U0V0<span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">720</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1280</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>clip_rect<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">720</span><span class="token punctuation">;</span>
      test_info<span class="token punctuation">.</span>in_size<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1280</span> <span class="token operator">*</span> <span class="token number">720</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
      <span class="token function">snprintf</span><span class="token punctuation">(</span>test_info<span class="token punctuation">.</span>src_image_name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> NV12_IMAGE_NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ret <span class="token operator">=</span> <span class="token function">ion_memory_request</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>test_info<span class="token punctuation">.</span>dst_ion<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
                             test_info<span class="token punctuation">.</span>out_size<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>fd <span class="token operator">=</span>
        test_info<span class="token punctuation">.</span>dst_ion<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fd_data<span class="token punctuation">.</span>fd<span class="token punctuation">;</span>  <span class="token comment">// rtos�6�2hal中的驱动不支持使用fd，这里请修改为物理地址，并设置好偏移</span>
    test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>format <span class="token operator">=</span> test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>format<span class="token punctuation">;</span>
    ret <span class="token operator">=</span> <span class="token function">ion_memory_request</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>test_info<span class="token punctuation">.</span>src_ion<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
                             test_info<span class="token punctuation">.</span>src_image_name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> test_info<span class="token punctuation">.</span>in_size<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>fd <span class="token operator">=</span>
        test_info<span class="token punctuation">.</span>src_ion<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fd_data<span class="token punctuation">.</span>fd<span class="token punctuation">;</span>  <span class="token comment">// rtos�6�2hal中的驱动不支持使用fd，这里请修改为物理地址，并设置好偏移</span>
  <span class="token punctuation">}</span>
  arg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span>test_info<span class="token punctuation">.</span>info<span class="token punctuation">;</span>
  arg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> FRAME_TO_BE_PROCESS<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span>G2D_CMD_MIXER_TASK<span class="token punctuation">,</span> <span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_MIXER_TASK failure!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
           __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">goto</span> FREE_SRC<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_MIXER_TASK SUCCESSFULL!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
         __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;save result data to file \\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">char</span> sufix<span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> FRAME_TO_BE_PROCESS<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">snprintf</span><span class="token punctuation">(</span>sufix<span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token string">&quot;rgb888&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span>
      <span class="token function">snprintf</span><span class="token punctuation">(</span>sufix<span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token string">&quot;y8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
      <span class="token function">snprintf</span><span class="token punctuation">(</span>sufix<span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token string">&quot;nv12&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">snprintf</span><span class="token punctuation">(</span>test_info<span class="token punctuation">.</span>dst_image_name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span>
             <span class="token string">&quot;../../ result/frame%d_%dx%d_to_%dx%d.%s&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span>
             test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>width<span class="token punctuation">,</span>
             test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src_image_h<span class="token punctuation">.</span>height<span class="token punctuation">,</span>
             test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>width<span class="token punctuation">,</span>
             test_info<span class="token punctuation">.</span>info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dst_image_h<span class="token punctuation">.</span>height<span class="token punctuation">,</span> sufix<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>test_info<span class="token punctuation">.</span>dst_fp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span>test_info<span class="token punctuation">.</span>dst_image_name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;wb+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span>
        <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;open file %s fail .\\ n&quot;</span><span class="token punctuation">,</span> test_info<span class="token punctuation">.</span>dst_image_name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      ret <span class="token operator">=</span> <span class="token function">fwrite</span><span class="token punctuation">(</span>test_info<span class="token punctuation">.</span>dst_ion<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>virt_addr<span class="token punctuation">,</span> test_info<span class="token punctuation">.</span>out_size<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>
                   test_info<span class="token punctuation">.</span>dst_fp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">fflush</span><span class="token punctuation">(</span>test_info<span class="token punctuation">.</span>src_fp<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Frame %d saved\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建新的批处理实例" tabindex="-1"><a class="header-anchor" href="#创建新的批处理实例" aria-hidden="true">#</a> 创建新的批处理实例</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>g2d_cmd\` ：\`G2D_CMD_CREATE_TASK
arg[0] arg指向mixer_para指针，批处理的话就是数组指针。
arg[1] 需要处理的帧的数量，大于等于1

处理后：
arg[0]对应的指针所指向的mixer_para内容会被更新。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该 <code>ioctl</code> 命令用于创建新的批处理实例，但不做硬件处理, 只是准备好软件。</p><p>这个过程会构造对应帧数的 <code>rcq</code> 队列内存以及进行输入输出图像的 <code>dma map</code> 和 <code>dma umap</code> 操作，构造完毕之后会更新 <code>mixer_para</code> 回应用层。</p><p><code>task_id</code> 是唯一的，只要不销毁批处理实例，会一直占据这个<code>id</code>，根据这个<code>id</code> 用户可以进一步操作，比如设置，销毁，获取当前 <code>mixer_para</code>。</p><p>如下例子，会创建两个不同帧数和输入输出格式的批处理实例，最终得到两个不同的<code>task id</code>，<code>task0</code> 和task1。<code>mixer_para</code> 如何构造参考 <code>G2D_CMD_MIXER_TASK</code> 的例子。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>arg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span>test_info<span class="token punctuation">.</span>info<span class="token punctuation">;</span>
arg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> FRAME_TO_BE_PROCESS<span class="token punctuation">;</span>

task0 <span class="token operator">=</span> <span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span>G2D_CMD_CREATE_TASK<span class="token punctuation">,</span> <span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>task0 <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_CREATE_TASK failure!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
         __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">goto</span> FREE_SRC<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_CREATE_TASK SUCCESSFULL!\\n&quot;</span><span class="token punctuation">,</span>
       <span class="token constant">__LINE__</span><span class="token punctuation">,</span>
       <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
       __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>

arg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span>test_info2<span class="token punctuation">.</span>info<span class="token punctuation">;</span>
arg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> FRAME_TO_BE_PROCESS2<span class="token punctuation">;</span>
task1 <span class="token operator">=</span> <span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span>G2D_CMD_CREATE_TASK<span class="token punctuation">,</span> <span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>task1 <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_CREATE_TASK failure!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
         __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">goto</span> FREE_SRC<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_CREATE_TASK SUCCESSFULL!\\n&quot;</span><span class="token punctuation">,</span>
       <span class="token constant">__LINE__</span><span class="token punctuation">,</span>
       <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
       __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行批处理的硬件操作" tabindex="-1"><a class="header-anchor" href="#执行批处理的硬件操作" aria-hidden="true">#</a> 执行批处理的硬件操作</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>g2d_cmd\`：\`G2D_CMD_TASK_APPLY
arg[0] task id(由G2D_CMD_CREATE_TASK命令获得）
arg[1] arg指向mixer_para指针，批处理的话就是数组指针
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该 <code>ioctl</code> 命令的作用是执行批处理的硬件操作。</p><p>值得注意 <code>arg[1]</code> 中的<code>mixer_para</code>，必须是<code>G2D_CMD_CREATE_TASK</code> 之后返回的 <code>mixer_para</code> 或者是通过另外一个 <code>ioctl</code> 命令<code>G2D_CMD_TASK_GET_PARA</code> 才行，这里不需要制定帧数的原因是前面的<code>G2D_CMD_CREATE_TASK</code> 已经指定好帧数，而<code>G2D_CMD_TASK_APPLY</code> 是基于<code>task id</code> 来执行的。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>arg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> task0<span class="token punctuation">;</span>
arg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span>test_info<span class="token punctuation">.</span>info<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span>G2D_CMD_TASK_APPLY<span class="token punctuation">,</span> <span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_TASK_APPLY failure!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
         __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">goto</span> FREE_SRC<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_TASK_APPLY SUCCESSFULL!\\n&quot;</span><span class="token punctuation">,</span>
       <span class="token constant">__LINE__</span><span class="token punctuation">,</span>
       <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
       __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>

arg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> task1<span class="token punctuation">;</span>
arg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span>test_info2<span class="token punctuation">.</span>info<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span>G2D_CMD_TASK_APPLY<span class="token punctuation">,</span> <span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_TASK_APPLY failure!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
         __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">goto</span> FREE_SRC<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_TASK_APPLY SUCCESSFULL!\\n&quot;</span><span class="token punctuation">,</span>
       <span class="token constant">__LINE__</span><span class="token punctuation">,</span>
       <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
       __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="销毁指定-task-id-的批处理实例" tabindex="-1"><a class="header-anchor" href="#销毁指定-task-id-的批处理实例" aria-hidden="true">#</a> 销毁指定 task id 的批处理实例</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>g2d_cmd\`： \`G2D_CMD_TASK_DESTROY
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该ioctl 命令的作用是销毁指定task id 的批处理实例。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>arg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> task0<span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span>G2D_CMD_TASK_DESTROY<span class="token punctuation">,</span> <span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_TASK_DESTROY failure!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
         __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">goto</span> FREE_SRC<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_TASK_DESTROY SUCCESSFULL!\\n&quot;</span><span class="token punctuation">,</span>
       <span class="token constant">__LINE__</span><span class="token punctuation">,</span>
       <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
       __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
arg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> task1<span class="token punctuation">;</span>
<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sunxi_g2d_control</span><span class="token punctuation">(</span>G2D_CMD_TASK_DESTROY<span class="token punctuation">,</span> <span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_TASK_DESTROY failure!\\n&quot;</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
         __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">goto</span> FREE_SRC<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d][%s][%s]G2D_CMD_TASK_DESTROY SUCCESSFULL!\\n&quot;</span><span class="token punctuation">,</span>
       <span class="token constant">__LINE__</span><span class="token punctuation">,</span>
       <span class="token constant">__FILE__</span><span class="token punctuation">,</span>
       __FUNCTION__<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取指定-task-id-的-mixer-para" tabindex="-1"><a class="header-anchor" href="#获取指定-task-id-的-mixer-para" aria-hidden="true">#</a> 获取指定 <code>task id</code> 的 <code>mixer para</code></h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>g2d_cmd\`：\`G2D_CMD_TASK_GET_PARA
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>用户必须自行保证传入的指针所指向的内存足够存放这么多帧的参数</p>`,142),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","chapter8.html.vue"]]);export{r as default};
