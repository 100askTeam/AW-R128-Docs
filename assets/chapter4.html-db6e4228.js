import{_ as n,o as a,c as s,e}from"./app-e85d5a28.js";const t={},c=e(`<h1 id="adc驱动烟雾传感器" tabindex="-1"><a class="header-anchor" href="#adc驱动烟雾传感器" aria-hidden="true">#</a> ADC驱动烟雾传感器</h1><table><thead><tr><th style="text-align:left;">本文案例代码</th><th style="text-align:left;">下载地址</th></tr></thead><tbody><tr><td style="text-align:left;">ADC驱动烟雾传感器案例代码</td><td style="text-align:left;">https://www.aw-ol.com/downloads?cat=24</td></tr></tbody></table><h2 id="原理介绍" tabindex="-1"><a class="header-anchor" href="#原理介绍" aria-hidden="true">#</a> 原理介绍</h2><p>MQ-2型烟雾传感器属于二氧化锡半导体气敏材料，属于表面离子式N型半 导体。当处于200、300℃温度时，二氧化锡吸附空气中的氧，形成氧的负离子吸附，使半导体中的电子密度减少，从而使其电阻值增加。当与烟雾接触时，如果晶粒间界处的势垒受到该烟雾的调制而变化，就会引起表而电导率的变化。利用这一点就可以获得这种烟雾存在的信息，烟雾浓度越大，电导率越大输出电阻越低。MQ2气体传感器可以很灵敏的检测到空气中的烟雾、液化气、丁烷、丙烷、甲烷、酒精、氢气等气体。</p><p>首先我们搭建电路，如下：</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter4/image1.png" alt=""></p><table><thead><tr><th style="text-align:left;">引脚</th><th style="text-align:left;">按键</th></tr></thead><tbody><tr><td style="text-align:left;">PB0</td><td style="text-align:left;">MQ2 AO脚</td></tr><tr><td style="text-align:left;">GND</td><td style="text-align:left;">MQ2 GND</td></tr><tr><td style="text-align:left;">3V3</td><td style="text-align:left;">MQ2 VCC</td></tr></tbody></table><h2 id="载入方案" tabindex="-1"><a class="header-anchor" href="#载入方案" aria-hidden="true">#</a> 载入方案</h2><p>我们使用的开发板是 R128-Devkit，需要开发 C906 核心的应用程序，所以载入方案选择<code>r128s2_module_c906</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">source</span> envsetup.sh 
$ lunch_rtos <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter4/image2.png" alt=""></p><h2 id="勾选-gpadc-驱动" tabindex="-1"><a class="header-anchor" href="#勾选-gpadc-驱动" aria-hidden="true">#</a> 勾选 GPADC 驱动</h2><p><code>mrtos_menuconfig</code> 找到下列驱动</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Drivers Options  ---&gt;
    soc related device drivers  ---&gt;
        GPADC devices ---&gt;
            [*] enable gpadc driver
            [*]   enable power protect driver
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter4/image3.png" alt=""></p><h2 id="编写程序" tabindex="-1"><a class="header-anchor" href="#编写程序" aria-hidden="true">#</a> 编写程序</h2><p>打开你喜欢的编辑器，修改文件：<code>lichee/rtos/projects/r128s2/module_c906/src/main.c</code></p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter4/image4.png" alt=""></p><h3 id="引入头文件" tabindex="-1"><a class="header-anchor" href="#引入头文件" aria-hidden="true">#</a> 引入头文件</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sunxi_hal_gpadc.h&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter4/image5.png" alt=""></p><p>由于MQ2是一个加热器驱动的传感器，如果长时间存放，传感器的校准可能会漂移。</p><p>长时间存放后首次使用时，传感器必须充分预热24-48小时以确保最大精度。</p><p>如果最近使用过传感器，则只需5-10分钟即可完全预热。 在预热期间，传感器读数通常很高，然后逐渐降低直到稳定。</p><p>为了实现预热功能，我们先实现一个 <code>sleep</code> 函数，等待预热完成再读取 ADC 电压值。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">msleep</span><span class="token punctuation">(</span><span class="token keyword">int</span> ms<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">vTaskDelay</span><span class="token punctuation">(</span>ms <span class="token operator">/</span> portTICK_RATE_MS<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter4/image6.png" alt=""></p><h2 id="adc-功能配置" tabindex="-1"><a class="header-anchor" href="#adc-功能配置" aria-hidden="true">#</a> ADC 功能配置</h2><h4 id="gpadc-初始化接口" tabindex="-1"><a class="header-anchor" href="#gpadc-初始化接口" aria-hidden="true">#</a> GPADC 初始化接口</h4><p>GPADC 模块初始化，主要初始化时钟，中断以及采样率配置等，这里我们初始化并检查即可。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">hal_gpadc_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="gpadc-通道初始化" tabindex="-1"><a class="header-anchor" href="#gpadc-通道初始化" aria-hidden="true">#</a> GPADC 通道初始化</h4><p>选择并配置 GPADC 某个通道，这里配置初始化0通道。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">hal_gpadc_channel_init</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="gpadc-读取电压接口" tabindex="-1"><a class="header-anchor" href="#gpadc-读取电压接口" aria-hidden="true">#</a> GPADC 读取电压接口</h4><p>读取0通道的ADC电压数据。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>ret <span class="token operator">=</span> <span class="token function">gpadc_read_channel_data</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="完整代码如下" tabindex="-1"><a class="header-anchor" href="#完整代码如下" aria-hidden="true">#</a> 完整代码如下</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// 预热模块</span>
<span class="token function">msleep</span><span class="token punctuation">(</span><span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 初始化 GPADC</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">hal_gpadc_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;ADC Init failed!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 初始化通道</span>
<span class="token function">hal_gpadc_channel_init</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 读取电压</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">uint32_t</span> vol_data <span class="token operator">=</span> <span class="token function">gpadc_read_channel_data</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;channel 0 vol data is %u\\n&quot;</span><span class="token punctuation">,</span> vol_data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 释放通道，这里没有用到</span>
<span class="token function">hal_gpadc_channel_exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 释放GPADC，这里没有用到</span>
<span class="token function">hal_gpadc_deinit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结果" tabindex="-1"><a class="header-anchor" href="#结果" aria-hidden="true">#</a> 结果</h2><p>烧录后可以看到输出的电压值。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter4/image7.png" alt=""></p>`,42),p=[c];function i(l,d){return a(),s("div",null,p)}const r=n(t,[["render",i],["__file","chapter4.html.vue"]]);export{r as default};
