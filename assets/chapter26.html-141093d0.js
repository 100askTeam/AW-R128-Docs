import{_ as a,o as e,c as s,e as n}from"./app-e85d5a28.js";const i={},l=n(`<h1 id="spi-dbi" tabindex="-1"><a class="header-anchor" href="#spi-dbi" aria-hidden="true">#</a> SPI DBI</h1><h2 id="模块介绍" tabindex="-1"><a class="header-anchor" href="#模块介绍" aria-hidden="true">#</a> 模块介绍</h2><p>DBI 为显示总线接口，用于传输视频数据，其主要有以下特点：</p><ul><li>支持3线、4线、2 data line 模式</li><li>支持由CPU或者DMA搬运数据</li><li>支持RGB111/RGB444/RGB565/RGB666/RGB888 video 格式</li><li>一条data line 的情况下，支持最大 RGB666 240x320 @30HZ</li><li>两条data line 情况下，最大支持 RGB888 320x480 @30HZ 或者 240x320 @60HZ</li><li>支持TE功能</li></ul><h2 id="模块配置介绍" tabindex="-1"><a class="header-anchor" href="#模块配置介绍" aria-hidden="true">#</a> 模块配置介绍</h2><p>配置路径如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Drivers Options 
    &gt; soc related device drivers 
        &gt; DBI Devices
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part2/chapter26/image1.png" alt=""></p><h2 id="模块源码结构" tabindex="-1"><a class="header-anchor" href="#模块源码结构" aria-hidden="true">#</a> 模块源码结构</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>├── common_dbi.c
├── common_dbi.h
├── hal_dbi.c
├── Kconfig
├── Makefile
├── modules.order
├── objects.mk
├── platform
│   ├── dbi_sun20iw2.c
│   └── dbi_sun20iw2.h
└────── platform_dbi.h
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模块接口说明" tabindex="-1"><a class="header-anchor" href="#模块接口说明" aria-hidden="true">#</a> 模块接口说明</h2><p>头文件</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;hal/sunxi_hal_dbi.h&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="接口使用说明" tabindex="-1"><a class="header-anchor" href="#接口使用说明" aria-hidden="true">#</a> 接口使用说明</h2><h3 id="dbi-初始化接口" tabindex="-1"><a class="header-anchor" href="#dbi-初始化接口" aria-hidden="true">#</a> DBI 初始化接口</h3><p>DBI 模块初始化，主要申请中断、pinctrl初始化、clk初始化等</p><p>函数原型：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">dbi_master_status_t</span> <span class="token function">hal_dbi_init</span><span class="token punctuation">(</span><span class="token class-name">hal_dbi_master_port_t</span> port<span class="token punctuation">,</span><span class="token class-name">hal_dbi_config_t</span> <span class="token operator">*</span>cfg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li><li>port：DBI端口号，与SPI共用物理接口，DBI实际上是SPI-DBI1，<strong>所以填1</strong></li><li>cfg：配置初始化需要的参数，包括时钟频率，传输模式等</li><li>返回值：</li><li>0代表成功</li><li>负数代表失败</li></ul><h3 id="dbi发送数据接口" tabindex="-1"><a class="header-anchor" href="#dbi发送数据接口" aria-hidden="true">#</a> DBI发送数据接口</h3><p>发送数据，调hal_dbi_xfer接口</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">dbi_master_status_t</span> <span class="token function">hal_dbi_xfer</span><span class="token punctuation">(</span><span class="token class-name">hal_dbi_master_port_t</span> port<span class="token punctuation">,</span> <span class="token class-name">hal_dbi_master_transfer_t</span> <span class="token operator">*</span>transfer<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li><li>port：DBI端口号</li><li>transfer：描述传输数据的结构体，包括读/写的数据buffer、数据长度等</li><li>返回值：</li><li>0代表成功</li><li>负数代表失败</li></ul><h3 id="dbi去初始化接口" tabindex="-1"><a class="header-anchor" href="#dbi去初始化接口" aria-hidden="true">#</a> DBI去初始化接口</h3><p>dbi 模块去初始化</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">dbi_master_status_t</span> <span class="token function">hal_dbi_deinit</span><span class="token punctuation">(</span><span class="token class-name">hal_dbi_master_port_t</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li><li>port：DBI端口号</li><li>返回值：</li><li>0代表成功</li><li>负数代表失败</li></ul>`,27),d=[l];function t(c,r){return e(),s("div",null,d)}const o=a(i,[["render",t],["__file","chapter26.html.vue"]]);export{o as default};
