import{_ as s,o as n,c as a,e}from"./app-e85d5a28.js";const p={},t=e(`<h1 id="显示与屏幕驱动" tabindex="-1"><a class="header-anchor" href="#显示与屏幕驱动" aria-hidden="true">#</a> 显示与屏幕驱动</h1><p>RTOS 提供了一套完整的屏幕驱动，支持 RGB, i8080, SPI, DBI 格式的屏幕。</p><p><strong>（1）RGB 接口</strong></p><p>RGB接口在全志平台又称HV接口（Horizontal同步和Vertical同步）。有些LCD屏支持高级的功能比如 gamma，像素格式的设置等，但是 RGB 协议本身不支持图像数据之外的传输，所以无法通过 RGB 管脚进行对 LCD 屏进行配置，所以拿到一款 RGB 接口屏，要么不需要初始化命令，要么这个屏会提供额外的管脚给 SoC 来进行配置，比如 SPI 和 I2C 等。RGB 屏幕有许多格式，不同的位宽，不同的时钟周期。下表是位宽与时钟周期的区别。</p><table><thead><tr><th style="text-align:left;">位宽</th><th style="text-align:left;">时钟周期数</th><th style="text-align:left;">颜色数量和格式</th><th style="text-align:left;">并行\\串行 RGB</th></tr></thead><tbody><tr><td style="text-align:left;">24 bits</td><td style="text-align:left;">1 cycle</td><td style="text-align:left;">16.7M colors, RGB888</td><td style="text-align:left;">并行</td></tr><tr><td style="text-align:left;">18 bits</td><td style="text-align:left;">1 cycle</td><td style="text-align:left;">262K colors, RGB666</td><td style="text-align:left;">并行</td></tr><tr><td style="text-align:left;">16 bits</td><td style="text-align:left;">1 cycle</td><td style="text-align:left;">65K colors, RGB565</td><td style="text-align:left;">并行</td></tr><tr><td style="text-align:left;">6 bits</td><td style="text-align:left;">3 cycles</td><td style="text-align:left;">262K colors, RGB666</td><td style="text-align:left;">串行</td></tr><tr><td style="text-align:left;">6 bits</td><td style="text-align:left;">3 cycles</td><td style="text-align:left;">65K colors, RGB565</td><td style="text-align:left;">串行</td></tr></tbody></table><p>串行 RGB 是相对于并行 RGB 来说，而并不是说它只用一根线来发数据，只要通过多个时钟周期才能把一个像素的数据发完，那么这样的 RGB 接口就是串行 RGB。</p><p><strong>（2）I8080 屏幕</strong></p><p>Intel 8080 接口屏(又称 MCU 接口)，很老的协议，一般用在分辨率很小的屏上。</p><p>管脚的控制脚有6种：</p><ol><li>CS 片选信号，决定该芯片是否工作.</li><li>RS 寄存器选择信号，低表示选择 index 或者 status 寄存器，高表示选择控制寄存器。实际场景中一般接SoC的LCD_DE脚（数据使能脚）</li><li>WR （低表示写数据) 数据命令区分信号，也就是写时钟信号，一般接 SoC 的 LCD_CLK 脚</li><li>RD （低表示读数据）数据读信号，也就是读时钟信号，一般接 SoC 的 LCD_HSYNC 脚</li><li>RESET 复位LCD（ 用固定命令系列 0 1 0来复位)</li><li>Data 是双向的数据通路</li></ol><p>I8080 根据的数据位宽接口有 8/9/16/18，连哪些脚参考，即使位宽一样，连的管脚也不一样，还要考虑的因素是 RGB 格式。</p><ol><li>RGB565，总共有 65K 这么多种颜色</li><li>RGB666，总共有 262K 那么多种颜色</li><li>9bit 固定为 262K</li></ol><p><strong>（3）SPI 屏幕</strong></p><p>SPI LCD 是使用 SPI 总线传输图像数据的屏幕，只会出现在很低分辨率的屏幕上。一般来说开屏前都需要初始化操作。</p><h2 id="适配-lcd-屏幕的步骤" tabindex="-1"><a class="header-anchor" href="#适配-lcd-屏幕的步骤" aria-hidden="true">#</a> 适配 LCD 屏幕的步骤</h2><ol><li>确保全志显示框架的内核配置有使能</li><li>前期准备以下资料和信息：</li><li>屏手册。主要是描述屏基本信息和电气特性等，向屏厂索要。</li><li>Driver IC 手册。主要是描述屏 IC 的详细信息。这里主要是对各个命令进行详解，对我们进行初始化定制有用，向屏厂索要。</li><li>屏时序信息。请向屏厂索要。</li><li>屏初始化代码，请向屏厂索要。一般情况下 DSI 和 I8080 屏等都需要初始化命令对屏进行初始化。</li><li>万用表。调屏避免不了测量相关电压。</li><li>通过第2步屏厂提供的资料，定位该屏的类型，然后选择一个已有同样类型的屏驱动作为模板进行屏驱动添加或者直接在上面修改。</li><li>修改屏驱动目录下的 <code>panel.c</code> 和 <code>panel.h</code>。在全局结构体变量 <code>panel_array</code> 中新增刚才添加 <code>strcut __lcd_panel</code> 的变量指针。<code>panel.h</code> 中新增 <code>strcut __lcd_panel</code> 的声明。</li><li>修改 Makefile。在 lcd 屏驱动目录的上一级的 <code>Makefile</code> 文件中的<code>disp-objs</code>中新增刚才添加屏驱动.o</li><li>修改 <code>sys_config.fex</code> 中的 <code>lcd0</code> 节点。</li><li>编译测试</li></ol><h2 id="lcd-屏幕驱动源码" tabindex="-1"><a class="header-anchor" href="#lcd-屏幕驱动源码" aria-hidden="true">#</a> LCD 屏幕驱动源码</h2><h3 id="lcd-屏幕驱动源码结构" tabindex="-1"><a class="header-anchor" href="#lcd-屏幕驱动源码结构" aria-hidden="true">#</a> LCD 屏幕驱动源码结构</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token punctuation">.</span>
├── Kconfig
├── Makefile
├── disp
│   ├── Kconfig
│   ├── Makefile
│   ├── de                            # Display Engine 层驱动，包括图层与显示控制
│   │   ├── Makefile
│   │   ├── bsp_display<span class="token punctuation">.</span>h
│   │   ├── disp_capture<span class="token punctuation">.</span>c
│   │   ├── disp_capture<span class="token punctuation">.</span>h
│   │   ├── disp_device<span class="token punctuation">.</span>c
│   │   ├── disp_device<span class="token punctuation">.</span>h
│   │   ├── disp_display<span class="token punctuation">.</span>c
│   │   ├── disp_display<span class="token punctuation">.</span>h
│   │   ├── disp_enhance<span class="token punctuation">.</span>c
│   │   ├── disp_enhance<span class="token punctuation">.</span>h
│   │   ├── disp_features<span class="token punctuation">.</span>c
│   │   ├── disp_features<span class="token punctuation">.</span>h
│   │   ├── disp_hdmi<span class="token punctuation">.</span>c
│   │   ├── disp_hdmi<span class="token punctuation">.</span>h
│   │   ├── disp_lcd<span class="token punctuation">.</span>c
│   │   ├── disp_lcd<span class="token punctuation">.</span>h
│   │   ├── disp_manager<span class="token punctuation">.</span>c
│   │   ├── disp_manager<span class="token punctuation">.</span>h
│   │   ├── disp_private<span class="token punctuation">.</span>c
│   │   ├── disp_private<span class="token punctuation">.</span>h
│   │   ├── disp_smart_backlight<span class="token punctuation">.</span>c
│   │   ├── disp_smart_backlight<span class="token punctuation">.</span>h
│   │   ├── disp_tv<span class="token punctuation">.</span>c
│   │   ├── disp_tv<span class="token punctuation">.</span>h
│   │   ├── disp_vdevice<span class="token punctuation">.</span>c
│   │   ├── disp_vdevice<span class="token punctuation">.</span>h
│   │   ├── include<span class="token punctuation">.</span>h
│   │   └── lowlevel_v2x               # DISP 底层驱动，硬件寄存器交互
│   │       ├── Makefile
│   │       ├── de_ase<span class="token punctuation">.</span>c
│   │       ├── de_ase_type<span class="token punctuation">.</span>h
│   │       ├── de_bws<span class="token punctuation">.</span>c
│   │       ├── de_bws_type<span class="token punctuation">.</span>h
│   │       ├── de_ccsc<span class="token punctuation">.</span>c
│   │       ├── de_clock<span class="token punctuation">.</span>c
│   │       ├── de_clock<span class="token punctuation">.</span>h
│   │       ├── de_csc<span class="token punctuation">.</span>h
│   │       ├── de_csc_type<span class="token punctuation">.</span>h
│   │       ├── de_dcsc<span class="token punctuation">.</span>c
│   │       ├── de_dsi<span class="token punctuation">.</span>c
│   │       ├── de_dsi<span class="token punctuation">.</span>h
│   │       ├── de_dsi_28<span class="token punctuation">.</span>c
│   │       ├── de_dsi_type<span class="token punctuation">.</span>h
│   │       ├── de_dsi_type_28<span class="token punctuation">.</span>h
│   │       ├── de_eink<span class="token punctuation">.</span>c
│   │       ├── de_eink<span class="token punctuation">.</span>h
│   │       ├── de_enhance<span class="token punctuation">.</span>c
│   │       ├── de_enhance<span class="token punctuation">.</span>h
│   │       ├── de_fcc<span class="token punctuation">.</span>c
│   │       ├── de_fcc_type<span class="token punctuation">.</span>h
│   │       ├── de_fce<span class="token punctuation">.</span>c
│   │       ├── de_fce_type<span class="token punctuation">.</span>h
│   │       ├── de_feat<span class="token punctuation">.</span>c
│   │       ├── de_feat<span class="token punctuation">.</span>h
│   │       ├── de_gsu<span class="token punctuation">.</span>c
│   │       ├── de_gsu_type<span class="token punctuation">.</span>h
│   │       ├── de_hal<span class="token punctuation">.</span>c
│   │       ├── de_hal<span class="token punctuation">.</span>h
│   │       ├── de_lcd<span class="token punctuation">.</span>c
│   │       ├── de_lcd<span class="token punctuation">.</span>h
│   │       ├── de_lcd_sun50iw10<span class="token punctuation">.</span>c
│   │       ├── de_lcd_type<span class="token punctuation">.</span>h
│   │       ├── de_lti<span class="token punctuation">.</span>c
│   │       ├── de_lti_type<span class="token punctuation">.</span>h
│   │       ├── de_peak<span class="token punctuation">.</span>c
│   │       ├── de_peak_type<span class="token punctuation">.</span>h
│   │       ├── de_rtmx<span class="token punctuation">.</span>c
│   │       ├── de_rtmx<span class="token punctuation">.</span>h
│   │       ├── de_rtmx_type<span class="token punctuation">.</span>h
│   │       ├── de_scaler<span class="token punctuation">.</span>h
│   │       ├── de_scaler_table<span class="token punctuation">.</span>c
│   │       ├── de_scaler_table<span class="token punctuation">.</span>h
│   │       ├── de_smbl<span class="token punctuation">.</span>c
│   │       ├── de_smbl<span class="token punctuation">.</span>h
│   │       ├── de_smbl_tab<span class="token punctuation">.</span>h
│   │       ├── de_smbl_type<span class="token punctuation">.</span>h
│   │       ├── de_vep<span class="token punctuation">.</span>h
│   │       ├── de_vep_table<span class="token punctuation">.</span>c
│   │       ├── de_vep_table<span class="token punctuation">.</span>h
│   │       ├── de_vsu<span class="token punctuation">.</span>c
│   │       ├── de_vsu_type<span class="token punctuation">.</span>h
│   │       ├── de_wb<span class="token punctuation">.</span>c
│   │       ├── de_wb<span class="token punctuation">.</span>h
│   │       ├── de_wb_type<span class="token punctuation">.</span>h
│   │       ├── disp_al<span class="token punctuation">.</span>c
│   │       ├── disp_al<span class="token punctuation">.</span>h
│   │       ├── disp_eink_data<span class="token punctuation">.</span>c
│   │       ├── disp_eink_data<span class="token punctuation">.</span>h
│   │       ├── disp_waveform<span class="token punctuation">.</span>c
│   │       ├── disp_waveform<span class="token punctuation">.</span>h
│   │       ├── rtmx_eink<span class="token punctuation">.</span>c
│   │       └── rtmx_eink<span class="token punctuation">.</span>h
│   ├── dev_disp<span class="token punctuation">.</span>c                 # DISP 公共端口
│   ├── dev_disp<span class="token punctuation">.</span>h
│   ├── disp_debug<span class="token punctuation">.</span>c
│   ├── disp_debug<span class="token punctuation">.</span>h
│   ├── disp_sys_intf<span class="token punctuation">.</span>c
│   ├── disp_sys_intf<span class="token punctuation">.</span>h
│   ├── lcd                        # LCD 面板驱动，包括自定义初始化控制，上下电时序控制
│   │   ├── Kconfig
│   │   ├── S6D7AA0X01<span class="token punctuation">.</span>c
│   │   ├── S6D7AA0X01<span class="token punctuation">.</span>h
│   │   ├── VVX07H005A10<span class="token punctuation">.</span>c
│   │   ├── VVX07H005A10<span class="token punctuation">.</span>h
│   │   ├── WilliamLcd<span class="token punctuation">.</span>c
│   │   ├── WilliamLcd<span class="token punctuation">.</span>h
│   │   ├── b080uan01_mipi1200x1920<span class="token punctuation">.</span>c
│   │   ├── b080uan01_mipi1200x1920<span class="token punctuation">.</span>h
│   │   ├── cl40bc1019_cpu<span class="token punctuation">.</span>c
│   │   ├── cl40bc1019_cpu<span class="token punctuation">.</span>h
│   │   ├── cpu_gg1p4062utsw<span class="token punctuation">.</span>c
│   │   ├── cpu_gg1p4062utsw<span class="token punctuation">.</span>h
│   │   ├── default_eink<span class="token punctuation">.</span>c
│   │   ├── default_eink<span class="token punctuation">.</span>h
│   │   ├── default_panel<span class="token punctuation">.</span>c
│   │   ├── default_panel<span class="token punctuation">.</span>h
│       └── wtq05027d01<span class="token punctuation">.</span>h
├── soc                             # SoC 层特化驱动
│   ├── Kconfig
│   ├── Makefile
│   ├── VVX07H005A10_mipi_config<span class="token punctuation">.</span>c
│   ├── disp_board_config<span class="token punctuation">.</span>c
│   ├── disp_board_config<span class="token punctuation">.</span>h
│   ├── he0801a068_mipi_config<span class="token punctuation">.</span>c
│   ├── platform_resource<span class="token punctuation">.</span>c
│   ├── platform_resource<span class="token punctuation">.</span>h
│   ├── sun20iw2<span class="token punctuation">.</span>c
└── tv                               # TV 驱动，R128不使用
    ├── Makefile
    ├── de_tve_sun8iw11<span class="token punctuation">.</span>c
    ├── de_tve_sun8iw7<span class="token punctuation">.</span>c
    ├── de_tve_v1<span class="token punctuation">.</span>c
    ├── de_tvec<span class="token punctuation">.</span>h
    ├── drv_tv<span class="token punctuation">.</span>c
    ├── drv_tv<span class="token punctuation">.</span>h
    ├── gm7121<span class="token punctuation">.</span>c
    ├── tv_ac200<span class="token punctuation">.</span>c
    ├── tv_ac200<span class="token punctuation">.</span>h
    ├── tv_ac200_lowlevel<span class="token punctuation">.</span>c
    └── tv_ac200_lowlevel<span class="token punctuation">.</span>h
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="屏驱动源码位置" tabindex="-1"><a class="header-anchor" href="#屏驱动源码位置" aria-hidden="true">#</a> 屏驱动源码位置</h3><h4 id="rgb-面板驱动" tabindex="-1"><a class="header-anchor" href="#rgb-面板驱动" aria-hidden="true">#</a> RGB 面板驱动</h4><p>对于不需要初始化的 RGB 屏幕（一般是 40PIN，50PIN）使用 <code>default_panel.c</code></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>lichee<span class="token operator">/</span>rtos‑hal<span class="token operator">/</span>hal<span class="token operator">/</span>source<span class="token operator">/</span>disp2<span class="token operator">/</span>disp<span class="token operator">/</span>lcd<span class="token operator">/</span>default_panel<span class="token punctuation">.</span>c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="lcd-面板特化驱动" tabindex="-1"><a class="header-anchor" href="#lcd-面板特化驱动" aria-hidden="true">#</a> LCD 面板特化驱动</h4><p>部分 LCD 面板需要写 IIC，SPI初始化，或者有特殊的上下电要求，需要编写特化的屏幕驱动</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>lichee<span class="token operator">/</span>rtos‑hal<span class="token operator">/</span>hal<span class="token operator">/</span>source<span class="token operator">/</span>disp2<span class="token operator">/</span>disp<span class="token operator">/</span>lcd<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h4><p>其中 “芯片型号” 例如 r128s3，和 “板子名称” 例如 pro，请根据实际替换。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>board<span class="token operator">/</span>芯片型号<span class="token operator">/</span>板子名称<span class="token operator">/</span>configs<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="屏幕驱动配置" tabindex="-1"><a class="header-anchor" href="#屏幕驱动配置" aria-hidden="true">#</a> 屏幕驱动配置</h3><p>lcd 相关代码包含在 disp 驱动模块中，执行命令进入 menuconfig 配置主界面，并按以下步骤操作：</p><h2 id="添加新屏" tabindex="-1"><a class="header-anchor" href="#添加新屏" aria-hidden="true">#</a> 添加新屏</h2><p>添加一款新屏幕通常需要以下步骤：</p><ul><li><code>panel.c</code> 和 <code>panel.h</code>，当用户添加新屏驱动时，是需要修改这两个文件的，需要将屏结构体变量添加到全局结构体变量panel_array中。</li><li><code>lcd_source.c</code> 和 <code>lcd_source.h</code>，这两个文件实现的是给屏驱动使用的函数接口，比如电源开关，gpio，dsi 读写接口等，用户不需要修改只需要用。</li><li>屏驱动。除了上面提到的源文件外，其它的一般一个 c 文件和一个 h 文件就代表一个屏驱动。</li><li>在屏驱动源码位置的上一级，有用户需要修改的 <code>Makefile</code> 文件。</li></ul><p>我们可以打开 <code>lichee/rtos‑hal/hal/source/disp2/disp/lcd/default_panel.c</code> 作为屏驱动的例子，在该文件的最后：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">__lcd_panel</span> default_panel <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">/* panel driver name, must mach the lcd_drv_name in sys_config.fex */</span>
    <span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;default_lcd&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>func <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span>cfg_panel_info <span class="token operator">=</span> LCD_cfg_panel_info<span class="token punctuation">,</span>
        <span class="token punctuation">.</span>cfg_open_flow <span class="token operator">=</span> LCD_open_flow<span class="token punctuation">,</span>
        <span class="token punctuation">.</span>cfg_close_flow <span class="token operator">=</span> LCD_close_flow<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>该全局变量 <code>default_panel</code> 的成员 <code>name</code> 与 <code>lcd_driver_name</code> 必须一致，这个关系到驱动能否找到指定的文件。</li><li>接 下 来 是 <code>func</code> 成 员 的 初 始 化， 这 里 最 主 要 实 现 三 个 回 调 函 数。<code>LCD_cfg_panel_info</code>, <code>LCD_open_flow</code> 和 <code>LCD_close_flow</code>。</li><li>开关屏流程即屏上下电流程，屏手册或者 driver IC 手册中里面的 Power on Sequence 和 Power off Sequence。用于开关屏的操作流程如下图所示</li></ul><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part1/chapter4/image1.png" alt=""></p><ul><li>其中，<code>LCD_open_flow</code> 和 <code>LCD_close_flow</code> 称为开关屏流程函数。方框中的函数，如 <code>LCD_power_on</code>，称为开关屏步骤函数。</li><li>不需要进行初始化操作的 LCD 屏，例如部分 RGB 屏等，<code>LCD_panel_init</code> 及 <code>LCD_panel_exit</code> 这些函数可以为空。</li></ul><h4 id="lcd-open-flow" tabindex="-1"><a class="header-anchor" href="#lcd-open-flow" aria-hidden="true">#</a> LCD_open_flow</h4><p>LCD_open_flow 函数只会在系统初始化的时候调用一次，执行每个 LCD_OPEN_FUNC 即是把对应的开屏步骤函数进行注册，先注册先执行，但并没有立刻执行该开屏步骤函数。</p><p>函数原型：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> __s32 <span class="token function">LCD_open_flow</span><span class="token punctuation">(</span>__u32 sel<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>函数常用内容为：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> __s32 <span class="token function">LCD_open_flow</span><span class="token punctuation">(</span>__u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">LCD_OPEN_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> LCD_power_on<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">LCD_OPEN_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> LCD_panel_init<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">LCD_OPEN_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> sunxi_lcd_tcon_enable<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">LCD_OPEN_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> LCD_bl_open<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上，调用四次 LCD_OPEN_FUNC 注册了四个回调函数，对应了四个开屏流程, 先注册先执行。实际上注册多少个函数是用户自己的自由，只要合理即可。</p><ol><li>LCD_power_on 即打开 LCD 电源，再延迟 10ms；这个步骤一般用于打开 LCD 相关电源和相关管脚比如复位脚。这里一般是使用电源控制函数说明和管脚控制函数说明进行操作。</li><li>LCD_panel_init 即初始化屏，再延迟 50ms；不需要初始化的屏，可省掉此步骤，这个函数一般用于发送初始化命令给屏进行屏初始化。如果是 I8080 屏用I8080 接口函数说明，如果是其它情况比如 i2c 或者 spi 可以看使用 iic/spi 串行接口初始化，也可以用 GPIO 来进行模拟。</li><li>sunxi_lcd_tcon_enable 打开 TCON，再延迟 100ms；这一步是固定的，表示开始发送图像信号。</li><li>LCD_bl_open 打开背光，再延迟 0ms。前面三步搞定之后才开背光，这样不会看到闪烁。这里一般使用的函数请看背光控制函数说明。</li></ol><h4 id="lcd-open-func" tabindex="-1"><a class="header-anchor" href="#lcd-open-func" aria-hidden="true">#</a> LCD_OPEN_FUNC</h4><p>注册开屏步骤函数到开屏流程中，记住这里是注册不是执行！</p><p>函数原型：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">LCD_OPEN_FUNC</span><span class="token punctuation">(</span>__u32 sel<span class="token punctuation">,</span> LCD_FUNC func<span class="token punctuation">,</span> __u32 delay<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数说明：</p><p><code>func</code> 是一个函数指针，其类型是：<code>void (*LCD_FUNC) (__u32 sel)</code>，用户自己定义的函数必须也要用统一的形式。比如：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">user_defined_func</span><span class="token punctuation">(</span>__u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>delay</code> 是执行该步骤后，再延迟的时间，时间单位是毫秒。</p><p>LCD_OPEN_FUNC 的第二个参数是前后两个步骤的延时长度，单位 ms，注意这里的数值请按照屏手册规定去填，乱填可能导致屏初始化异常或者开关屏时间过长，影响用户体验。</p><h4 id="lcd-close-flow" tabindex="-1"><a class="header-anchor" href="#lcd-close-flow" aria-hidden="true">#</a> LCD_close_flow</h4><p>与 <code>LCD_open_flow</code> 对应的是 <code>LCD_close_flow</code>，它用于注册关屏函数。使用 <code>LCD_CLOSE_FUNC</code> 进行函数注册，先注册先执行。这里只是注册回调函数，不是立刻执行。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> s32 <span class="token function">LCD_close_flow</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">/* close lcd backlight, and delay 0ms */</span>
    <span class="token function">LCD_CLOSE_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> LCD_bl_close<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* close lcd controller, and delay 0ms */</span>
    <span class="token function">LCD_CLOSE_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> sunxi_lcd_tcon_disable<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* open lcd power, than delay 200ms */</span>
    <span class="token function">LCD_CLOSE_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> LCD_panel_exit<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* close lcd power, and delay 500ms */</span>
    <span class="token function">LCD_CLOSE_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> LCD_power_off<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>先关闭背光，这样整个关屏过程，用户不会看到闪烁的过程；</li><li>关闭 TCON（即停止发送数据）再延迟 50ms；</li><li>执行关屏代码，再延迟 200ms；（不需要初始化的屏，可省掉此步骤）</li><li>最后关闭电源，再延迟 0ms。</li></ul><h4 id="lcd-cfg-panel-info" tabindex="-1"><a class="header-anchor" href="#lcd-cfg-panel-info" aria-hidden="true">#</a> LCD_cfg_panel_info</h4><p>配置的 TCON 扩展参数，比如 gamma 功能和颜色映射功能。</p><p>函数原型：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_cfg_panel_info</span><span class="token punctuation">(</span>__panel_extend_para_t <span class="token operator">*</span>info<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>TCON 的扩展参数只能在屏文件中配置，参数的定义：</p><h5 id="lcd-frm" tabindex="-1"><a class="header-anchor" href="#lcd-frm" aria-hidden="true">#</a> LCD_FRM</h5><p>Lcd Frame Rate Modulator, FRM 是解决由于 PIN 减少导致的色深问题，有些 LCD 屏的像素格式是 18bit 色深（RGB666）或 16bit 色深（RGB565），建议打开 FRM 功能，通过 dither 的方式弥补色深，使显示达到 24bit 色深（RGB888）的效果。如下图所示，上图是色深为 RGB66 的 LCD 屏显示，下图是打开 dither 后的显示，打开 dither 后色彩渐变的地方过度平滑。</p><p>参数设置相应值对应含义为：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：RGB888 ‑‑ RGB888 direct
<span class="token number">1</span>：RGB888 ‑‑ RGB666 dither
<span class="token number">2</span>：RGB888 ‑‑ RGB565 dither
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part1/chapter4/image2.png" alt=""></p><h5 id="lcd-gamma-en" tabindex="-1"><a class="header-anchor" href="#lcd-gamma-en" aria-hidden="true">#</a> LCD_GAMMA_EN</h5><p>Lcd Gamma Correction Enable，设置相应值的对应含义为：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：LCD 的 Gamma 校正功能关闭
<span class="token number">1</span>：LCD 的 Gamma 校正功能开启
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置为 1 时，需要在屏驱动中对 <code>lcd_gamma_tbl[256]</code> 进行赋值。</p><h5 id="lcd-cmap-en" tabindex="-1"><a class="header-anchor" href="#lcd-cmap-en" aria-hidden="true">#</a> LCD_CMAP_EN</h5><p>Lcd Color Map Enable， 设置为 1 时，需要对 <code>lcd_cmap_tbl [2][3][4]</code> 进行赋值 <code>Lcd Color Map Table</code>。</p><p>每个像素有 R、G、B 三个单元，每四个像素组成一个选择项，总共有 12 个可选。数组第一维表示奇偶行，第二维表示像素的 RGB，第三维表示第几个像素，数组的内容即表示该位置映射到的内容。</p><p>LCD CMAP 是对像素的映射输出功能，只有像素有特殊排布的 LCD 屏才需要配置。</p><p>LCD CMAP 定义每行的 4 个像素为一个总单元，每个像素分 R、G、B 3 个小单元，总共有 12 个小单元。通过 lcd_cmap_tbl 定义映射关系，输出的每个小单元可随意映射到 12 个小单元之一。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>__u32 lcd_cmap_tbl<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">{</span>LCD_CMAP_G0<span class="token punctuation">,</span>LCD_CMAP_B1<span class="token punctuation">,</span>LCD_CMAP_G2<span class="token punctuation">,</span>LCD_CMAP_B3<span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>LCD_CMAP_B0<span class="token punctuation">,</span>LCD_CMAP_R1<span class="token punctuation">,</span>LCD_CMAP_B2<span class="token punctuation">,</span>LCD_CMAP_R3<span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>LCD_CMAP_R0<span class="token punctuation">,</span>LCD_CMAP_G1<span class="token punctuation">,</span>LCD_CMAP_R2<span class="token punctuation">,</span>LCD_CMAP_G3<span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">{</span>LCD_CMAP_B3<span class="token punctuation">,</span>LCD_CMAP_G2<span class="token punctuation">,</span>LCD_CMAP_B1<span class="token punctuation">,</span>LCD_CMAP_G0<span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>LCD_CMAP_R3<span class="token punctuation">,</span>LCD_CMAP_B2<span class="token punctuation">,</span>LCD_CMAP_R1<span class="token punctuation">,</span>LCD_CMAP_B0<span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>LCD_CMAP_G3<span class="token punctuation">,</span>LCD_CMAP_R2<span class="token punctuation">,</span>LCD_CMAP_G1<span class="token punctuation">,</span>LCD_CMAP_R0<span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上，上三行代表奇数行的像素排布，下三行代表偶数行的像素排布；</p><p>每四个像素为一个单元，第一列代表每四个像素的第一个像素映射，第二列代表每四个像素的第二个像素映射，以此类推。</p><p>如上的定义，像素的输出格式如下图所示。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part1/chapter4/image3.png" alt=""></p><h5 id="lcd-rb-swap" tabindex="-1"><a class="header-anchor" href="#lcd-rb-swap" aria-hidden="true">#</a> LCD_RB_SWAP</h5><p>调换 <code>TCON</code> 模块 <code>RGB</code> 中的 R 分量和 B 分量。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：不变
<span class="token number">1</span>：调换R分量和B分量
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>需要 gamma 校正，或色彩映射，在 <code>sys_config.fex</code> 中将相应模块的 <code>enable</code> 参数置 1，<code>lcd_gamma_en</code>, <code>lcd_cmap_en</code>，并且填充 3 个系数表，<code>lcd_gamma_tbl</code>, <code>lcd_cmap_tbl</code>，注意的是：gamma，模板提供了 18 段拐点值，然后再插值出所有的值（255 个）。可以往相应表格内添加子项以补充细节部分。cmap_tbl 的大小是固定的，不能减小或增加表的大小。最终生成的 gamma 表项是由 rgb 三个 gamma 值组成的，各占 8bit。目前提供的模板中，三个 gamma 值是相同的。</p><h4 id="延时函数" tabindex="-1"><a class="header-anchor" href="#延时函数" aria-hidden="true">#</a> 延时函数</h4><p>函数原型</p><p>（毫秒级别）</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>s32 <span class="token function">sunxi_lcd_delay_ms</span><span class="token punctuation">(</span>u32 ms<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（微秒级别）</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>s32 <span class="token function">sunxi_lcd_delay_us</span><span class="token punctuation">(</span>u32 us<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="图像数据使能函数" tabindex="-1"><a class="header-anchor" href="#图像数据使能函数" aria-hidden="true">#</a> 图像数据使能函数</h4><p>打开 LCD 控制器，开始刷新 LCD 显示</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">sunxi_lcd_tcon_enable</span><span class="token punctuation">(</span>u32 screen_id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关闭 LCD 控制器，停止刷新数据</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">sunxi_lcd_tcon_disable</span><span class="token punctuation">(</span>u32 screen_id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="背光控制函数" tabindex="-1"><a class="header-anchor" href="#背光控制函数" aria-hidden="true">#</a> 背光控制函数</h4><p>打开背光，操作的是 <code>sys_config.fex</code> 中 <code>lcd_bl</code> 配置的 <code>gpio</code>。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">sunxi_lcd_backlight_enable</span><span class="token punctuation">(</span>u32 screen_id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关闭背光，操作的是 <code>sys_config.fex</code> 中 <code>lcd_bl</code> 配置的 <code>gpio</code>。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">sunxi_lcd_backlight_disable</span><span class="token punctuation">(</span>u32 screen_id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>打开PWM背光，打开时 pwm 将往外输出 pwm 波形。对应的是<code>lcd_pwm_ch</code> 所对应的那一路 pwm。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>s32 <span class="token function">sunxi_lcd_pwm_enable</span><span class="token punctuation">(</span>u32 screen_id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关闭PWM背光，打开时 pwm 将往外输出 pwm 波形。对应的是 <code>lcd_pwm_ch</code> 所对应的那一路 pwm。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>s32 <span class="token function">sunxi_lcd_pwm_disable</span><span class="token punctuation">(</span>u32 screen_id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="电源控制函数" tabindex="-1"><a class="header-anchor" href="#电源控制函数" aria-hidden="true">#</a> 电源控制函数</h4><p>打开 <code>Lcd</code> 电源，操作的是 <code>sys_config.fex</code> 中的 <code>lcd_power/lcd_power1/lcd_power2</code>。（ <code>pwr_id</code>标识电源索引）</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">sunxi_lcd_power_enable</span><span class="token punctuation">(</span>u32 screen_id<span class="token punctuation">,</span> u32 pwr_id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关闭 <code>Lcd</code> 电源，操作的是 <code>sys_config.fex</code> 中的 <code>lcd_power/lcd_power1/lcd_power2</code>。（ <code>pwr_id</code>标识电源索引）</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">sunxi_lcd_power_disable</span><span class="token punctuation">(</span>u32 screen_id<span class="token punctuation">,</span> u32 pwr_id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>pwr_id = 0：对应于 sys_config.fex 中的 lcd_power。</li><li>pwr_id = 1：对应于 sys_config.fex 中的 lcd_power1。</li><li>pwr_id = 2：对应于 sys_config.fex 中的 lcd_power2。</li><li>pwr_id = 3：对应于 sys_config.fex 中的 lcd_power3。</li></ol><h4 id="sunxi-lcd-pin-cfg" tabindex="-1"><a class="header-anchor" href="#sunxi-lcd-pin-cfg" aria-hidden="true">#</a> sunxi_lcd_pin_cfg</h4><p>配置 lcd 的 io</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>s32 <span class="token function">sunxi_lcd_pin_cfg</span><span class="token punctuation">(</span>u32 screen_id<span class="token punctuation">,</span> u32 bon<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置 <code>lcd</code> 的 <code>data/clk</code> 等 <code>pin</code>，对应 <code>sys_config.fex</code> 中的 <code>lcdd0‑lcdd23/lcddclk/lcdde/lcdhsync/lcdvsync</code>。</p><p>参数：</p><ul><li>Bon: 1: 为开，0：为配置成 disable 状态。</li></ul><h4 id="i8080-接口函数说明" tabindex="-1"><a class="header-anchor" href="#i8080-接口函数说明" aria-hidden="true">#</a> I8080 接口函数说明</h4><p>显示驱动提供 5 个接口函数可供使用。如下：</p><h5 id="sunxi-lcd-cpu-write" tabindex="-1"><a class="header-anchor" href="#sunxi-lcd-cpu-write" aria-hidden="true">#</a> <strong>SUNXI_LCD_CPU_WRITE</strong></h5><p>设定 CPU 屏的指定寄存器为指定的值。</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">sunxi_lcd_cpu_write</span><span class="token punctuation">(</span>__u32 sel<span class="token punctuation">,</span> __u32 index<span class="token punctuation">,</span> __u32 data<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">sunxi_lcd_cpu_write_index</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_cpu_wirte_data</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现了 8080 总线上的两个写操作</p><ul><li><code>sunxi_lcd_cpu_write_index</code> 实现第一个写操作，这时 PIN 脚 RS（A1）为低电平，总线数据上的数据内容为参数 index 的值。</li><li><code>sunxi_lcd_cpu_wirte_data</code> 实现第二个写操作，这时 PIN 脚 RS（A1）为高电平，总线数据上的数据内容为参数 data 的值。</li></ul><h5 id="sunxi-lcd-cpu-write-index" tabindex="-1"><a class="header-anchor" href="#sunxi-lcd-cpu-write-index" aria-hidden="true">#</a> <strong>SUNXI_LCD_CPU_WRITE_INDEX</strong></h5><p>设定 CPU 屏为指定寄存器。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">sunxi_lcd_cpu_write_index</span><span class="token punctuation">(</span>__u32 sel<span class="token punctuation">,</span>__u32 index<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>sel：显示屏 id</li><li>index: 要设定的寄存器</li></ul><h5 id="sunxi-lcd-cpu-write-data" tabindex="-1"><a class="header-anchor" href="#sunxi-lcd-cpu-write-data" aria-hidden="true">#</a> <strong>SUNXI_LCD_CPU_WRITE_DATA</strong></h5><p>设定 CPU 屏寄存器的值为指定的值</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">sunxi_lcd_cpu_write_data</span><span class="token punctuation">(</span>__u32 sel<span class="token punctuation">,</span> __u32 data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>sel：显示屏 id</li><li>index: 要设定的寄存器的值</li></ul><h5 id="tcon0-cpu-rd-24b-data" tabindex="-1"><a class="header-anchor" href="#tcon0-cpu-rd-24b-data" aria-hidden="true">#</a> TCON0_CPU_RD_24B_DATA</h5><p>读操作</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>s32 <span class="token function">tcon0_cpu_rd_24b_data</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">,</span> u32 index<span class="token punctuation">,</span> u32 <span class="token operator">*</span>data<span class="token punctuation">,</span> u32 size<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>sel：显示屏 id</li><li>index: 要读取的寄存器</li><li>data：用于存放读取接口的数组指针，用户必须保证其有足够空间存放数据</li><li>size：要读取的字节数</li></ul><h4 id="管脚控制函数" tabindex="-1"><a class="header-anchor" href="#管脚控制函数" aria-hidden="true">#</a> 管脚控制函数</h4><h5 id="sunxi-lcd-gpio-set-value" tabindex="-1"><a class="header-anchor" href="#sunxi-lcd-gpio-set-value" aria-hidden="true">#</a> <strong>SUNXI_LCD_GPIO_SET_VALUE</strong></h5><p>LCD_GPIO PIN 脚上输出高电平或低电平</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>s32 <span class="token function">sunxi_lcd_gpio_set_value</span><span class="token punctuation">(</span>u32 screen_id<span class="token punctuation">,</span> u32 io_index<span class="token punctuation">,</span> u32 value<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>io_index = 0：对应于 sys_config.fex 中的 lcd_gpio_0。</li><li>io_index = 1：对应于 sys_config.fex 中的 lcd_gpio_1。</li><li>io_index = 2：对应于 sys_config.fex 中的 lcd_gpio_2。</li><li>io_index = 3：对应于 sys_config.fex 中的 lcd_gpio_3。</li><li>value = 0：对应 IO 输出低电平。</li><li>value = 1：对应 IO 输出高电平。</li></ul><p>只用于该 GPIO 定义为输出的情形。</p><h5 id="sunxi-lcd-gpio-set-direction" tabindex="-1"><a class="header-anchor" href="#sunxi-lcd-gpio-set-direction" aria-hidden="true">#</a> <strong>SUNXI_LCD_GPIO_SET_DIRECTION</strong></h5><p>设置 LCD_GPIO PIN 脚为输入或输出模式</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>s32 <span class="token function">sunxi_lcd_gpio_set_direction</span><span class="token punctuation">(</span>u32 screen_id<span class="token punctuation">,</span> u32 io_index<span class="token punctuation">,</span> u32 direction<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>io_index = 0：对应于 sys_config.fex 中的 lcd_gpio_0。</li><li>io_index = 1：对应于 sys_config.fex 中的 lcd_gpio_1。</li><li>io_index = 2：对应于 sys_config.fex 中的 lcd_gpio_2。</li><li>io_index = 3：对应于 sys_config.fex 中的 lcd_gpio_3。</li><li>direction = 0：对应 IO 设置为输入。</li><li>direction = 1：对应 IO 设置为输出。</li></ul><p>一部分屏需要进行初始化操作，在开屏步骤函数中，对应于 <code>LCD_panel_init</code> 函数，提供了几种方式对屏的初始化。对于 CPU 屏，是通过 8080 总线的方式，使用的是 LCDIO（PD,PH）进行初始化。这种初始化方式，其总线的引脚位置定义与 CPU 屏一致。对于 SPI/IIC 初始化的 LCD，使用独立的IO初始化。</p><h3 id="使用-spi-初始化" tabindex="-1"><a class="header-anchor" href="#使用-spi-初始化" aria-hidden="true">#</a> 使用 SPI 初始化</h3><p>一般使用 GPIO 模拟的方式初始化 SPI 屏幕，其中 SPI 模拟如下所示</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">spi_scl_1</span> <span class="token expression"><span class="token function">sunxi_lcd_gpio_set_value</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  </span><span class="token comment">// 配置 lcd_gpio_3 为 SCL</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">spi_scl_0</span> <span class="token expression"><span class="token function">sunxi_lcd_gpio_set_value</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">spi_sdi_1</span> <span class="token expression"><span class="token function">sunxi_lcd_gpio_set_value</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  </span><span class="token comment">// 配置 lcd_gpio_2 为 SDI</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">spi_sdi_0</span> <span class="token expression"><span class="token function">sunxi_lcd_gpio_set_value</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">spi_cs_1</span> <span class="token expression"><span class="token function">sunxi_lcd_gpio_set_value</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>   </span><span class="token comment">// 配置 lcd_gpio_1 为 CS</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">spi_cs_0</span> <span class="token expression"><span class="token function">sunxi_lcd_gpio_set_value</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span></span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">spi_write_cmd</span><span class="token punctuation">(</span>u8 value<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> i<span class="token punctuation">;</span>

    spi_cs_0<span class="token punctuation">;</span>
    spi_scl_0<span class="token punctuation">;</span>

    spi_sdi_0<span class="token punctuation">;</span>
    spi_scl_1<span class="token punctuation">;</span>
    spi_scl_0<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token number">0x80</span><span class="token punctuation">)</span>
            spi_sdi_1<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            spi_sdi_0<span class="token punctuation">;</span>
        value <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>

        spi_scl_1<span class="token punctuation">;</span>
        spi_scl_0<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    spi_cs_1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">spi_write_data</span><span class="token punctuation">(</span>u8 value<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> i<span class="token punctuation">;</span>

    spi_cs_0<span class="token punctuation">;</span>
    spi_scl_0<span class="token punctuation">;</span>

    spi_sdi_1<span class="token punctuation">;</span>
    spi_scl_1<span class="token punctuation">;</span>
    spi_scl_0<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token number">0x80</span><span class="token punctuation">)</span>
            spi_sdi_1<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            spi_sdi_0<span class="token punctuation">;</span>
        value <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>

        spi_scl_1<span class="token punctuation">;</span>
        spi_scl_0<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    spi_cs_1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以调用 <code>spi_write_cmd(u8 value)</code> 与 <code>spi_write_data(u8 value)</code> 函数写入初始化命令。</p><p>也可以使用 硬件 SPI 初始化屏幕，代码如下</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">spi_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> ret <span class="token operator">=</span> ‑<span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">spi_master</span> <span class="token operator">*</span>master<span class="token punctuation">;</span>
    master <span class="token operator">=</span> <span class="token function">spi_busnum_to_master</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>master<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">lcd_fb_wrn</span><span class="token punctuation">(</span><span class="token string">&quot;fail to get master\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">goto</span> OUT
    <span class="token punctuation">}</span>
    spi_device <span class="token operator">=</span> <span class="token function">spi_alloc_device</span><span class="token punctuation">(</span>master<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>spi_device<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">lcd_fb_wrn</span><span class="token punctuation">(</span><span class="token string">&quot;fail to get spi device\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">goto</span> OUT<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    spi_device‑<span class="token operator">&gt;</span> bits_per_word <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    spi_device‑<span class="token operator">&gt;</span> max_speed_hz <span class="token operator">=</span> <span class="token number">50000000</span><span class="token punctuation">;</span> <span class="token comment">/*50MHz*/</span>
    spi_device‑<span class="token operator">&gt;</span> mode <span class="token operator">=</span> SPI_MODE_0<span class="token punctuation">;</span>
    ret <span class="token operator">=</span> <span class="token function">spi_setup</span><span class="token punctuation">(</span>spi_device<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ret<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">lcd_fb_wrn</span><span class="token punctuation">(</span><span class="token string">&quot;Faile to setup spi\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">goto</span> FREE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">lcd_fb_inf</span><span class="token punctuation">(</span><span class="token string">&quot;Init spi1:bits_per_word:%d max_speed_hz:%d mode:%d\\n&quot;</span><span class="token punctuation">,</span> spi_device‑<span class="token operator">&gt;</span> bits_per_word<span class="token punctuation">,</span>
               spi_device‑<span class="token operator">&gt;</span> max_speed_hz<span class="token punctuation">,</span> spi_device‑<span class="token operator">&gt;</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">goto</span> OUT<span class="token punctuation">;</span>
FREE<span class="token operator">:</span>
    <span class="token function">spi_master_put</span><span class="token punctuation">(</span>master<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">kfree</span><span class="token punctuation">(</span>spi_device<span class="token punctuation">)</span><span class="token punctuation">;</span>
    spi_device <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
OUT<span class="token operator">:</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">comm_out</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> sel<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> cmd<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">spi_transfer</span> t<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>spi_device<span class="token punctuation">)</span>
        <span class="token keyword">return</span> ‑<span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token function">DC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>t<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">spi_transfer</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    t<span class="token punctuation">.</span>tx_buf <span class="token operator">=</span> <span class="token operator">&amp;</span>cmd<span class="token punctuation">;</span>
    t<span class="token punctuation">.</span>len <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    t<span class="token punctuation">.</span>bits_per_word <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    t<span class="token punctuation">.</span>speed_hz <span class="token operator">=</span> <span class="token number">24000000</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">spi_sync_transfer</span><span class="token punctuation">(</span>spi_device<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先调用 <code>spi_init</code> 函数对 <code>spi</code> 硬件进行初始化，<code>spi_init</code> 函数可以分为几个步骤，第一获取 <code>master</code>；根据实际的硬件连接，选择 <code>spi</code>（代码中选择了 <code>spi1</code>），如果这一步返回错误说 <code>spi</code> 没有配置好。第二步设置 <code>spi device</code>，这里包括最大速度，<code>spi</code> 传输模式，以及每个字包含的比特数。最后调用 <code>spi_setup</code> 完成 <code>master</code> 和 <code>device</code> 的关联。</p><p><code>comm_out</code> 是一个 <code>spi</code> 传输的例子，核心就是 <code>spi_sync_transfer</code> 函数。</p><h2 id="并行-rgb-接口" tabindex="-1"><a class="header-anchor" href="#并行-rgb-接口" aria-hidden="true">#</a> 并行 RGB 接口</h2><p>当我们配置并行 RGB 接口时，在配置里面并不需要区分是 24 位，18 位和 16 位，最大位宽是哪种是参考 pin mux 表格，如果 LCD 屏本身支持的位宽比 SoC 支持的位宽少，当然只能选择少的一方。</p><p>因为不需要初始化，RGB 接口极少出现问题，重点关注 lcd 的 timing 的合理性，也就是lcd_ht，lcd_hspw，lcd_hbp，lcd_vt，lcd_vspw 和 lcd_vbp 这个属性的合理性。</p><p>下面是典型并行 RGB 接口 sys_config.fex 配置示例，其中用空行把配置分成几个部分</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token comment">;--------------------------------------------------</span>
<span class="token comment">;Parallel RGB LCD</span>
<span class="token comment">;--------------------------------------------------</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">lcd0</span><span class="token punctuation">]</span></span>
<span class="token comment">; Part 1</span>
<span class="token key attr-name">lcd_used</span>            <span class="token punctuation">=</span> <span class="token value attr-value">1</span>
<span class="token key attr-name">lcd_driver_name</span>     <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">default_lcd</span>&quot;</span>

<span class="token comment">; Part 2</span>
<span class="token key attr-name">lcd_if</span>              <span class="token punctuation">=</span> <span class="token value attr-value">0</span>

<span class="token comment">; Part 3</span>
<span class="token key attr-name">lcd_x</span>               <span class="token punctuation">=</span> <span class="token value attr-value">480</span>
<span class="token key attr-name">lcd_y</span>               <span class="token punctuation">=</span> <span class="token value attr-value">480</span>
<span class="token key attr-name">lcd_width</span>           <span class="token punctuation">=</span> <span class="token value attr-value">150</span>
<span class="token key attr-name">lcd_height</span>          <span class="token punctuation">=</span> <span class="token value attr-value">94</span>
<span class="token key attr-name">lcd_rb_swap</span>         <span class="token punctuation">=</span> <span class="token value attr-value">0</span>
<span class="token key attr-name">lcd_dclk_freq</span>       <span class="token punctuation">=</span> <span class="token value attr-value">21</span>
<span class="token key attr-name">lcd_hv_clk_phase</span>    <span class="token punctuation">=</span> <span class="token value attr-value">1</span>

<span class="token comment">; Part 4</span>
<span class="token key attr-name">lcd_backlight</span>       <span class="token punctuation">=</span> <span class="token value attr-value">150</span>
<span class="token key attr-name">lcd_pwm_used</span>        <span class="token punctuation">=</span> <span class="token value attr-value">1</span>
<span class="token key attr-name">lcd_pwm_ch</span>          <span class="token punctuation">=</span> <span class="token value attr-value">5</span>
<span class="token key attr-name">lcd_pwm_freq</span>        <span class="token punctuation">=</span> <span class="token value attr-value">5000</span>
<span class="token key attr-name">lcd_pwm_pol</span>         <span class="token punctuation">=</span> <span class="token value attr-value">1</span>

<span class="token comment">; Part 5</span>
<span class="token key attr-name">lcd_hbp</span>             <span class="token punctuation">=</span> <span class="token value attr-value">80</span>
<span class="token key attr-name">lcd_ht</span>              <span class="token punctuation">=</span> <span class="token value attr-value">648</span>
<span class="token key attr-name">lcd_hspw</span>            <span class="token punctuation">=</span> <span class="token value attr-value">8</span>
<span class="token key attr-name">lcd_vbp</span>             <span class="token punctuation">=</span> <span class="token value attr-value">10</span>
<span class="token key attr-name">lcd_vt</span>              <span class="token punctuation">=</span> <span class="token value attr-value">522</span>
<span class="token key attr-name">lcd_vspw</span>            <span class="token punctuation">=</span> <span class="token value attr-value">2</span>
<span class="token key attr-name">lcd_lvds_if</span>         <span class="token punctuation">=</span> <span class="token value attr-value">0</span>
<span class="token key attr-name">lcd_lvds_colordepth</span> <span class="token punctuation">=</span> <span class="token value attr-value">1</span>
<span class="token key attr-name">lcd_lvds_mode</span>       <span class="token punctuation">=</span> <span class="token value attr-value">0</span>
<span class="token key attr-name">lcd_frm</span>             <span class="token punctuation">=</span> <span class="token value attr-value">1</span>
<span class="token key attr-name">lcd_io_phase</span>        <span class="token punctuation">=</span> <span class="token value attr-value">0x0000</span>
<span class="token key attr-name">lcd_gamma_en</span>        <span class="token punctuation">=</span> <span class="token value attr-value">0</span>
<span class="token key attr-name">lcd_bright_curve_en</span> <span class="token punctuation">=</span> <span class="token value attr-value">0</span>
<span class="token key attr-name">lcd_cmap_en</span>         <span class="token punctuation">=</span> <span class="token value attr-value">0</span>

<span class="token key attr-name">deu_mode</span>            <span class="token punctuation">=</span> <span class="token value attr-value">0</span>
<span class="token key attr-name">lcdgamma4iep</span>        <span class="token punctuation">=</span> <span class="token value attr-value">22</span>
<span class="token key attr-name">smart_color</span>         <span class="token punctuation">=</span> <span class="token value attr-value">90</span>

<span class="token comment">; Part 6</span>
<span class="token comment">;LCD_D2-LCD_D7</span>
<span class="token key attr-name">lcd_gpio_4</span>               <span class="token punctuation">=</span> <span class="token value attr-value">port:PA00&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_5</span>               <span class="token punctuation">=</span> <span class="token value attr-value">port:PA01&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_6</span>               <span class="token punctuation">=</span> <span class="token value attr-value">port:PA02&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_7</span>               <span class="token punctuation">=</span> <span class="token value attr-value">port:PA03&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_8</span>               <span class="token punctuation">=</span> <span class="token value attr-value">port:PA04&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_9</span>               <span class="token punctuation">=</span> <span class="token value attr-value">port:PA05&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>

<span class="token comment">;LCD_D10-LCD_D15</span>
<span class="token key attr-name">lcd_gpio_10</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA11&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_11</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA10&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_12</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA08&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_13</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA07&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_14</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA06&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_15</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA09&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>

<span class="token comment">;LCD_D18-LCD_D23</span>
<span class="token key attr-name">lcd_gpio_16</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA12&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_17</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA13&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_18</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA14&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_19</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA15&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_20</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PB03&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_21</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PB02&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>

<span class="token comment">;LCD_VSYNC, LCD_HSYNC, LCD_DCLK, LCD_DE</span>
<span class="token key attr-name">lcd_gpio_0</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA18&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_1</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA19&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_2</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA20&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
<span class="token key attr-name">lcd_gpio_3</span>              <span class="token punctuation">=</span> <span class="token value attr-value">port:PA21&lt;8&gt;&lt;0&gt;&lt;3&gt;&lt;0&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>第一部分，决定该配置是否使用，以及使用哪个屏驱动，lcd_driver_name 决定了用哪个屏驱动来初始化，这里是 default_lcd，是针对不需要初始化设置的 RGB 屏。</li><li>第二部分决定下面的配置是一个并行 RGB 的配置。</li><li>第三部分决定 SoC 中的 LCD 模块发送时序。请查看屏时序参数说明。</li><li>第四部分决定背光（pwm 和 lcd_bl_en）。请看背光相关参数。</li><li>第五部分是显示效果部分的配置，如果非 24 位的 RGB，那么一般情况下需要设置lcd_frm。</li><li>第六部分就是电源和管脚配置。是用 RGB666 还是 RGB888，需要根据实际 pinmux 表来决定，如果该芯片只有 18 根 rgb 数据则只能 rgb18。请看电源和管脚参数。</li></ol><h2 id="串行-rgb-接口" tabindex="-1"><a class="header-anchor" href="#串行-rgb-接口" aria-hidden="true">#</a> 串行 RGB 接口</h2><p>串行 RGB 是相对于并行 RGB 来说，而并不是说它只用一根线来发数据，只要通过多个时钟周期才能把一个像素的数据发完，那么这样的 RGB 接口就是串行 RGB。</p><p>同样与并行 RGB 接口一样，配置中并不需要也无法体现具体是哪种串行 RGB 接口，你要做的就是把硬件连接对就行。</p><blockquote><p>这里需要注意的是，对于该接口，SoC 总共需要三个周期才能发完一个 pixel，所以我们配置时序的时候，需要满足 <code>lcd_dclk_freq*3=lcd_ht*lcd_vt60</code>，或者 <code>lcd_dclk_freq=lcd_ht/3*lcd_vt*60</code> 要么 3 倍 <code>lcd_ht</code> 要么 3 倍 <code>lcd_dclk_freq</code>。</p></blockquote><h2 id="i8080-接口" tabindex="-1"><a class="header-anchor" href="#i8080-接口" aria-hidden="true">#</a> I8080 接口</h2><p>Intel 8080 接口屏 (又称 MCU 接口) 很老的协议，一般用在分辨率很小的屏上</p><p>管脚的控制脚有 6 种:</p><table><thead><tr><th style="text-align:left;">管脚</th><th style="text-align:left;">作用说明</th></tr></thead><tbody><tr><td style="text-align:left;">CS 片选信号</td><td style="text-align:left;">决定该芯片是否工作。</td></tr><tr><td style="text-align:left;">RS 寄存器选择信号</td><td style="text-align:left;">低表示选择 index 或者 status 寄存器，高表示选择控制寄存器。实际场景中一般接 SoC 的 LCD_DE 脚（数据使能脚）。</td></tr><tr><td style="text-align:left;">WR 数据命令区分信号</td><td style="text-align:left;">即写时钟信号，一般接 SoC 的 LCD_CLK 脚。（低表示写数据)</td></tr><tr><td style="text-align:left;">RD 数据读信号</td><td style="text-align:left;">即读时钟信号，一般接 SoC 的 LCD_HSYNC 脚。（低表示读数据）</td></tr><tr><td style="text-align:left;">RESET</td><td style="text-align:left;">复位 LCD（用固定命令系列 0 1 0 来复位）</td></tr><tr><td style="text-align:left;">Data</td><td style="text-align:left;">双向数据</td></tr></tbody></table><p>I8080 根据 Data 的数据位宽接口有 8/9/16/18，连哪些脚参考，即使位宽一样，连的管脚也不一样，还要考虑的因素是 rgb 格式。</p><ol><li>RGB565，总共有 65K 种颜色</li><li>RGB666，总共有 262K 种颜色。</li><li>9bit 固定为 262K。</li></ol><h2 id="rgb-和-i8080-管脚配置示意图" tabindex="-1"><a class="header-anchor" href="#rgb-和-i8080-管脚配置示意图" aria-hidden="true">#</a> RGB 和 I8080 管脚配置示意图</h2><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part1/chapter4/image4.png" alt=""></p><h2 id="sys-config-参数说明" tabindex="-1"><a class="header-anchor" href="#sys-config-参数说明" aria-hidden="true">#</a> sys_config 参数说明</h2><h3 id="lcd-接口参数说明" tabindex="-1"><a class="header-anchor" href="#lcd-接口参数说明" aria-hidden="true">#</a> LCD 接口参数说明</h3><h4 id="lcd-driver-name" tabindex="-1"><a class="header-anchor" href="#lcd-driver-name" aria-hidden="true">#</a> lcd_driver_name</h4><p>Lcd 屏驱动的名字（字符串），必须与屏驱动的名字对应。</p><h4 id="lcd-model-name" tabindex="-1"><a class="header-anchor" href="#lcd-model-name" aria-hidden="true">#</a> lcd_model_name</h4><p>Lcd 屏模型名字，非必须，可以用于同个屏驱动中进一步区分不同屏。</p><h4 id="lcd-if" tabindex="-1"><a class="header-anchor" href="#lcd-if" aria-hidden="true">#</a> lcd_if</h4><p>Lcd Interface，设置相应值的对应含义为：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：HV RGB接口
<span class="token number">1</span>：CPU<span class="token operator">/</span>I80接口
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lcd-hv-if" tabindex="-1"><a class="header-anchor" href="#lcd-hv-if" aria-hidden="true">#</a> lcd_hv_if</h4><p>Lcd HV panel Interface， 这个参数只有在 lcd_if=0 时才有效。定义 RGB 同步屏下的几种接口类型，设置相应值的对应含义为：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：Parallel RGB
<span class="token number">8</span>：Serial RGB
<span class="token number">10</span>：Dummy RGB
<span class="token number">11</span>：RGB Dummy
<span class="token number">12</span>：Serial <span class="token function">YUV</span> <span class="token punctuation">(</span>CCIR656<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lcd-hv-clk-phase" tabindex="-1"><a class="header-anchor" href="#lcd-hv-clk-phase" aria-hidden="true">#</a> lcd_hv_clk_phase</h4><p>这个参数只有在 lcd_if=0 时才有效。定义 RGB 同步屏的 clock 与 data 之间的相位关系。总共有 4个相位可供调节,设置相应值的对应含义为：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span><span class="token operator">:</span> <span class="token number">0</span> degree
<span class="token number">1</span><span class="token operator">:</span> <span class="token number">90</span> degree
<span class="token number">2</span><span class="token operator">:</span> <span class="token number">180</span> degree
<span class="token number">3</span><span class="token operator">:</span> <span class="token number">270</span> degree
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lcd-hv-sync-polarity" tabindex="-1"><a class="header-anchor" href="#lcd-hv-sync-polarity" aria-hidden="true">#</a> lcd_hv_sync_polarity</h4><p>这个参数只有在 lcd_if=0 时才有效。定义 RGB 同步屏的 hsync 和 vsync 的极性。设置相应值的对应含义为：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：vsync active low，hsync active low
<span class="token number">1</span>：vsync active high，hsync active low
<span class="token number">2</span>：vsync active low，hsync active high
<span class="token number">3</span>：vsync active high，hsync active high
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lcd-hv-srgb-seq" tabindex="-1"><a class="header-anchor" href="#lcd-hv-srgb-seq" aria-hidden="true">#</a> lcd_hv_srgb_seq</h4><p>这个参数只有在 lcd_if=0 且 lcd_hv_if=8（Serial RGB）时才有效。定义奇数行 RGB 输出的顺序：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span><span class="token operator">:</span> Odd lines R‑G‑B<span class="token punctuation">;</span> Even line R‑G‑B
<span class="token number">1</span><span class="token operator">:</span> Odd lines B‑R‑G<span class="token punctuation">;</span> Even line R‑G‑B
<span class="token number">2</span><span class="token operator">:</span> Odd lines G‑B‑R<span class="token punctuation">;</span> Even line R‑G‑B
<span class="token number">4</span><span class="token operator">:</span> Odd lines R‑G‑B<span class="token punctuation">;</span> Even line B‑R‑G
<span class="token number">5</span><span class="token operator">:</span> Odd lines B‑R‑G<span class="token punctuation">;</span> Even line B‑R‑G
<span class="token number">6</span><span class="token operator">:</span> Odd lines G‑B‑R<span class="token punctuation">;</span> Even line B‑R‑G
<span class="token number">8</span><span class="token operator">:</span> Odd lines R‑G‑B<span class="token punctuation">;</span> Even line B‑R‑G
<span class="token number">9</span><span class="token operator">:</span> Odd lines B‑R‑G<span class="token punctuation">;</span> Even line G‑B‑R
<span class="token number">10</span><span class="token operator">:</span> Odd lines G‑B‑R<span class="token punctuation">;</span> Even line G‑B‑R
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lcd-hv-syuv-seq" tabindex="-1"><a class="header-anchor" href="#lcd-hv-syuv-seq" aria-hidden="true">#</a> lcd_hv_syuv_seq</h4><p>这个参数只有在 lcd_if=0 且 lcd_hv_if=12（Serial YUV）时才有效。定义 YUV 输出格式：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：YUYV
<span class="token number">1</span>：YVYU
<span class="token number">2</span>：UYVY
<span class="token number">3</span>：VYU
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lcd-hv-syuv-fdly" tabindex="-1"><a class="header-anchor" href="#lcd-hv-syuv-fdly" aria-hidden="true">#</a> lcd_hv_syuv_fdly</h4><p>这个参数只有在 lcd_if=0 且 lcd_hv_if=12（Serial YUV）时才有效。定义 CCIR656 编码时 F 相对有效行延迟的行数：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：F toggle right after active video line
<span class="token number">1</span>：Delay <span class="token number">2</span> <span class="token function">lines</span> <span class="token punctuation">(</span>CCIR PAL<span class="token punctuation">)</span>
<span class="token number">2</span>：Delay <span class="token number">3</span> <span class="token function">lines</span> <span class="token punctuation">(</span>CCIR NTSC<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lcd-cpu-if" tabindex="-1"><a class="header-anchor" href="#lcd-cpu-if" aria-hidden="true">#</a> lcd_cpu_if</h4><p>这个参数只有在 lcd_if=1 时才有效, 具体时序可参照RGB 和 I8080 管脚配置示意图中 CPU 那几列。设置相应值的对应含义为：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：<span class="token number">18</span>bit<span class="token operator">/</span><span class="token number">1</span>cycle <span class="token punctuation">(</span>RGB666<span class="token punctuation">)</span>
<span class="token number">2</span><span class="token operator">:</span> <span class="token number">16</span>bit<span class="token operator">/</span><span class="token number">3</span>cycle <span class="token punctuation">(</span>RGB666<span class="token punctuation">)</span>
<span class="token number">4</span>：<span class="token number">16</span>bit<span class="token operator">/</span><span class="token number">2</span>cycle <span class="token punctuation">(</span>RGB666<span class="token punctuation">)</span>
<span class="token number">6</span>：<span class="token number">16</span>bit<span class="token operator">/</span><span class="token number">2</span>cycle <span class="token punctuation">(</span>RGB666<span class="token punctuation">)</span>
<span class="token number">8</span>：<span class="token number">16</span>bit<span class="token operator">/</span><span class="token number">1</span>cycle <span class="token punctuation">(</span>RGB565<span class="token punctuation">)</span>
<span class="token number">10</span>：<span class="token number">9</span>bit<span class="token operator">/</span><span class="token number">1</span>cycle <span class="token punctuation">(</span>RGB666<span class="token punctuation">)</span>
<span class="token number">12</span>：<span class="token number">8</span>bit<span class="token operator">/</span><span class="token number">3</span>cycle <span class="token punctuation">(</span>RGB666<span class="token punctuation">)</span>
<span class="token number">14</span>：<span class="token number">8</span>bit<span class="token operator">/</span><span class="token number">2</span>cycle <span class="token punctuation">(</span>RGB565<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lcd-cpu-te" tabindex="-1"><a class="header-anchor" href="#lcd-cpu-te" aria-hidden="true">#</a> lcd_cpu_te</h4><p>设置相应值的对应含义为，设置为 0 时，刷屏间隔时间为 lcd_ht × lcd_vt；设置为 1 或 2 时，刷屏间隔时间为两个 te 脉冲：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：frame trigged automatically
<span class="token number">1</span>：frame trigged by te rising edge
<span class="token number">2</span>：frame trigged by te falling edge
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lcd-cpu-mode" tabindex="-1"><a class="header-anchor" href="#lcd-cpu-mode" aria-hidden="true">#</a> lcd_cpu_mode</h4><p>设置相应值的对应含义为，设置为 0 时，刷屏间隔时间为 lcd_ht × lcd_vt；设置为 1 或 2 时，刷屏间隔时间为两个 te 脉冲：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：中断自动根据时序，由场消隐信号内部触发
<span class="token number">1</span>：中断根据数据Block的counter触发或者由外部te触发。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="屏时序参数说明" tabindex="-1"><a class="header-anchor" href="#屏时序参数说明" aria-hidden="true">#</a> 屏时序参数说明</h2><p>下面几个参数对于调屏非常关键，决定了发送端（SoC）发送数据时序。由于涉及到发送端和接收端的调试，除了分辨率和尺寸之外，其它几个数值都不是绝对不变的，两款一样分辨率，同种接口的屏，它们的数值也有可能不一样。</p><p>获取途径如下：</p><ol><li>询问 LCD 屏厂。</li><li>从屏手册或者 Driver IC 手册中查找（向屏厂索要这些文档）</li><li>在前面两步都搞不定的情况下，可以根据 vesa 标准来设置，主要是 DMT 和 CVT 标准。</li></ol><p>由下面两条公式得知，我们不需要设置 <code>lcd_hfp</code> 和 <code>lcd_vfp</code> 参数，因为驱动会自动根据其它几个已知参数中算出 <code>lcd_hfp</code> 和 <code>lcd_vfp</code>。</p><h3 id="lcd-时序参数" tabindex="-1"><a class="header-anchor" href="#lcd-时序参数" aria-hidden="true">#</a> LCD 时序参数</h3><h4 id="lcd-x" tabindex="-1"><a class="header-anchor" href="#lcd-x" aria-hidden="true">#</a> lcd_x</h4><p>显示屏的水平像素数量，即屏分辨率中的宽</p><h4 id="lcd-y" tabindex="-1"><a class="header-anchor" href="#lcd-y" aria-hidden="true">#</a> lcd_y</h4><p>显示屏的垂直行数，即屏分辨率中的高。</p><h4 id="lcd-ht" tabindex="-1"><a class="header-anchor" href="#lcd-ht" aria-hidden="true">#</a> lcd_ht</h4><p>指一行总的 dclk 的 cycle 个数。</p><h4 id="lcd-hbp" tabindex="-1"><a class="header-anchor" href="#lcd-hbp" aria-hidden="true">#</a> lcd_hbp</h4><p>指有效行间，行同步信号（hsync）开始，到有效数据开始之间的 dclk 的 cycle 个数，包括同步信号区。包含了 hspw 段，即lcd_hbp=实际的hbp+实际的hspw。</p><h4 id="lcd-hspw" tabindex="-1"><a class="header-anchor" href="#lcd-hspw" aria-hidden="true">#</a> lcd_hspw</h4><p>指行同步信号的宽度。单位为 1 个 dclk 的时间（即是 1 个 data cycle 的时间）。</p><h4 id="lcd-vt" tabindex="-1"><a class="header-anchor" href="#lcd-vt" aria-hidden="true">#</a> lcd_vt</h4><p>指一场的总行数。</p><h4 id="lcd-vbp" tabindex="-1"><a class="header-anchor" href="#lcd-vbp" aria-hidden="true">#</a> lcd_vbp</h4><p>指场同步信号（vsync）开始，到有效数据行开始之间的行数，包括场同步信号区。包含了 vspw 段，即 lcd_vbp= 实际的 vbp+ 实际的 vspw。</p><h4 id="lcd-vspw" tabindex="-1"><a class="header-anchor" href="#lcd-vspw" aria-hidden="true">#</a> lcd_vspw</h4><p>指场同步信号的宽度。单位为行。</p><h4 id="lcd-dclk-freq" tabindex="-1"><a class="header-anchor" href="#lcd-dclk-freq" aria-hidden="true">#</a> lcd_dclk_freq</h4><p>传输像素传送频率（单位为 MHz）。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>fps <span class="token operator">=</span> <span class="token punctuation">(</span>lcd_dclk_freq <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>ht <span class="token operator">*</span> vt<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个值根据以下公式计算</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>lcd_dclk_freq <span class="token operator">=</span> lcd_ht <span class="token operator">*</span> lcd_vt <span class="token operator">*</span> fps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：</p><ol><li>后面的三个参数都是从屏手册中获得，fps 一般是 60。</li><li>如果是串行接口，发完一个像素需要 2 到 3 个周期的，那么可以用以下公式计算：</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>lcd_dclk_freq <span class="token operator">*</span> cycles <span class="token operator">=</span> lcd_ht <span class="token operator">*</span> lcd_vt <span class="token operator">*</span> fps
lcd_dclk_freq <span class="token operator">=</span> lcd_ht <span class="token operator">*</span> cycles <span class="token operator">*</span> lcd_vt <span class="token operator">*</span> fps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lcd-width" tabindex="-1"><a class="header-anchor" href="#lcd-width" aria-hidden="true">#</a> lcd_width</h4><p>此参数描述 lcd 屏幕的物理宽度，单位是 mm，用于计算 dpi。</p><h4 id="lcd-height" tabindex="-1"><a class="header-anchor" href="#lcd-height" aria-hidden="true">#</a> lcd_height</h4><p>此参数描述 lcd 屏幕的物理高度，单位是 mm，用于计算 dpi。</p><h3 id="背光相关参数" tabindex="-1"><a class="header-anchor" href="#背光相关参数" aria-hidden="true">#</a> 背光相关参数</h3><p>目前用得比较广泛的就是 pwm 背光调节，原理是利用 pwm 脉冲开关产生的高频率闪烁效应，通过调节占空比，达到欺骗人眼，调节亮暗的目的。</p><h4 id="lcd-pwm-used" tabindex="-1"><a class="header-anchor" href="#lcd-pwm-used" aria-hidden="true">#</a> lcd_pwm_used</h4><p>是否使用 pwm，此参数标识用以背光亮度的控制</p><h4 id="lcd-pwm-ch" tabindex="-1"><a class="header-anchor" href="#lcd-pwm-ch" aria-hidden="true">#</a> lcd_pwm_ch</h4><p>此参数标识使用的 Pwm 通道，这里是指使用 SoC 哪个 pwm 通道，通过查看原理图连接可知。</p><h4 id="lcd-pwm-freq" tabindex="-1"><a class="header-anchor" href="#lcd-pwm-freq" aria-hidden="true">#</a> lcd_pwm_freq</h4><p>这个参数配置 PWM 信号的频率，单位为 Hz。</p><ul><li>频率不宜过低否则很容易就会看到闪烁，频率不宜过快否则背光调节效果差。部分屏手册会标明所允许的 pwm 频率范围，请遵循屏手册固定范围进行设置。</li><li>在低亮度的时候容易看到闪烁，是正常现象，目前已知用上 pwm 的背光都是如此。</li></ul><h4 id="lcd-pwm-pol" tabindex="-1"><a class="header-anchor" href="#lcd-pwm-pol" aria-hidden="true">#</a> lcd_pwm_pol</h4><p>这个参数配置 PWM 信号的占空比的极性。设置相应值对应含义为：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：active high
<span class="token number">1</span>：active low
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lcd-pwm-max-limit" tabindex="-1"><a class="header-anchor" href="#lcd-pwm-max-limit" aria-hidden="true">#</a> lcd_pwm_max_limit</h4><p>Lcd backlight PWM 最高限制，以亮度值表示。</p><p>比如 150，则表示背光最高只能调到 150，0‑255 范围内的亮度值将会被线性映射到 0‑150 范围内。用于控制最高背光亮度，节省功耗</p><h4 id="lcd-bl-en" tabindex="-1"><a class="header-anchor" href="#lcd-bl-en" aria-hidden="true">#</a> lcd_bl_en</h4><p>背光使能脚，非必须，看原理图是否有，用于使能或者禁止背光电路的电压。</p><p>示例：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>lcd_bl_en <span class="token operator">=</span> port<span class="token operator">:</span>PD24<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">2</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token keyword">default</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>含义：PD24 输出高电平时打开 LCD 背光；下拉，默认高电平。</p><ul><li>第一个尖括号：功能分配。1 为输出。</li><li>第二个尖括号：内置电阻。使用 0 的话，标示内部电阻高阻态，如果是 1 则是内部电阻上拉，2就代表内部电阻下拉。使用 default 的话代表默认状态，即电阻上拉。其它数据无效。</li><li>第三个尖括号：驱动能力。default 表驱动能力是等级 1。</li><li>第四个尖括号：电平。0 为低电平，1 为高电平。</li></ul><p>需要在屏驱动调用相应的接口进行开、关的控制。</p><p>一般来说，高电平是使能，在这个前提下，建议将内阻电阻设置成下拉，防止硬件原因造成的上拉，导致背光提前亮。默认电平填写高电平，这是 uboot 显示过度到内核显示、平滑无闪烁的需要。</p><h4 id="lcd-bl-n-percent" tabindex="-1"><a class="header-anchor" href="#lcd-bl-n-percent" aria-hidden="true">#</a> lcd_bl_n_percent</h4><p>背光映射值，n 为 (0‑100)。</p><p>此功能是针对亮度非线性的 LCD 屏的，按照配置的亮度曲线方式来调整亮度变化，以使亮度变化更线性。</p><p>比如 lcd_bl_50_percent = 60，表明将 50% 的亮度值调整成 60%，即亮度比原来提高 10%。</p><blockquote><p>修改此属性不当可能导致背光调节效果差。</p></blockquote><h4 id="lcd-backlight" tabindex="-1"><a class="header-anchor" href="#lcd-backlight" aria-hidden="true">#</a> lcd_backlight</h4><p>背光默认值，0‑255。</p><p>此属性决定在 uboot 显示 logo 阶段的亮度，进入都内核时则是读取保存的配置来决定亮度。</p><blockquote><p>显示 logo 阶段，一般来说需要比较亮的亮度，业内做法都是如此。</p></blockquote><h3 id="显示效果相关参数" tabindex="-1"><a class="header-anchor" href="#显示效果相关参数" aria-hidden="true">#</a> 显示效果相关参数</h3><h4 id="lcd-frm-1" tabindex="-1"><a class="header-anchor" href="#lcd-frm-1" aria-hidden="true">#</a> lcd_frm</h4><p>Lcd Frame Rate Modulator, FRM 是解决由于 PIN 减少导致的色深问题，有些 LCD 屏的像素格式是 18bit 色深（RGB666）或 16bit 色深（RGB565），建议打开 FRM 功能，通过 dither 的方式弥补色深，使显示达到 24bit 色深（RGB888）的效果。如下图所示，上图是色深为 RGB66 的 LCD 屏显示，下图是打开 dither 后的显示，打开 dither 后色彩渐变的地方过度平滑。</p><p>参数设置相应值对应含义为：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：RGB888 ‑‑ RGB888 direct
<span class="token number">1</span>：RGB888 ‑‑ RGB666 dither
<span class="token number">2</span>：RGB888 ‑‑ RGB565 dither
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part1/chapter4/image5.png" alt=""></p><h4 id="lcd-gamma-en-1" tabindex="-1"><a class="header-anchor" href="#lcd-gamma-en-1" aria-hidden="true">#</a> lcd_gamma_en</h4><p>Lcd Gamma Correction Enable，设置相应值的对应含义为：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：LCD 的 Gamma 校正功能关闭
<span class="token number">1</span>：LCD 的 Gamma 校正功能开启
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置为 1 时，需要在屏驱动中对 <code>lcd_gamma_tbl[256]</code> 进行赋值。</p><h4 id="lcd-cmap-en-1" tabindex="-1"><a class="header-anchor" href="#lcd-cmap-en-1" aria-hidden="true">#</a> lcd_cmap_en</h4><p>Lcd Color Map Enable， 设置为 1 时，需要对 <code>lcd_cmap_tbl [2][3][4]</code> 进行赋值 <code>Lcd Color Map Table</code>。</p><p>每个像素有 R、G、B 三个单元，每四个像素组成一个选择项，总共有 12 个可选。数组第一维表示奇偶行，第二维表示像素的 RGB，第三维表示第几个像素，数组的内容即表示该位置映射到的内容。</p><p>LCD CMAP 是对像素的映射输出功能，只有像素有特殊排布的 LCD 屏才需要配置。</p><p>LCD CMAP 定义每行的 4 个像素为一个总单元，每个像素分 R、G、B 3 个小单元，总共有 12 个小单元。通过 lcd_cmap_tbl 定义映射关系，输出的每个小单元可随意映射到 12 个小单元之一。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>__u32 lcd_cmap_tbl<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">{</span>LCD_CMAP_G0<span class="token punctuation">,</span>LCD_CMAP_B1<span class="token punctuation">,</span>LCD_CMAP_G2<span class="token punctuation">,</span>LCD_CMAP_B3<span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>LCD_CMAP_B0<span class="token punctuation">,</span>LCD_CMAP_R1<span class="token punctuation">,</span>LCD_CMAP_B2<span class="token punctuation">,</span>LCD_CMAP_R3<span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>LCD_CMAP_R0<span class="token punctuation">,</span>LCD_CMAP_G1<span class="token punctuation">,</span>LCD_CMAP_R2<span class="token punctuation">,</span>LCD_CMAP_G3<span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">{</span>LCD_CMAP_B3<span class="token punctuation">,</span>LCD_CMAP_G2<span class="token punctuation">,</span>LCD_CMAP_B1<span class="token punctuation">,</span>LCD_CMAP_G0<span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>LCD_CMAP_R3<span class="token punctuation">,</span>LCD_CMAP_B2<span class="token punctuation">,</span>LCD_CMAP_R1<span class="token punctuation">,</span>LCD_CMAP_B0<span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>LCD_CMAP_G3<span class="token punctuation">,</span>LCD_CMAP_R2<span class="token punctuation">,</span>LCD_CMAP_G1<span class="token punctuation">,</span>LCD_CMAP_R0<span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上，上三行代表奇数行的像素排布，下三行代表偶数行的像素排布；</p><p>每四个像素为一个单元，第一列代表每四个像素的第一个像素映射，第二列代表每四个像素的第二个像素映射，以此类推。</p><p>如上的定义，像素的输出格式如下图所示。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part1/chapter4/image6.png" alt=""></p><h4 id="lcd-rb-swap-1" tabindex="-1"><a class="header-anchor" href="#lcd-rb-swap-1" aria-hidden="true">#</a> lcd_rb_swap</h4><p>调换 <code>TCON</code> 模块 <code>RGB</code> 中的 R 分量和 B 分量。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span>：不变
<span class="token number">1</span>：调换R分量和B分量
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>需要 gamma 校正，或色彩映射，在 <code>sys_config.fex</code> 中将相应模块的 <code>enable</code> 参数置 1，<code>lcd_gamma_en</code>, <code>lcd_cmap_en</code>，并且填充 3 个系数表，<code>lcd_gamma_tbl</code>, <code>lcd_cmap_tbl</code>，注意的是：gamma，模板提供了 18 段拐点值，然后再插值出所有的值（255 个）。可以往相应表格内添加子项以补充细节部分。cmap_tbl 的大小是固定的，不能减小或增加表的大小。最终生成的 gamma 表项是由 rgb 三个 gamma 值组成的，各占 8bit。目前提供的模板中，三个 gamma 值是相同的。</p><h3 id="电源和管脚参数" tabindex="-1"><a class="header-anchor" href="#电源和管脚参数" aria-hidden="true">#</a> 电源和管脚参数</h3><h4 id="lcd-power" tabindex="-1"><a class="header-anchor" href="#lcd-power" aria-hidden="true">#</a> lcd_power</h4><p>配置好之后，需要在屏驱动调用相应的接口进行开、关的控制。</p><p>注意：如果有多个电源需要打开，则定义 lcd_power1，lcd_power2 等。</p><h4 id="lcd-pin-power" tabindex="-1"><a class="header-anchor" href="#lcd-pin-power" aria-hidden="true">#</a> lcd_pin_power</h4><p>用法 lcd_power一致，区别是用户设置之后，不需要在屏驱动中去操作，而是驱动框架自行在屏驱动之前使能，在屏驱动之后禁止。</p><p>注意：如果需要多组，则添加 lcd_pin_power1，lcd_pin_power2 等。除了 lcddx 之外，这里的电源还有可能是 pwm 所对应管脚的电源。</p><h4 id="lcd-gpio-0" tabindex="-1"><a class="header-anchor" href="#lcd-gpio-0" aria-hidden="true">#</a> lcd_gpio_0</h4><p>示例：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>lcd_gpio_0 <span class="token operator">=</span> port<span class="token operator">:</span>PD25<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token keyword">default</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>含义：lcd_gpio_0 引脚为 PD25。</p><ul><li>第一个尖括号：功能分配。1 为输出。</li><li>第二个尖括号：内置电阻。使用 0 的话，标示内部电阻高阻态，如果是 1 则是内部电阻上拉，2就代表内部电阻下拉。使用 default 的话代表默认状态，即电阻上拉。其它数据无效。</li><li>第三个尖括号：驱动能力。default 表驱动能力是等级 1。</li><li>第四个尖括号：电平。0 为低电平，1 为高电平。</li></ul><p>注意：如果有多个 gpio 脚需要控制，则定义 lcd_gpio_0，lcd_gpio_1 等。</p><ol><li>配置 LCD 的控制 PIN。可以在屏驱动调用相应的接口进行拉高，拉低的控制，例如 LCD 的 RESET 脚等。</li><li>配置 LCD 的数据 PIN。重点关注 PIN 脚的复用功能数值，具体的 IO 对应关系可参考 user manual 手册进行配置</li></ol><h2 id="调试" tabindex="-1"><a class="header-anchor" href="#调试" aria-hidden="true">#</a> 调试</h2><p>系统起来之后可以输入disp相关调试命令，来协助调试。</p><table><thead><tr><th style="text-align:left;">选项</th><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th><th style="text-align:left;">举例</th></tr></thead><tbody><tr><td style="text-align:left;">空</td><td style="text-align:left;">空</td><td style="text-align:left;">打印出当前显示的信息</td><td style="text-align:left;">disp</td></tr><tr><td style="text-align:left;">-c</td><td style="text-align:left;">Screen_id,color 模式</td><td style="text-align:left;">显示 colorbar。共有 8 种模式，0 到 8</td><td style="text-align:left;">disp ‑c 0 8</td></tr><tr><td style="text-align:left;">-b</td><td style="text-align:left;">Screen_id, 背光值</td><td style="text-align:left;">调整 lcd 背光，背光值范围时 0 到 255</td><td style="text-align:left;">disp ‑b 0 255</td></tr><tr><td style="text-align:left;">-d</td><td style="text-align:left;">Screen_id, 文件路径</td><td style="text-align:left;">抓 DE 图层回写到文件</td><td style="text-align:left;">disp ‑d 0 /sdmmc/xx.bmp</td></tr><tr><td style="text-align:left;">-s</td><td style="text-align:left;">Screen_id，显示类型，显示分辨率</td><td style="text-align:left;">切换显示类型或分辨率</td><td style="text-align:left;">disp ‑s 0 1 4 打开LCD 显示</td></tr></tbody></table><h3 id="查看显示信息" tabindex="-1"><a class="header-anchor" href="#查看显示信息" aria-hidden="true">#</a> 查看显示信息</h3><p>输入disp命令，会有 Log 打印信息。以下信息是所有信息中最重要的。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>disp

screen <span class="token number">0</span><span class="token operator">:</span>
derate <span class="token number">297000000</span> hz<span class="token punctuation">,</span> ref_fps<span class="token operator">:</span><span class="token number">60</span>
mgr0<span class="token operator">:</span> <span class="token number">1280</span>x800 fmt<span class="token punctuation">[</span>rgb<span class="token punctuation">]</span> cs<span class="token punctuation">[</span><span class="token number">0x204</span><span class="token punctuation">]</span> range<span class="token punctuation">[</span>full<span class="token punctuation">]</span> eotf<span class="token punctuation">[</span><span class="token number">0x4</span><span class="token punctuation">]</span> bits<span class="token punctuation">[</span><span class="token number">8</span>bits<span class="token punctuation">]</span> err<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> force_sync<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> unblank direct_show<span class="token punctuation">[</span>false<span class="token punctuation">]</span>
lcd output <span class="token function">backlight</span><span class="token punctuation">(</span> <span class="token number">50</span><span class="token punctuation">)</span> fps<span class="token operator">:</span><span class="token number">60.9</span> <span class="token number">1280</span>x <span class="token number">800</span>

err<span class="token operator">:</span><span class="token number">0</span> skip<span class="token operator">:</span><span class="token number">31</span> irq<span class="token operator">:</span><span class="token number">1942</span> vsync<span class="token operator">:</span><span class="token number">0</span> vsync_skip<span class="token operator">:</span><span class="token number">0</span>
BUF enable ch<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> lyr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> z<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> prem<span class="token punctuation">[</span>N<span class="token punctuation">]</span> a<span class="token punctuation">[</span>globl <span class="token number">255</span><span class="token punctuation">]</span> fmt<span class="token punctuation">[</span> <span class="token number">8</span><span class="token punctuation">]</span> fb<span class="token punctuation">[</span><span class="token number">1280</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">;</span><span class="token number">1280</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">;</span><span class="token number">1280</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">]</span> crop<span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1280</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">]</span> frame<span class="token punctuation">[</span>
    <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1280</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">]</span> addr<span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> flags<span class="token punctuation">[</span><span class="token number">0</span>x <span class="token number">0</span><span class="token punctuation">]</span> trd<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lcd-output" tabindex="-1"><a class="header-anchor" href="#lcd-output" aria-hidden="true">#</a> <strong>lcd output</strong></h4><p>表示当前显示接口是 LCD 输出。</p><h4 id="_1280x800" tabindex="-1"><a class="header-anchor" href="#_1280x800" aria-hidden="true">#</a> 1280x800</h4><p>表示当前 LCD 的分辨率，与 sys_config.fex 中 lcd0 的设置一样。</p><h4 id="ref-fps-60" tabindex="-1"><a class="header-anchor" href="#ref-fps-60" aria-hidden="true">#</a> ref_fps:60</h4><p>是根据你在 sys_config.fex 的 lcd0 填的时序算出来的理论值。</p><h4 id="fps-60-9" tabindex="-1"><a class="header-anchor" href="#fps-60-9" aria-hidden="true">#</a> fps:60.9</h4><p>后面的数值是实时统计的，正常来说应该是在 60(期望的 fps) 附近，如果差太多则不正常，重新检查屏时序，和在屏驱动的初始化序列是否有被调用到。</p><h4 id="irq-1942" tabindex="-1"><a class="header-anchor" href="#irq-1942" aria-hidden="true">#</a> irq:1942</h4><p>这是 vsync 中断的次数，每加 1 都代表刷新了一帧，正常来说是一秒 60（期望的 fps）次，重复 cat sys，如果无变化，则异常。</p><h4 id="buf" tabindex="-1"><a class="header-anchor" href="#buf" aria-hidden="true">#</a> BUF</h4><p>开头的表示图层信息，一行 BUF 表示一个图层，如果一个 BUF 都没有出现，那么将是黑屏，不过和屏驱动本身关系就不大了，应该查看应用层 &amp; 框架层。</p><h4 id="err-0" tabindex="-1"><a class="header-anchor" href="#err-0" aria-hidden="true">#</a> err:0</h4><p>这个表示缺数，如果数字很大且一直变化，屏幕会花甚至全黑，全红等。</p><h4 id="skip-31" tabindex="-1"><a class="header-anchor" href="#skip-31" aria-hidden="true">#</a> skip:31</h4><p>这个表示跳帧的数量，如果这个数值很大且一直变化，有可能卡顿，如果数字与 irq 后面的数字一样，说明每一帧都跳，会黑屏（有背光）</p><h3 id="查看时钟信息" tabindex="-1"><a class="header-anchor" href="#查看时钟信息" aria-hidden="true">#</a> 查看时钟信息</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>hal_ccmu
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个命令可以看哪个时钟是否使能，然后频率是多少。与显示相关的是 tcon，pll_video等。</p><h4 id="查看接口自带-colorbar" tabindex="-1"><a class="header-anchor" href="#查看接口自带-colorbar" aria-hidden="true">#</a> 查看接口自带 colorbar</h4><p>显示是一整条链路，中间任何一个环节出错，最终的表现都是显示异常，图像显示异常几个可能原因：</p><ol><li>图像本身异常。</li><li>图像经过 DE（Display Engine）后异常。</li><li>图像经过接口模块后异常。这是我们关注的点。</li></ol><p>有一个简单的方法可以初步判断，接口模块（tcon 和 dsi 等）可以自己输出内置的一些 patten，比如说彩条，灰阶图，棋盘图等。当接口输出这些内置 patten 的时候，如果这时候显示就异常，这说明了：</p><ol><li>LCD 的驱动或者配置有问题</li><li>LCD 屏由于外部环境导致显示异常</li></ol><p>显示自带 patten 的方式：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>disp ‑c <span class="token number">0</span> X
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的操作是显示 colorbar，其中的 X 可以是 0 到 8</p><h2 id="faq" tabindex="-1"><a class="header-anchor" href="#faq" aria-hidden="true">#</a> FAQ</h2><h3 id="屏显示异常" tabindex="-1"><a class="header-anchor" href="#屏显示异常" aria-hidden="true">#</a> 屏显示异常</h3><p>总结过往经验，绝大部分屏显异常都是由于上下电时序和 timing 不合理导致。</p><h3 id="黑屏‐无背光" tabindex="-1"><a class="header-anchor" href="#黑屏‐无背光" aria-hidden="true">#</a> 黑屏‑无背光</h3><p>问题表现：完全黑屏，背光也没有</p><ol><li>屏驱动添加失败。驱动没有加载屏驱动，导致背光电源相关函数没有运行到。这个你可以通过相关模块的测试命令定位下。</li><li>pwm 配置和背光电路的问题，pwm 的信息可以查看 pwm 模块测试命令和背光相关参数，另外就是直接测量下硬件测量下相关管脚和电压，再检查屏是否初始化成功。</li></ol><h3 id="黑屏‐有背光" tabindex="-1"><a class="header-anchor" href="#黑屏‐有背光" aria-hidden="true">#</a> 黑屏‑有背光</h3><p>黑屏但是有背光，可能有多种原因导致，请依次按以下步骤检查</p><ol><li>没送图层。如果应用没有送任何图层那么表现的现象就是黑屏，通过查看显示信息一小节可以确定有没有送图层。如果确定没有图层，可以通过查看接口自带 colorbar，确认屏能否正常显示。</li><li>SoC 端的显示接口模块没有供电。SoC 端模块没有供电自然无法传输视频信号到屏上。</li><li>复位脚没有复位。如果有复位脚，请确保硬件连接正确，确保复位脚的复位操作有放到屏驱动中。</li><li>sys_config.fex 中 lcd0 有严重错误。第一个是 lcd 的 timing 搞错了，请严格按照屏手册中的提示来写。参考屏时序参数说明。第二个就是，接口类型搞错，比如接的 DSI 屏，配置却写成LVDS 的。</li><li>屏的初始化命令不对。包括各个步骤先后顺序，延时等，这个时候请找屏厂确认初始化命令。</li></ol><h3 id="闪屏" tabindex="-1"><a class="header-anchor" href="#闪屏" aria-hidden="true">#</a> 闪屏</h3><p>分为几种：</p><ol><li>屏的整体在闪：这个最大可能是背光电路的电压不稳定，检查电压</li><li>屏部分在闪，而且是概率性：sys_config.fex 中的时序填写不合理。</li><li>屏上由一个矩形区域在闪：屏极化导致，需要关机放一边再开机则不会。</li></ol><h3 id="条形波纹" tabindex="-1"><a class="header-anchor" href="#条形波纹" aria-hidden="true">#</a> 条形波纹</h3><p>有些 LCD 屏的像素格式是 18bit 色深（RGB666）或 16bit 色深（RGB565），建议打开 FRM 功能，通过 dither 的方式弥补色深，使显示达到 24bit 色深（RGB888）的效果。</p><p>设置 [lcd0] 的 lcd_frm 属性可以改善这种现象。</p><h3 id="背光太亮或者太暗" tabindex="-1"><a class="header-anchor" href="#背光太亮或者太暗" aria-hidden="true">#</a> 背光太亮或者太暗</h3><p>重新配置背光参数</p><h3 id="花屏" tabindex="-1"><a class="header-anchor" href="#花屏" aria-hidden="true">#</a> 花屏</h3><p>花屏的第一个原因是 fps 过高，超过屏的限制：</p><p>FPS 异常是一件非常严重的事情，关系到整个操作系统的稳定，如果 fps 过高会造成系统带宽增加，送显流程异常，fps 过高还会造成 LCD 屏花屏不稳定，容易造成 LCD 屏损坏，FPS 过低则造成用户体验过差。</p><ol><li>通过查看查看显示信息一节，可以得知现在的实时统计的 fps</li><li>如果 fps 离正常值差很多，首先检查 sys_config.fex 中 [lcd0] 节点，所填信息必须满足下面公式：</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>lcd_dclk_freq * num_of_pixel_clk = lcd_ht * lcd_vt * fps / 1e9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，num_of_pixel_clk 通常为 1，表示发送一个像素所需要的时钟周期为 1 一个，低分辨率的MCU 和串行接口通常需要 2 到 3 个时钟周期才能发送完一个像素。</p><p>如果上面填写没有错，通过查看查看时钟信息可以确认下几个主要时钟的频率信息，把这些信息和 sys_config.fex 发给维护者进一步分析。</p><h3 id="rgb-接口或者-i8080-接口显示抖动有花纹" tabindex="-1"><a class="header-anchor" href="#rgb-接口或者-i8080-接口显示抖动有花纹" aria-hidden="true">#</a> RGB 接口或者 I8080 接口显示抖动有花纹</h3><ol><li>改大时钟管脚的管脚驱动能力</li><li>修改时钟相位，也就是修改 lcd_hv_clk_phase。由于发送端和接收端时钟相位的不同导致接收端解错若干位。</li></ol><h3 id="lcd-屏出现极化和残影" tabindex="-1"><a class="header-anchor" href="#lcd-屏出现极化和残影" aria-hidden="true">#</a> LCD 屏出现极化和残影</h3><p>何谓液晶极化现象：实际上就是液晶电介质极化。就是在外界电场作用下，电介质内部沿电场方向产生感应偶极矩，在电解质表明出现极化电荷的现象叫做电介质的极化。</p><p>通俗的讲就是在液晶面板施加一定电压后，会聚集大量电荷，当电压消失的时候，这些聚集的电荷也要释放，但由于介电效应，这些聚集的电荷不会立刻释放消失，这些不会马上消失的惰性电荷造成了液晶的 DC 残留从而形成了极化现象。</p><p><strong>几种常见的液晶极化现象</strong></p><ol><li>液晶长期静止某个画面的时候，切换到灰阶画面的时候出现屏闪，屏闪一段时间后消失。这种现象属于残留电荷放电的过程。</li><li>液晶长期静止某个画面的时候，出现四周发黑中间发白的现象，业内称为黑白电视框异常。</li><li>非法关机的时候，重新上电会出现屏闪，屏闪一定时间后消失。与第一种原因相同。</li><li>残影现象：当液晶静止在一个画面比较久的情况下，切换其他画面出现的镜像残留。残影的本质来说是液晶 DC 残留电荷导致，某种意义来说也属于液晶极化现象</li></ol><p>针对液晶屏出现极化和残影现象，有如下对策。</p><ol><li>调整 vcom 电压大小。</li></ol><p>VCOM 是液晶分子偏转的参考电压，要求要稳定，对液晶显示有直接影响，具体的屏不同的话也是不同的。电压的具体值是根据输入的数据以及 Vcom 电压大小来确定的，用来显示各种不同灰阶，也就是实现彩色显示 GAMMA。Gamma 电压是用来控制显示器的灰阶的，一般情况下分为G0~G14，不同的 Gamma 电压与 Vcom 电压之间的压差造成液晶旋转角度不同从而形成亮度的差异，Vcom 电压最好的状况是位于 G0 和 G14 的中间值，这样液晶屏的闪烁状况会最好。调节 vcom 电压的方式，如果屏管脚有 vcom 管脚，直接调整相关电路，如果屏 driver IC 提供寄存器接口，可以通过寄存器接口来调整大小。</p><ol><li>严格按照屏规定的上下电时序来对屏进行开关屏。许多极化残影现象并非长时间显示静止显示某个画面导致的，而是由于关机或者关屏时没有严格按照下电时序导致的，比如该关的电没关,或者延时不够。</li></ol><h2 id="典型屏幕参数配置" tabindex="-1"><a class="header-anchor" href="#典型屏幕参数配置" aria-hidden="true">#</a> 典型屏幕参数配置</h2><h3 id="_1024x600-rgb666-屏幕" tabindex="-1"><a class="header-anchor" href="#_1024x600-rgb666-屏幕" aria-hidden="true">#</a> 1024x600 RGB666 屏幕</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token punctuation">;</span>Parallel RGB LCD
<span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token punctuation">[</span>lcd0<span class="token punctuation">]</span>
lcd_used            <span class="token operator">=</span> <span class="token number">1</span>

lcd_driver_name     <span class="token operator">=</span> <span class="token string">&quot;default_lcd&quot;</span>
lcd_backlight       <span class="token operator">=</span> <span class="token number">150</span>
lcd_if              <span class="token operator">=</span> <span class="token number">0</span>
lcd_x               <span class="token operator">=</span> <span class="token number">1024</span>
lcd_y               <span class="token operator">=</span> <span class="token number">600</span>
lcd_width           <span class="token operator">=</span> <span class="token number">150</span>
lcd_height          <span class="token operator">=</span> <span class="token number">94</span>
lcd_rb_swap         <span class="token operator">=</span> <span class="token number">0</span>
lcd_dclk_freq       <span class="token operator">=</span> <span class="token number">48</span>
lcd_pwm_used        <span class="token operator">=</span> <span class="token number">1</span>
lcd_pwm_ch          <span class="token operator">=</span> <span class="token number">7</span>
lcd_pwm_freq        <span class="token operator">=</span> <span class="token number">500000</span>
lcd_pwm_pol         <span class="token operator">=</span> <span class="token number">1</span>
lcd_hbp             <span class="token operator">=</span> <span class="token number">160</span>
lcd_ht              <span class="token operator">=</span> <span class="token number">1344</span>
lcd_hspw            <span class="token operator">=</span> <span class="token number">20</span>
lcd_vbp             <span class="token operator">=</span> <span class="token number">20</span>
lcd_vt              <span class="token operator">=</span> <span class="token number">635</span>
lcd_vspw            <span class="token operator">=</span> <span class="token number">3</span>
lcd_lvds_if         <span class="token operator">=</span> <span class="token number">0</span>
lcd_lvds_colordepth <span class="token operator">=</span> <span class="token number">1</span>
lcd_lvds_mode       <span class="token operator">=</span> <span class="token number">0</span>
lcd_frm             <span class="token operator">=</span> <span class="token number">0</span>
lcd_io_phase        <span class="token operator">=</span> <span class="token number">0x0000</span>
lcd_gamma_en        <span class="token operator">=</span> <span class="token number">0</span>
lcd_bright_curve_en <span class="token operator">=</span> <span class="token number">0</span>
lcd_cmap_en         <span class="token operator">=</span> <span class="token number">0</span>

<span class="token punctuation">;</span>reset
<span class="token punctuation">;</span>lcd_gpio_0               <span class="token operator">=</span> port<span class="token operator">:</span>GPIO_EXP15<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span>
<span class="token punctuation">;</span>cs
<span class="token punctuation">;</span>lcd_gpio_1               <span class="token operator">=</span> port<span class="token operator">:</span>GPIO_EXP03<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
<span class="token punctuation">;</span>sdi
<span class="token punctuation">;</span>lcd_gpio_2               <span class="token operator">=</span> port<span class="token operator">:</span>GPIO_EXP06<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
<span class="token punctuation">;</span>scl
<span class="token punctuation">;</span>lcd_gpio_3               <span class="token operator">=</span> port<span class="token operator">:</span>GPIO_EXP07<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_D2<span class="token operator">-</span>LCD_D7
lcd_gpio_4               <span class="token operator">=</span> port<span class="token operator">:</span>PA00<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_5               <span class="token operator">=</span> port<span class="token operator">:</span>PA01<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_6               <span class="token operator">=</span> port<span class="token operator">:</span>PA02<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_7               <span class="token operator">=</span> port<span class="token operator">:</span>PA03<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_8               <span class="token operator">=</span> port<span class="token operator">:</span>PA04<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_9               <span class="token operator">=</span> port<span class="token operator">:</span>PA05<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_D10<span class="token operator">-</span>LCD_D15
lcd_gpio_10              <span class="token operator">=</span> port<span class="token operator">:</span>PA11<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_11              <span class="token operator">=</span> port<span class="token operator">:</span>PA10<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_12              <span class="token operator">=</span> port<span class="token operator">:</span>PA08<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_13              <span class="token operator">=</span> port<span class="token operator">:</span>PA07<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_14              <span class="token operator">=</span> port<span class="token operator">:</span>PA06<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_15              <span class="token operator">=</span> port<span class="token operator">:</span>PA09<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_D18<span class="token operator">-</span>LCD_D23
lcd_gpio_16              <span class="token operator">=</span> port<span class="token operator">:</span>PA12<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_17              <span class="token operator">=</span> port<span class="token operator">:</span>PA13<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_18              <span class="token operator">=</span> port<span class="token operator">:</span>PA14<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_19              <span class="token operator">=</span> port<span class="token operator">:</span>PA15<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_20              <span class="token operator">=</span> port<span class="token operator">:</span>PB03<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_21              <span class="token operator">=</span> port<span class="token operator">:</span>PB02<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_VSYNC<span class="token punctuation">,</span> LCD_HSYNC<span class="token punctuation">,</span> LCD_DCLK<span class="token punctuation">,</span> LCD_DE
lcd_gpio_0              <span class="token operator">=</span> port<span class="token operator">:</span>PA18<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_1              <span class="token operator">=</span> port<span class="token operator">:</span>PA19<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_2              <span class="token operator">=</span> port<span class="token operator">:</span>PA20<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_3              <span class="token operator">=</span> port<span class="token operator">:</span>PA21<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_320x480-st7796-i8080-屏幕" tabindex="-1"><a class="header-anchor" href="#_320x480-st7796-i8080-屏幕" aria-hidden="true">#</a> 320x480 ST7796 i8080 屏幕</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token punctuation">;</span>MCU LCD
<span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token punctuation">[</span>lcd0<span class="token punctuation">]</span>
lcd_used            <span class="token operator">=</span> <span class="token number">1</span>

lcd_driver_name     <span class="token operator">=</span> <span class="token string">&quot;cl40bc1019_cpu&quot;</span>
lcd_backlight       <span class="token operator">=</span> <span class="token number">150</span>
lcd_if              <span class="token operator">=</span> <span class="token number">1</span>
lcd_x               <span class="token operator">=</span> <span class="token number">320</span>
lcd_y               <span class="token operator">=</span> <span class="token number">480</span>
lcd_width           <span class="token operator">=</span> <span class="token number">150</span>
lcd_height          <span class="token operator">=</span> <span class="token number">94</span>
lcd_rb_swap         <span class="token operator">=</span> <span class="token number">0</span>

lcd_pwm_used        <span class="token operator">=</span> <span class="token number">1</span>
lcd_pwm_ch          <span class="token operator">=</span> <span class="token number">7</span>
lcd_pwm_freq        <span class="token operator">=</span> <span class="token number">5000</span>
lcd_pwm_pol         <span class="token operator">=</span> <span class="token number">1</span>

lcd_cpu_mode        <span class="token operator">=</span> <span class="token number">0</span>
lcd_cpu_te          <span class="token operator">=</span> <span class="token number">0</span>
lcd_cpu_if          <span class="token operator">=</span> <span class="token number">12</span>

lcd_dclk_freq       <span class="token operator">=</span> <span class="token number">32</span>
lcd_hbp             <span class="token operator">=</span> <span class="token number">75</span>
lcd_ht              <span class="token operator">=</span> <span class="token number">1060</span>
lcd_hspw            <span class="token operator">=</span> <span class="token number">40</span>
lcd_vbp             <span class="token operator">=</span> <span class="token number">6</span>
lcd_vt              <span class="token operator">=</span> <span class="token number">490</span>
lcd_vspw            <span class="token operator">=</span> <span class="token number">2</span>

lcd_lvds_if         <span class="token operator">=</span> <span class="token number">0</span>
lcd_lvds_colordepth <span class="token operator">=</span> <span class="token number">1</span>
lcd_lvds_mode       <span class="token operator">=</span> <span class="token number">0</span>
lcd_frm             <span class="token operator">=</span> <span class="token number">0</span>
lcd_io_phase        <span class="token operator">=</span> <span class="token number">0x0000</span>
lcd_gamma_en        <span class="token operator">=</span> <span class="token number">0</span>
lcd_bright_curve_en <span class="token operator">=</span> <span class="token number">0</span>
lcd_cmap_en         <span class="token operator">=</span> <span class="token number">0</span>

deu_mode            <span class="token operator">=</span> <span class="token number">0</span>
lcdgamma4iep        <span class="token operator">=</span> <span class="token number">22</span>
smart_color         <span class="token operator">=</span> <span class="token number">90</span>

<span class="token punctuation">;</span>reset pin
lcd_gpio_0               <span class="token operator">=</span> port<span class="token operator">:</span>PB03<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
<span class="token punctuation">;</span>CS
lcd_gpio_1               <span class="token operator">=</span> port<span class="token operator">:</span>PA12<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_D3<span class="token operator">-</span>LCD_D7
lcd_gpio_2               <span class="token operator">=</span> port<span class="token operator">:</span>PA01<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_3               <span class="token operator">=</span> port<span class="token operator">:</span>PA02<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_4               <span class="token operator">=</span> port<span class="token operator">:</span>PA03<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_5               <span class="token operator">=</span> port<span class="token operator">:</span>PA04<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_6               <span class="token operator">=</span> port<span class="token operator">:</span>PA05<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_D10<span class="token operator">-</span>LCD_D12
lcd_gpio_7               <span class="token operator">=</span> port<span class="token operator">:</span>PA11<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_8               <span class="token operator">=</span> port<span class="token operator">:</span>PA10<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_9               <span class="token operator">=</span> port<span class="token operator">:</span>PA08<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>WR
lcd_gpio_10              <span class="token operator">=</span> port<span class="token operator">:</span>PA06<span class="token operator">&lt;</span><span class="token number">7</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
<span class="token punctuation">;</span>RD
lcd_gpio_11              <span class="token operator">=</span> port<span class="token operator">:</span>PA07<span class="token operator">&lt;</span><span class="token number">7</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
<span class="token punctuation">;</span>RS
lcd_gpio_12              <span class="token operator">=</span> port<span class="token operator">:</span>PA09<span class="token operator">&lt;</span><span class="token number">7</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_480x480-rgb-86-面板屏" tabindex="-1"><a class="header-anchor" href="#_480x480-rgb-86-面板屏" aria-hidden="true">#</a> 480x480 RGB 86 面板屏</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token punctuation">;</span>Parallel RGB LCD
<span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token punctuation">[</span>lcd0<span class="token punctuation">]</span>
lcd_used            <span class="token operator">=</span> <span class="token number">1</span>

lcd_driver_name     <span class="token operator">=</span> <span class="token string">&quot;p0400060a&quot;</span>
lcd_backlight       <span class="token operator">=</span> <span class="token number">150</span>
lcd_if              <span class="token operator">=</span> <span class="token number">0</span>
lcd_x               <span class="token operator">=</span> <span class="token number">480</span>
lcd_y               <span class="token operator">=</span> <span class="token number">480</span>
lcd_width           <span class="token operator">=</span> <span class="token number">94</span>
lcd_height          <span class="token operator">=</span> <span class="token number">94</span>
lcd_rb_swap         <span class="token operator">=</span> <span class="token number">0</span>
lcd_dclk_freq       <span class="token operator">=</span> <span class="token number">21</span>
lcd_hv_clk_phase    <span class="token operator">=</span> <span class="token number">1</span>
lcd_pwm_used        <span class="token operator">=</span> <span class="token number">1</span>
lcd_pwm_ch          <span class="token operator">=</span> <span class="token number">6</span>
lcd_pwm_freq        <span class="token operator">=</span> <span class="token number">5000</span>
lcd_pwm_pol         <span class="token operator">=</span> <span class="token number">1</span>
lcd_hbp             <span class="token operator">=</span> <span class="token number">80</span>
lcd_ht              <span class="token operator">=</span> <span class="token number">648</span>
lcd_hspw            <span class="token operator">=</span> <span class="token number">8</span>
lcd_vbp             <span class="token operator">=</span> <span class="token number">10</span>
lcd_vt              <span class="token operator">=</span> <span class="token number">522</span>
lcd_vspw            <span class="token operator">=</span> <span class="token number">2</span>
lcd_lvds_if         <span class="token operator">=</span> <span class="token number">0</span>
lcd_lvds_colordepth <span class="token operator">=</span> <span class="token number">1</span>
lcd_lvds_mode       <span class="token operator">=</span> <span class="token number">0</span>
lcd_frm             <span class="token operator">=</span> <span class="token number">1</span>
lcd_io_phase        <span class="token operator">=</span> <span class="token number">0x0000</span>
lcd_gamma_en        <span class="token operator">=</span> <span class="token number">0</span>
lcd_bright_curve_en <span class="token operator">=</span> <span class="token number">0</span>
lcd_cmap_en         <span class="token operator">=</span> <span class="token number">0</span>

deu_mode            <span class="token operator">=</span> <span class="token number">0</span>
lcdgamma4iep        <span class="token operator">=</span> <span class="token number">22</span>
smart_color         <span class="token operator">=</span> <span class="token number">90</span>

<span class="token punctuation">;</span>reset
lcd_gpio_0               <span class="token operator">=</span> port<span class="token operator">:</span>PB01<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span>
<span class="token punctuation">;</span>cs
lcd_gpio_1               <span class="token operator">=</span> port<span class="token operator">:</span>PA27<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
<span class="token punctuation">;</span>sdi
lcd_gpio_2               <span class="token operator">=</span> port<span class="token operator">:</span>PA28<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
<span class="token punctuation">;</span>scl
lcd_gpio_3               <span class="token operator">=</span> port<span class="token operator">:</span>PB00<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>


<span class="token punctuation">;</span>LCD_D2<span class="token operator">-</span>LCD_D7
lcd_gpio_4               <span class="token operator">=</span> port<span class="token operator">:</span>PA00<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_5               <span class="token operator">=</span> port<span class="token operator">:</span>PA01<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_6               <span class="token operator">=</span> port<span class="token operator">:</span>PA02<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_7               <span class="token operator">=</span> port<span class="token operator">:</span>PA03<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_8               <span class="token operator">=</span> port<span class="token operator">:</span>PA04<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_9               <span class="token operator">=</span> port<span class="token operator">:</span>PA05<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_D10<span class="token operator">-</span>LCD_D15
lcd_gpio_10              <span class="token operator">=</span> port<span class="token operator">:</span>PA11<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_11              <span class="token operator">=</span> port<span class="token operator">:</span>PA10<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_12              <span class="token operator">=</span> port<span class="token operator">:</span>PA08<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_13              <span class="token operator">=</span> port<span class="token operator">:</span>PA07<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_14              <span class="token operator">=</span> port<span class="token operator">:</span>PA06<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_15              <span class="token operator">=</span> port<span class="token operator">:</span>PA09<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_D18<span class="token operator">-</span>LCD_D23
lcd_gpio_16              <span class="token operator">=</span> port<span class="token operator">:</span>PA12<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_17              <span class="token operator">=</span> port<span class="token operator">:</span>PA13<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_18              <span class="token operator">=</span> port<span class="token operator">:</span>PA14<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_19              <span class="token operator">=</span> port<span class="token operator">:</span>PA15<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_20              <span class="token operator">=</span> port<span class="token operator">:</span>PB03<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_21              <span class="token operator">=</span> port<span class="token operator">:</span>PB02<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_VSYNC<span class="token punctuation">,</span> LCD_HSYNC<span class="token punctuation">,</span> LCD_DCLK<span class="token punctuation">,</span> LCD_DE
lcd_gpio_22              <span class="token operator">=</span> port<span class="token operator">:</span>PA18<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_23              <span class="token operator">=</span> port<span class="token operator">:</span>PA19<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_24              <span class="token operator">=</span> port<span class="token operator">:</span>PA20<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_25              <span class="token operator">=</span> port<span class="token operator">:</span>PA21<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_320x320-i8080-86-面板屏" tabindex="-1"><a class="header-anchor" href="#_320x320-i8080-86-面板屏" aria-hidden="true">#</a> 320x320 i8080 86 面板屏</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token punctuation">[</span>lcd0<span class="token punctuation">]</span>
lcd_used            <span class="token operator">=</span> <span class="token number">1</span>

lcd_driver_name     <span class="token operator">=</span> <span class="token string">&quot;d392t9390v0_cpu&quot;</span>
lcd_backlight       <span class="token operator">=</span> <span class="token number">200</span>
lcd_if              <span class="token operator">=</span> <span class="token number">1</span>
lcd_x               <span class="token operator">=</span> <span class="token number">320</span>
lcd_y               <span class="token operator">=</span> <span class="token number">320</span>
lcd_width           <span class="token operator">=</span> <span class="token number">78</span>
lcd_height          <span class="token operator">=</span> <span class="token number">78</span>
lcd_rb_swap         <span class="token operator">=</span> <span class="token number">1</span>

lcd_pwm_used        <span class="token operator">=</span> <span class="token number">1</span>
lcd_pwm_ch          <span class="token operator">=</span> <span class="token number">7</span>
lcd_pwm_freq        <span class="token operator">=</span> <span class="token number">50000</span>
lcd_pwm_pol         <span class="token operator">=</span> <span class="token number">1</span>

lcd_cpu_mode        <span class="token operator">=</span> <span class="token number">0</span>
lcd_cpu_te          <span class="token operator">=</span> <span class="token number">0</span>
lcd_cpu_if          <span class="token operator">=</span> <span class="token number">12</span>

lcd_dclk_freq       <span class="token operator">=</span> <span class="token number">32</span>
lcd_hbp             <span class="token operator">=</span> <span class="token number">75</span>
lcd_ht              <span class="token operator">=</span> <span class="token number">1060</span>
lcd_hspw            <span class="token operator">=</span> <span class="token number">40</span>
lcd_vbp             <span class="token operator">=</span> <span class="token number">6</span>
lcd_vt              <span class="token operator">=</span> <span class="token number">490</span>
lcd_vspw            <span class="token operator">=</span> <span class="token number">2</span>

lcd_lvds_if         <span class="token operator">=</span> <span class="token number">0</span>
lcd_lvds_colordepth <span class="token operator">=</span> <span class="token number">1</span>
lcd_lvds_mode       <span class="token operator">=</span> <span class="token number">0</span>

lcd_frm             <span class="token operator">=</span> <span class="token number">0</span>
lcd_io_phase        <span class="token operator">=</span> <span class="token number">0x0000</span>
lcd_gamma_en        <span class="token operator">=</span> <span class="token number">0</span>
lcd_bright_curve_en <span class="token operator">=</span> <span class="token number">0</span>
lcd_cmap_en         <span class="token operator">=</span> <span class="token number">0</span>

deu_mode            <span class="token operator">=</span> <span class="token number">0</span>
lcdgamma4iep        <span class="token operator">=</span> <span class="token number">22</span>
smart_color         <span class="token operator">=</span> <span class="token number">90</span>

<span class="token punctuation">;</span>reset pin
lcd_gpio_0               <span class="token operator">=</span> port<span class="token operator">:</span>PA12<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_D3<span class="token operator">-</span>LCD_D7
lcd_gpio_2               <span class="token operator">=</span> port<span class="token operator">:</span>PA01<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_3               <span class="token operator">=</span> port<span class="token operator">:</span>PA02<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_4               <span class="token operator">=</span> port<span class="token operator">:</span>PA03<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_5               <span class="token operator">=</span> port<span class="token operator">:</span>PA04<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_6               <span class="token operator">=</span> port<span class="token operator">:</span>PA05<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_D10<span class="token operator">-</span>LCD_D12
lcd_gpio_7               <span class="token operator">=</span> port<span class="token operator">:</span>PA11<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_8               <span class="token operator">=</span> port<span class="token operator">:</span>PA10<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_9               <span class="token operator">=</span> port<span class="token operator">:</span>PA08<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>WR
lcd_gpio_10              <span class="token operator">=</span> port<span class="token operator">:</span>PA06<span class="token operator">&lt;</span><span class="token number">7</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
<span class="token punctuation">;</span>RD
lcd_gpio_11              <span class="token operator">=</span> port<span class="token operator">:</span>PA07<span class="token operator">&lt;</span><span class="token number">7</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
<span class="token punctuation">;</span>RS
lcd_gpio_12              <span class="token operator">=</span> port<span class="token operator">:</span>PA09<span class="token operator">&lt;</span><span class="token number">7</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_800x480-标准-40pin-rgb屏" tabindex="-1"><a class="header-anchor" href="#_800x480-标准-40pin-rgb屏" aria-hidden="true">#</a> 800x480 标准 40Pin RGB屏</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token punctuation">[</span>lcd0<span class="token punctuation">]</span>
lcd_used            <span class="token operator">=</span> <span class="token number">1</span>

lcd_driver_name     <span class="token operator">=</span> <span class="token string">&quot;default_lcd&quot;</span>
lcd_backlight       <span class="token operator">=</span> <span class="token number">150</span>
lcd_if              <span class="token operator">=</span> <span class="token number">0</span>
lcd_x               <span class="token operator">=</span> <span class="token number">800</span>
lcd_y               <span class="token operator">=</span> <span class="token number">480</span>
lcd_width           <span class="token operator">=</span> <span class="token number">150</span>
lcd_height          <span class="token operator">=</span> <span class="token number">94</span>
lcd_rb_swap         <span class="token operator">=</span> <span class="token number">0</span>
lcd_dclk_freq       <span class="token operator">=</span> <span class="token number">33</span>
lcd_pwm_used        <span class="token operator">=</span> <span class="token number">1</span>
lcd_pwm_ch          <span class="token operator">=</span> <span class="token number">6</span>
lcd_pwm_freq        <span class="token operator">=</span> <span class="token number">5000</span>
lcd_pwm_pol         <span class="token operator">=</span> <span class="token number">1</span>
lcd_hbp             <span class="token operator">=</span> <span class="token number">46</span>
lcd_ht              <span class="token operator">=</span> <span class="token number">1055</span>
lcd_hspw            <span class="token operator">=</span> <span class="token number">0</span>
lcd_vbp             <span class="token operator">=</span> <span class="token number">23</span>
lcd_vt              <span class="token operator">=</span> <span class="token number">525</span>
lcd_vspw            <span class="token operator">=</span> <span class="token number">0</span>
lcd_lvds_if         <span class="token operator">=</span> <span class="token number">0</span>
lcd_lvds_colordepth <span class="token operator">=</span> <span class="token number">1</span>
lcd_lvds_mode       <span class="token operator">=</span> <span class="token number">0</span>
lcd_frm             <span class="token operator">=</span> <span class="token number">0</span>
lcd_io_phase        <span class="token operator">=</span> <span class="token number">0x0000</span>
lcd_gamma_en        <span class="token operator">=</span> <span class="token number">0</span>
lcd_bright_curve_en <span class="token operator">=</span> <span class="token number">0</span>
lcd_cmap_en         <span class="token operator">=</span> <span class="token number">0</span>

deu_mode            <span class="token operator">=</span> <span class="token number">0</span>
lcdgamma4iep        <span class="token operator">=</span> <span class="token number">22</span>
smart_color         <span class="token operator">=</span> <span class="token number">90</span>

<span class="token punctuation">;</span>LCD_D2<span class="token operator">-</span>LCD_D7
lcd_gpio_0               <span class="token operator">=</span> port<span class="token operator">:</span>PA00<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_1               <span class="token operator">=</span> port<span class="token operator">:</span>PA01<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_2               <span class="token operator">=</span> port<span class="token operator">:</span>PA02<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_3               <span class="token operator">=</span> port<span class="token operator">:</span>PA03<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_4               <span class="token operator">=</span> port<span class="token operator">:</span>PA04<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_5               <span class="token operator">=</span> port<span class="token operator">:</span>PA05<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_D10<span class="token operator">-</span>LCD_D15
lcd_gpio_6               <span class="token operator">=</span> port<span class="token operator">:</span>PA11<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_7               <span class="token operator">=</span> port<span class="token operator">:</span>PA10<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_8               <span class="token operator">=</span> port<span class="token operator">:</span>PA08<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_9               <span class="token operator">=</span> port<span class="token operator">:</span>PA07<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_10              <span class="token operator">=</span> port<span class="token operator">:</span>PA06<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_11              <span class="token operator">=</span> port<span class="token operator">:</span>PA09<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_D18<span class="token operator">-</span>LCD_D23
lcd_gpio_12              <span class="token operator">=</span> port<span class="token operator">:</span>PA12<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_13              <span class="token operator">=</span> port<span class="token operator">:</span>PA13<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_14              <span class="token operator">=</span> port<span class="token operator">:</span>PA14<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_15              <span class="token operator">=</span> port<span class="token operator">:</span>PA15<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_16              <span class="token operator">=</span> port<span class="token operator">:</span>PB03<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_17              <span class="token operator">=</span> port<span class="token operator">:</span>PB02<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>

<span class="token punctuation">;</span>LCD_VSYNC<span class="token punctuation">,</span> LCD_HSYNC<span class="token punctuation">,</span> LCD_DCLK<span class="token punctuation">,</span> LCD_DE
lcd_gpio_18              <span class="token operator">=</span> port<span class="token operator">:</span>PA18<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_19              <span class="token operator">=</span> port<span class="token operator">:</span>PA19<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_20              <span class="token operator">=</span> port<span class="token operator">:</span>PA20<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
lcd_gpio_21              <span class="token operator">=</span> port<span class="token operator">:</span>PA21<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,402),o=[t];function l(c,r){return n(),a("div",null,o)}const d=s(p,[["render",l],["__file","chapter4.html.vue"]]);export{d as default};
