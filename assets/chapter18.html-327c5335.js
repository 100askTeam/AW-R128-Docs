import{_ as n,o as s,c as a,e as p}from"./app-e85d5a28.js";const t={},e=p(`<h1 id="dbi驱动st7789v1-3寸lcd" tabindex="-1"><a class="header-anchor" href="#dbi驱动st7789v1-3寸lcd" aria-hidden="true">#</a> DBI驱动ST7789V1.3寸LCD</h1><p>之前介绍了 R128 平台使用 SPI 驱动显示屏 ST7789V1.3寸 LCD，接下来介绍的是使用 DBI 接口驱动。</p><p>R128 平台提供了 SPI DBI 的 SPI TFT 接口，具有如下特点：</p><ul><li>Supports DBI Type C 3 Line/4 Line Interface Mode</li><li>Supports 2 Data Lane Interface Mode</li><li>Supports data source from CPU or DMA</li><li>Supports RGB111/444/565/666/888 video format</li><li>Maximum resolution of RGB666 240 x 320@30Hz with single data lane</li><li>Maximum resolution of RGB888 240 x 320@60Hz or 320 x 480@30Hz with dual data lane</li><li>Supports tearing effect</li><li>Supports software flexible control video frame rate</li></ul><p>同时，提供了 SPILCD 驱动框架以供 SPI 屏幕使用。</p><p>此次适配的SPI屏为 <code>ZJY130S0800TG01</code>，使用的是 DBI 进行驱动。</p><p>DBI接口的全称是 <code>Display Bus Serial Interface</code> ，在显示屏数据手册中，一般会说这是SPI接口，所以有人会误认为SPI屏可以使用 <code>normal spi</code> 去直接驱动。</p><p>SPI 接口就是俗称的4线模式，这是因为发送数据时需要额外借助<code>DC</code>线来区分命令和数据，与<code>sclk</code>，<code>cs</code>和<code>sda</code>共四线。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image1.png" alt=""></p><p>DBI 分为多种接口，包括</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0：L3I1
1：L3I2
2：L4I1
3：L4I2
4：D2LI
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>L3I1</code>和<code>L3I2</code>是三线模式（不需要<code>DC</code>脚），区别是读时序，也就是是否需要额外脚来读寄存器。读写时序图如下：</p><ul><li>L3I1写时序</li></ul><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image2.png" alt=""></p><ul><li>L3I1读时序</li></ul><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image3.png" alt=""></p><p><code>L4I1</code>和<code>L4I2</code>是四线模式，与spi接口协议一样，区别是DC脚的控制是否自动化控制，另外I2和I1的区别是读时序，也就是否需要额外脚来读取寄存器。 - L4I写时序</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image4.png" alt=""></p><ul><li>L4I读时序</li></ul><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image5.png" alt=""></p><p><code>D2LI</code>是两data lane模式。发送命令部分时序与读时序与<code>L3I1</code>一致，下图是发送数据时的时序，不同像素格式时钟周期数量不一样。 - D2LI写时序<img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image6.png" alt=""></p><p>可以知道，在3线模式时，发送命令前有1位A0用于指示当前发送的是数据，还是命令。而命令后面接着的数据就没有这个A0位了，代表 SPI 需要在 9 位和 8 位之间来回切换，而在读数据时，更是需要延时 <code>dummy clock</code> 才能读数据，<code>normal spi</code> 都很难，甚至无法实现。所以 <code>normal spi</code> 只能模拟 4 线的 DBI 的写操作。读操作只能通过模拟IO来实现。</p><p>对于R128这类支持 DBI 接口的CPU，可以选择不去了解 SPI。直接选用 DBI 来驱动屏幕。由于不需要模拟延时和切换数据，屏幕驱动效率将有明显提升。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image7.png" alt=""></p><p>引脚配置如下：</p><table><thead><tr><th>R128 Devkit</th><th>TFT 模块</th></tr></thead><tbody><tr><td>PA12</td><td>CS</td></tr><tr><td>PA13</td><td>SCL</td></tr><tr><td>PA18</td><td>SDA</td></tr><tr><td>PA9</td><td>BLK</td></tr><tr><td>PA20</td><td>RES</td></tr><tr><td>PA19</td><td>DC</td></tr><tr><td>3V3</td><td>VCC</td></tr><tr><td>GND</td><td>GND</td></tr></tbody></table><h2 id="载入方案" tabindex="-1"><a class="header-anchor" href="#载入方案" aria-hidden="true">#</a> 载入方案</h2><p>我们使用的开发板是 R128-Devkit，需要开发 C906 核心的应用程序，所以载入方案选择 <code>r128s2_module_c906</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">source</span> envsetup.sh 
$ lunch_rtos <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image8.png" alt=""></p><h2 id="设置-dbi-驱动" tabindex="-1"><a class="header-anchor" href="#设置-dbi-驱动" aria-hidden="true">#</a> 设置 DBI 驱动</h2><p>屏幕使用的是SPI驱动，所以需要勾选SPI驱动，运行 <code>mrtos_menuconfig</code> 进入配置页面。前往下列地址找到 <code>SPI Devices</code></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>Drivers Options  <span class="token operator">--</span><span class="token operator">-&gt;</span>
    soc related device drivers  <span class="token operator">--</span><span class="token operator">-&gt;</span>
        DBI Devices <span class="token operator">--</span><span class="token operator">-&gt;</span>
        <span class="token operator">-</span><span class="token operator">*</span><span class="token operator">-</span> enable dbi driver
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image9.png" alt=""></p><h3 id="配置-spi-引脚" tabindex="-1"><a class="header-anchor" href="#配置-spi-引脚" aria-hidden="true">#</a> 配置 SPI 引脚</h3><p>DBI同样使用 SPI 控制器，所以需要配置SPI的相关配置。打开你喜欢的编辑器，修改文件：<code>board/r128s2/module/configs/sys_config.fex</code>，在这里我们不需要用到SPI WP引脚，注释掉即可。SPI HOLD 需要作为 DC 脚接入LCD模块。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>;----------------------------------------------------------------------------------
;SPI controller configuration
;----------------------------------------------------------------------------------
;Please config spi in dts
[spi1]
spi1_used       = 1
spi1_cs_number  = 1
spi1_cs_bitmap  = 1
spi1_cs0        = port:PA12&lt;6&gt;&lt;0&gt;&lt;3&gt;&lt;default&gt;
spi1_sclk       = port:PA13&lt;6&gt;&lt;0&gt;&lt;3&gt;&lt;default&gt;
spi1_mosi       = port:PA18&lt;6&gt;&lt;0&gt;&lt;3&gt;&lt;default&gt;
spi1_miso       = port:PA21&lt;6&gt;&lt;0&gt;&lt;3&gt;&lt;default&gt;
spi1_hold       = port:PA19&lt;6&gt;&lt;0&gt;&lt;2&gt;&lt;default&gt;
;spi1_wp         = port:PA20&lt;6&gt;&lt;0&gt;&lt;2&gt;&lt;default&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image10.png" alt=""></p><h2 id="设置-pwm-驱动" tabindex="-1"><a class="header-anchor" href="#设置-pwm-驱动" aria-hidden="true">#</a> 设置 PWM 驱动</h2><p>屏幕背光使用的是PWM驱动，所以需要勾选PWM驱动，运行 <code>mrtos_menuconfig</code> 进入配置页面。前往下列地址找到 <code>PWM Devices</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Drivers Options  ---&gt;
    soc related device drivers  ---&gt;
        PWM Devices ---&gt;
        -*- enable pwm driver
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image11.png" alt=""></p><h3 id="配置-pwm-引脚" tabindex="-1"><a class="header-anchor" href="#配置-pwm-引脚" aria-hidden="true">#</a> 配置 PWM 引脚</h3><p>打开你喜欢的编辑器，修改文件：<code>board/r128s2/module/configs/sys_config.fex</code>，增加 PWM1 节点</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[pwm1]
pwm_used        = 1
pwm_positive    = port:PA9&lt;4&gt;&lt;0&gt;&lt;3&gt;&lt;default&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image12.png" alt=""></p><h2 id="设置-spi-lcd-驱动" tabindex="-1"><a class="header-anchor" href="#设置-spi-lcd-驱动" aria-hidden="true">#</a> 设置 SPI LCD 驱动</h2><p>SPI LCD 由专门的驱动管理。运行 <code>mrtos_menuconfig</code> 进入配置页面。前往下列地址找到 <code>SPILCD Devices</code> ，注意同时勾选 <code>spilcd hal APIs test</code> 方便测试使用。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Drivers Options  ---&gt;
    soc related device drivers  ---&gt;
        [*] DISP Driver Support(spi_lcd)
        [*]   spilcd hal APIs test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image13.png" alt=""></p><h2 id="编写-spi-lcd-显示屏驱动" tabindex="-1"><a class="header-anchor" href="#编写-spi-lcd-显示屏驱动" aria-hidden="true">#</a> 编写 SPI LCD 显示屏驱动</h2><h3 id="获取屏幕初始化序列" tabindex="-1"><a class="header-anchor" href="#获取屏幕初始化序列" aria-hidden="true">#</a> 获取屏幕初始化序列</h3><p>首先询问屏厂提供驱动源码</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image14.png" alt=""></p><p>找到 LCD 的初始化序列代码</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image15.png" alt=""></p><p>找到屏幕初始化的源码</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image16.png" alt=""></p><p>整理后的初始化代码如下：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0x11</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Sleep out </span>
<span class="token function">delay_ms</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// Delay 120ms </span>
<span class="token comment">//************* Start Initial Sequence **********// </span>
<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0x36</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0x3A</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x05</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xB2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x1F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x1F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xB7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x35</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xBB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 2b</span>

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xC0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x2C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xC2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x01</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xC3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x01</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xC4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// VDV, 0x20:0v</span>

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xC6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 0x13:60Hz   </span>

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xD0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0xA4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0xA1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xD6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0xA1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// sleep in后，gate输出为GND</span>

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xE0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0xF0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x04</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x07</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x04</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x04</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x04</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x36</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x29</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xE1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0xF0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x02</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x04</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x05</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x05</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x3B</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x38</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x27</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x31</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0xE4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x1D</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 使用240根gate  (N+1)*8</span>
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 设定gate起点位置</span>
<span class="token function">LCD_WR_DATA8</span><span class="token punctuation">(</span><span class="token number">0x00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 当gate没有用完时，bit4(TMG)设为0</span>

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0x21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     

<span class="token function">LCD_WR_REG</span><span class="token punctuation">(</span><span class="token number">0x29</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="用现成驱动改写-spi-lcd-驱动" tabindex="-1"><a class="header-anchor" href="#用现成驱动改写-spi-lcd-驱动" aria-hidden="true">#</a> 用现成驱动改写 SPI LCD 驱动</h3><p>选择一个现成的 SPI LCD 改写即可，这里选择 <code>nv3029s.c</code> 驱动来修改</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image17.png" alt=""></p><p>复制这两个驱动，重命名为 <code>st7789v.c</code></p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image18.png" alt=""></p><p>先编辑 <code>st7789v.h</code> 将 <code>nv3029s</code> 改成 <code>st7789v</code></p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image19.png" alt=""></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">_ST7789V_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_ST7789V_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;panels.h&quot;</span></span>

<span class="token keyword">struct</span> <span class="token class-name">__lcd_panel</span> st7789v_panel<span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/*End of file*/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编辑 <code>st7789v.c</code> 将 <code>nv3029s</code> 改成 <code>st7789v</code></p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image20.png" alt=""></p><h3 id="编写初始化序列" tabindex="-1"><a class="header-anchor" href="#编写初始化序列" aria-hidden="true">#</a> 编写初始化序列</h3><p>先删除 <code>static void LCD_panel_init(unsigned int sel)</code> 中的初始化函数。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image21.png" alt=""></p><p>然后将屏厂提供的初始化序列复制进来</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image22.png" alt=""></p><p>然后按照 <code>spi_lcd</code> 框架的接口改写驱动接口，具体接口如下</p><table><thead><tr><th>屏厂函数</th><th>SPILCD框架接口</th></tr></thead><tbody><tr><td><code>LCD_WR_REG</code></td><td><code>sunxi_lcd_cmd_write</code></td></tr><tr><td><code>LCD_WR_DATA8</code></td><td><code>sunxi_lcd_para_write</code></td></tr><tr><td><code>delay_ms</code></td><td><code>sunxi_lcd_delay_ms</code></td></tr></tbody></table><p>可以直接进行替换</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image23.png" alt=""></p><p>完成后如下</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image24.png" alt=""></p><p>然后对照屏厂提供的驱动修改 <code>address</code> 函数</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image25.png" alt=""></p><p>做如下修改</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> sel<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* Set row address */</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token punctuation">(</span>y <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> y <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token punctuation">(</span>height <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> height <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* Set coloum address */</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> x <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token punctuation">(</span>width <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> width <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x2c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成驱动如下</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;st7789v.h&quot;</span></span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_power_on</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_power_off</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_bl_open</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_bl_close</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_panel_init</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_panel_exit</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">RESET</span><span class="token expression"><span class="token punctuation">(</span>s<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token function">sunxi_lcd_gpio_set_value</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">power_en</span><span class="token expression"><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token function">sunxi_lcd_gpio_set_value</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span></span></span>

<span class="token keyword">static</span> <span class="token keyword">struct</span> <span class="token class-name">disp_panel_para</span> info<span class="token punctuation">[</span>LCD_FB_MAX<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> sel<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* Set row address */</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token punctuation">(</span>y <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> y <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token punctuation">(</span>height <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> height <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* Set coloum address */</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> x <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token punctuation">(</span>width <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> width <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x2c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_panel_init</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">bsp_disp_get_panel_info</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token operator">&amp;</span>info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">lcd_fb_wrn</span><span class="token punctuation">(</span><span class="token string">&quot;get panel info fail!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Sleep out </span>
    <span class="token function">sunxi_lcd_delay_ms</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// Delay 120ms </span>
    <span class="token comment">//************* Start Initial Sequence **********// </span>
    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x3A</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xB7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xBB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 2b</span>

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xC4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// VDV, 0x20:0v</span>

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 0x13:60Hz   </span>

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xD0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xD6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// sleep in后，gate输出为GND</span>

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xE1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x1D</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 使用240根gate  (N+1)*8</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 设定gate起点位置</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 当gate没有用完时，bit4(TMG)设为0</span>

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     

    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_x <span class="token operator">&lt;</span> info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_y<span class="token punctuation">)</span>
        <span class="token function">address</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token function">address</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_panel_exit</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_delay_ms</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_delay_ms</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_pin_cfg</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> s32 <span class="token function">LCD_open_flow</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    lcd_fb_here<span class="token punctuation">;</span>
    <span class="token comment">/* open lcd power, and delay 50ms */</span>
    <span class="token function">LCD_OPEN_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> LCD_power_on<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* open lcd power, than delay 200ms */</span>
    <span class="token function">LCD_OPEN_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> LCD_panel_init<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">LCD_OPEN_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> lcd_fb_black_screen<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* open lcd backlight, and delay 0ms */</span>
    <span class="token function">LCD_OPEN_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> LCD_bl_open<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> s32 <span class="token function">LCD_close_flow</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    lcd_fb_here<span class="token punctuation">;</span>
    <span class="token comment">/* close lcd backlight, and delay 0ms */</span>
    <span class="token function">LCD_CLOSE_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> LCD_bl_close<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* open lcd power, than delay 200ms */</span>
    <span class="token function">LCD_CLOSE_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> LCD_panel_exit<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* close lcd power, and delay 500ms */</span>
    <span class="token function">LCD_CLOSE_FUNC</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> LCD_power_off<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_power_on</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">/* config lcd_power pin to open lcd power0 */</span>
    lcd_fb_here<span class="token punctuation">;</span>
    <span class="token function">power_en</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">sunxi_lcd_power_enable</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">sunxi_lcd_pin_cfg</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">RESET</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_delay_ms</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">RESET</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_delay_ms</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">RESET</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_power_off</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    lcd_fb_here<span class="token punctuation">;</span>
    <span class="token comment">/* config lcd_power pin to close lcd power0 */</span>
    <span class="token function">sunxi_lcd_power_disable</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">power_en</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_bl_open</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">sunxi_lcd_pwm_enable</span><span class="token punctuation">(</span>sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* config lcd_bl_en pin to open lcd backlight */</span>
    <span class="token function">sunxi_lcd_backlight_enable</span><span class="token punctuation">(</span>sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    lcd_fb_here<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_bl_close</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">/* config lcd_bl_en pin to close lcd backlight */</span>
    <span class="token function">sunxi_lcd_backlight_disable</span><span class="token punctuation">(</span>sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sunxi_lcd_pwm_disable</span><span class="token punctuation">(</span>sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    lcd_fb_here<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">/* sel: 0:lcd0; 1:lcd1 */</span>
<span class="token keyword">static</span> s32 <span class="token function">LCD_user_defined_func</span><span class="token punctuation">(</span>u32 sel<span class="token punctuation">,</span> u32 para1<span class="token punctuation">,</span> u32 para2<span class="token punctuation">,</span> u32 para3<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    lcd_fb_here<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">lcd_set_var</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> sel<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">fb_info</span> <span class="token operator">*</span>p_info<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">lcd_set_addr_win</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> sel<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">address</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">lcd_blank</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> sel<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> en<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">struct</span> <span class="token class-name">__lcd_panel</span> st7789v_panel <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">/* panel driver name, must mach the name of lcd_drv_name in sys_config.fex
       */</span>
    <span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;st7789v&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>func <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span>cfg_open_flow <span class="token operator">=</span> LCD_open_flow<span class="token punctuation">,</span>
        <span class="token punctuation">.</span>cfg_close_flow <span class="token operator">=</span> LCD_close_flow<span class="token punctuation">,</span>
        <span class="token punctuation">.</span>lcd_user_defined_func <span class="token operator">=</span> LCD_user_defined_func<span class="token punctuation">,</span>
        <span class="token punctuation">.</span>blank <span class="token operator">=</span> lcd_blank<span class="token punctuation">,</span>
        <span class="token punctuation">.</span>set_var <span class="token operator">=</span> lcd_set_var<span class="token punctuation">,</span>
        <span class="token punctuation">.</span>set_addr_win <span class="token operator">=</span> lcd_set_addr_win<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="对接驱动框架" tabindex="-1"><a class="header-anchor" href="#对接驱动框架" aria-hidden="true">#</a> 对接驱动框架</h3><p>完成了屏幕驱动的编写，接下来需要对接到 SPILCD 驱动框架。首先编辑 <code>Kconfig</code></p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image26.png" alt=""></p><p>增加 <code>st7789v</code> 的配置</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image27.png" alt=""></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>config LCD_SUPPORT_ST7789V
    bool &quot;LCD support st7789v panel&quot;
    default n
    ---help---
        If you want to support st7789v panel for display driver, select it.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后编辑 <code>panels.c</code> 在 <code>panel_array</code> 里增加 <code>st7789</code> 驱动的引用</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image28.png" alt=""></p><p>如下图</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image29.png" alt=""></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">CONFIG_LCD_SUPPORT_ST7789V</span></span>
    <span class="token operator">&amp;</span>st7789v_panel<span class="token punctuation">,</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后编辑 <code>panels.h</code> 同样增加引用</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image30.png" alt=""></p><p>如下图</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image31.png" alt=""></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">CONFIG_LCD_SUPPORT_ST7789V</span></span>
<span class="token keyword">extern</span> <span class="token keyword">struct</span> <span class="token class-name">__lcd_panel</span> st7789v_panel<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后编辑外层的 <code>Makefile</code> 增加编译选项</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image32.png" alt=""></p><p>如下所示</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image33.png" alt=""></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>obj<span class="token operator">-</span>$<span class="token punctuation">{</span>CONFIG_LCD_SUPPORT_ST7789V<span class="token punctuation">}</span> <span class="token operator">+=</span> panels<span class="token operator">/</span>st7789v<span class="token punctuation">.</span>o
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选择-st7789v-驱动" tabindex="-1"><a class="header-anchor" href="#选择-st7789v-驱动" aria-hidden="true">#</a> 选择 ST7789V 驱动</h3><p>在 SPILCD 驱动选择界面可以看到 <code>LCD_FB panels select</code> 选择 SPI 屏幕的驱动</p><p>进入 <code>LCD_FB panels select</code> 选项</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image34.png" alt=""></p><p>选择并勾选 <code>[*] LCD support st7789v panel</code></p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image35.png" alt=""></p><h3 id="配置-spi-lcd-引脚" tabindex="-1"><a class="header-anchor" href="#配置-spi-lcd-引脚" aria-hidden="true">#</a> 配置 SPI LCD 引脚</h3><p>这里是重点部分：打开你喜欢的编辑器，修改文件：<code>board/r128s2/module/configs/sys_config.fex</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[lcd_fb0]
lcd_used            = 1   
lcd_model_name      = &quot;spilcd&quot;   
lcd_driver_name     = &quot;st7789v&quot; 
; 屏幕规格配置
lcd_x               = 240
lcd_y               = 240  
lcd_width           = 48
lcd_height          = 48
; SPI 速率
lcd_data_speed      = 50
; PWM 背光配置项
lcd_pwm_used        = 1
lcd_pwm_ch          = 1
lcd_pwm_freq        = 5000 
lcd_pwm_pol         = 0 
lcd_backlight       = 100
; 配置 lcd_if = 1 为 DBI 模式，双缓冲
lcd_if              = 1
fb_buffer_num       = 2
; 配置屏幕传输数据的像素格式，这里是 LCDFB_FORMAT_RGB_565
lcd_pixel_fmt       = 10
; 配置 DBI 接口像素格式，这里是 RGB565
lcd_dbi_fmt         = 2
; 配置 DBI 时钟的行为模式，这里是自动停止模式。有数据就有时钟，没发数据就没有时钟
lcd_dbi_clk_mode    = 0
; 屏幕没有 TE 脚，配置 TE 为 0
lcd_dbi_te          = 0
; 配置屏幕 DBI 格式 L4I1
lcd_dbi_if          = 2
; 输入图像数据 RGB 顺序识别设置，这里配置是 RGB 格式
lcd_rgb_order       = 0
; 设置屏的刷新率，单位Hz。当lcd_dbi_te使能时，这个值设置无效。
lcd_fps             = 60
; 使用 SPI1 作为通讯接口
lcd_spi_bus_num     = 1
lcd_frm             = 2
lcd_gamma_en        = 1

lcd_power_num       = 0
lcd_gpio_regu_num   = 0
lcd_bl_percent_num  = 0

;RESET Pin
lcd_gpio_0          = port:PA20&lt;1&gt;&lt;0&gt;&lt;2&gt;&lt;0&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编译打包" tabindex="-1"><a class="header-anchor" href="#编译打包" aria-hidden="true">#</a> 编译打包</h2><p>运行命令 <code>mp</code> 编译打包，可以看到编译了 <code>st7789v.o</code></p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image36.png" alt=""></p><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><p>烧录启动之后，屏幕背光启动，但是屏幕全黑。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image37.png" alt="">输入<code>test_spilcd</code>,屏幕显示蓝色。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image38.png" alt=""></p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image39.png" alt=""></p><p>输入 <code>lv_examples 1</code> 可以显示 <code>lvgl</code> 界面</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image40.png" alt=""></p><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h2><h3 id="lvgl-颜色异常" tabindex="-1"><a class="header-anchor" href="#lvgl-颜色异常" aria-hidden="true">#</a> LVGL 颜色异常</h3><p>这是由于 LVGL 配置的 <code>LV_COLOR_DEPTH</code> 为 32，但是 SPI 屏配置为16位。请修改 <code>lv_conf.h</code>，也请注意 <code>LV_COLOR_16_SWAP</code> 仅有 SPI 需要设置为 1，在使用 DBI 驱动的时候不需要配置为 1。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image41.png" alt=""></p><h3 id="出现部分花屏" tabindex="-1"><a class="header-anchor" href="#出现部分花屏" aria-hidden="true">#</a> 出现部分花屏</h3><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image42.png" alt=""></p><ul><li>检查 <code>address</code> 函数是否正确</li><li>检查 <code>sys_config.fex</code> 屏幕配置分辨率是否正确</li></ul><h3 id="spi-lcd-颜色相关问题" tabindex="-1"><a class="header-anchor" href="#spi-lcd-颜色相关问题" aria-hidden="true">#</a> SPI LCD 颜色相关问题</h3><p>首先，得先确定显示屏使用的是SPI接口，还是DBI接口，不同的接口，输入数据的解析方式是不一样的。</p><p>DBI接口的全称是 <code>Display Bus Serial Interface</code> ，在显示屏数据手册中，一般会说这是SPI接口，所以有人会误认为SPI屏可以使用 <code>normal spi</code> 去直接驱动。</p><p>阅读<code>lcd_dbi_if</code>部分的介绍可以知道，在3线模式时，发送命令前有1位A0用于指示当前发送的是数据，还是命令。而命令后面接着的数据就没有这个A0位了，代表SPI需要在9位和8位之间来回切换，而在读数据时，更是需要延时 <code>dummy clock</code> 才能读数据，<code>normal spi</code> 都很难，甚至无法实现。所以 <code>normal spi</code> 只能模拟4 线的DBI的写操作。</p><p>对于R128这类支持DBI接口的CPU，可以选择不去了解SPI。如果需要用到SPI去驱动显示屏，必须把显示屏设置成小端。</p><h4 id="rgb565和rgb666" tabindex="-1"><a class="header-anchor" href="#rgb565和rgb666" aria-hidden="true">#</a> RGB565和RGB666</h4><p>SPI显示屏一般支持RGB444,RGB565和RGB666，RGB444使用的比较少，所以只讨论RGB565和RGB666.</p><p>RGB565代表一个点的颜色由2字节组成，也就是R（红色）用5位表示，G（绿色）用6位表示，B（蓝色）用5位表示，如下图所示：</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image43.png" alt=""></p><p>RGB666一个点的颜色由3字节组成，每个字节代表一个颜色，其中每个字节的低2位会无视，如下图所示：</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image44.png" alt=""></p><h4 id="spi-接口" tabindex="-1"><a class="header-anchor" href="#spi-接口" aria-hidden="true">#</a> SPI 接口</h4><p>因为SPI接口的通讯效率不高，所以建议使用RGB565的显示，以 <code>jlt35031c</code> 显示屏为例，他的显示驱动芯片是 <code>ST7789v</code>，设置显示格式的方式是往 <code>3a</code> 寄存器写入<code>0x55（RGB565</code>）或者 <code>0x66（RGB666）</code>，在 <code>R128SDK</code> 中，已经把 <code>jlt35031c</code> 的通讯格式写死为 <code>0x55</code>，<code>lcd_pixel_fmt</code>配置选项无效：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sunxi_lcd_cmd_write(sel, 0x3a);
sunxi_lcd_para_write(sel, 0x55);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在例程中，输入的数据是 <code>0xff，0x00，0xff，0x00</code>，对于SPI接口，是按字节发送。实际上，例程只需要每次发送2字节即可，因为前后发送的都是相同的ff 00，所以没有看出问题。</p><p>根据对 <code>565</code> 的数据解析，我们拆分 <code>ff 00</code> 就可以得到红色分量是 <code>0b11111</code>，也就是 <code>31</code>，绿色是<code>0b111000</code>，也就是 <code>56</code>，，蓝色是 <code>0</code>.我们等效转换成 <code>RGB888</code>，有：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>R = 31/31*255 = 255
G = 56/63*255 = 226
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在调色板输入对应颜色，就可以得到黄色</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image45.png" alt=""></p><p>因为 <code>DBI</code> 通讯效率较高，所以可以使用 <code>RGB565</code> 或者 <code>RGB666</code>，使用 <code>DBI</code> 接口，也就是 <code>lcd_if</code> 设置为<code>1</code>时，驱动会根据 <code>lcd_pixel_fmt</code> 配置寄存器，以 <code>SDK</code> 中的 <code>kld2844b.c</code> 为例，这显示屏的显示驱动也是 <code>ST7789</code>，但是不同的屏幕，厂家封装时已经限制了通讯方式，所以即使是能使用 DBI 接口的驱动芯片的屏幕，或许也用不了DBI。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">sunxi_lcd_cmd_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x3A</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* Interface Pixel Format */</span>
<span class="token comment">/* 55----RGB565;66---RGB666 */</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_pixel_fmt <span class="token operator">==</span> LCDFB_FORMAT_RGB_565 <span class="token operator">||</span>
    info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_pixel_fmt <span class="token operator">==</span> LCDFB_FORMAT_BGR_565<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_pixel_fmt <span class="token operator">==</span> LCDFB_FORMAT_RGB_565<span class="token punctuation">)</span>
        rotate <span class="token operator">&amp;=</span> <span class="token number">0xf7</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        rotate <span class="token operator">|=</span> <span class="token number">0x08</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_pixel_fmt <span class="token operator">&lt;</span> LCDFB_FORMAT_RGB_888<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_pixel_fmt <span class="token operator">==</span> LCDFB_FORMAT_BGRA_8888 <span class="token operator">||</span>
        info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_pixel_fmt <span class="token operator">==</span> LCDFB_FORMAT_BGRX_8888 <span class="token operator">||</span>
        info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_pixel_fmt <span class="token operator">==</span> LCDFB_FORMAT_ABGR_8888 <span class="token operator">||</span>
        info<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span>lcd_pixel_fmt <span class="token operator">==</span> LCDFB_FORMAT_XBGR_8888<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        rotate <span class="token operator">|=</span> <span class="token number">0x08</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">sunxi_lcd_para_write</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于 DBI 格式，不再是以字节的形式去解析，而是以字的方式去解析，为了统一，软件已经规定了，<code>RGB565</code> 格式时，字大小是2字节，也就是16位，而 <code>RGB666</code> 格式时，字大小是4字节，也就是32位。</p><p>对于 <code>RGB565</code> 格式，同样是设置为 <code>0xff,0x00</code>。因为屏幕是大端，而芯片存储方式是小端，所以芯片的 DBI 模块，会自动把数据从新排列，也就是实际上 DBI 发送数据时，会先发送<code>0x00</code>，再发送<code>0xff</code>，也就是红色分量为0，绿色分量为 <code>0b000111</code>，也就是7，蓝色分量是 <code>0x11111</code>，也就是31，我们同样转换成RGB888</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>G = 7/63*255 = 28
B= 31/31*255 = 255
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在调色板上输入，可以得到蓝色。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image46.png" alt=""></p><p>如果是 <code>RGB666</code>，虽然占用的是3个字节，但是没有CPU是3字节对齐的，所以需要一次性输入4字节，然后 DBI 硬件模块，会自动舍弃1个字节，软件同意舍弃了最后一个字节。</p><p>依旧以例程为例，例程输入了 <code>0xff，0x00，0xff，0x00</code>，为了方便说明，标准为 <code>0xff(1)，0x00(1)，0xff(2)，0x00(2)</code>，其中 <code>0x00(2)</code>会被舍弃掉，然后发送顺序是<code>0xff(2)，0x00(1)，0xff(1)</code>，也就是 <code>0xff(2)</code> 是红色分量，<code>0xff(1)</code> 是蓝色分量，混合可以得到紫色。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter18/image47.png" alt=""></p>`,163),c=[e];function o(i,l){return s(),a("div",null,c)}const d=n(t,[["render",o],["__file","chapter18.html.vue"]]);export{d as default};
