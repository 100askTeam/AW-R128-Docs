import{_ as n,o as s,c as a,e as p}from"./app-e85d5a28.js";const t={},e=p(`<h1 id="驱动-ws2812-流水灯" tabindex="-1"><a class="header-anchor" href="#驱动-ws2812-流水灯" aria-hidden="true">#</a> 驱动 WS2812 流水灯</h1><table><thead><tr><th style="text-align:left;">本文案例代码</th><th style="text-align:left;">下载地址</th></tr></thead><tbody><tr><td style="text-align:left;">驱动 WS2812 流水灯案例代码</td><td style="text-align:left;">https://www.aw-ol.com/downloads?cat=24</td></tr></tbody></table><p>R128-DevKit 拥有4颗 WS2812 LED，本文将详细叙述如何点亮他们。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image1.png" alt=""></p><h2 id="ledc-模块简介" tabindex="-1"><a class="header-anchor" href="#ledc-模块简介" aria-hidden="true">#</a> LEDC 模块简介</h2><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image2.png" alt=""></p><p>LEDC 硬件方框图如上图所示，CPU 通过 APB 总线操作 LEDC 寄存器来控制 LEDC；当 CPU配置好 LEDC 的相关寄存器之后，通过 CPU 或 DMA 将 R、G、B 数据从 DRAM 搬到 LEDC FIFO 中，启动 LEDC 之后就可以通过 PIN 脚向外部的 LED 发送数据了。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image3.png" alt=""></p><p>LED 典型电路如图所示，其中 DI 表示控制数据输入脚，DO 表示控制数据输出脚。DI 端接收从控制器传过来的数据，每个 LED 内部的数据锁存器会存储 24bit 数据，剩余的数据经过内部整形处理电路整形放大后通过 DO 端口开始转发输出给下一个级联的 LED。因此，每经过一个LED，数据减少 24bit。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image4.png" alt=""></p><p>注意，如果在单次直接设置第 n 个 LED 的亮度和色彩的时候，前面 n-1 个 LED 的亮度数据会在第 n 个 LED 的数据前发送，不过这些数据将会是原来 n-1 个 LED 的亮度数据。</p><p>由于拥有独立的 LEDC 模块，在 R128 平台上驱动 WS2812 类似的 RGB LED 不需要使用 SPI 模拟，也不需要使用 PWM 配置时序。直接使用这个模块即可。</p><h2 id="设置-ledc-驱动" tabindex="-1"><a class="header-anchor" href="#设置-ledc-驱动" aria-hidden="true">#</a> 设置 LEDC 驱动</h2><p>运行 <code>mrtos_menuconfig</code> 进入配置页面。前往下列地址找到 <code>LEDC Devices</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Drivers Options  ---&gt;
    soc related device drivers  ---&gt;
            LEDC devices ---&gt;
                [*] enable ledc driver
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>找到 LEDC Devices</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image5.png" alt=""></p><p>勾选如下选项</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image6.png" alt=""></p><h2 id="配置-ledc-参数" tabindex="-1"><a class="header-anchor" href="#配置-ledc-参数" aria-hidden="true">#</a> 配置 LEDC 参数</h2><p>参考电路图可知，LEDC 模块连接的是 R128 的 <code>PA13</code> 引脚。参考手册可知 MUX 为 7</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image7.png" alt=""></p><p>前往 <code>lichee/rtos/drivers/rtos-hal/hal/source/ledc/platform/ledc_sun20iw2.h</code> 并编辑 LEDC 的引脚和MUX</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LEDC_PIN</span>    <span class="token expression"><span class="token function">GPIOA</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LEDC_PINMUXSEL</span>  <span class="token expression"><span class="token number">7</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image8.png" alt=""></p><p>然后编辑 <code>lichee/rtos/drivers/rtos-hal/hal/source/ledc/hal_ledc.c</code> 配置 WS2812 的时序参数：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">ledc_config</span> ledc_config <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span>led_count <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>reset_ns <span class="token operator">=</span> <span class="token number">84</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>t1h_ns <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>t1l_ns <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>t0h_ns <span class="token operator">=</span> <span class="token number">580</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>t0l_ns <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>wait_time0_ns <span class="token operator">=</span> <span class="token number">84</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>wait_time1_ns <span class="token operator">=</span> <span class="token number">84</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>wait_data_time_ns <span class="token operator">=</span> <span class="token number">600000</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>output_mode <span class="token operator">=</span> <span class="token string">&quot;GRB&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image9.png" alt=""></p><h2 id="编译测试" tabindex="-1"><a class="header-anchor" href="#编译测试" aria-hidden="true">#</a> 编译测试</h2><p>编译后烧录开发板</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image10.png" alt=""></p><p>可以用命令 <code>hal_ledc</code> 来测试</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>hal_ledc &lt;LED号&gt; &lt;R|G|B&gt; &lt;亮度&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="点亮红色-led" tabindex="-1"><a class="header-anchor" href="#点亮红色-led" aria-hidden="true">#</a> 点亮红色 LED</h3><p>运行命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>hal_ledc 1 R 100
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image11.png" alt=""></p><p>即可点亮第一颗 LED</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image12.png" alt=""></p><h3 id="点亮绿色-led" tabindex="-1"><a class="header-anchor" href="#点亮绿色-led" aria-hidden="true">#</a> 点亮绿色 LED</h3><p>运行命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>hal_ledc 2 G 100
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image13.png" alt=""></p><p>第二颗 LED 即可点亮绿色</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image14.png" alt=""></p><h2 id="实现七彩流水灯" tabindex="-1"><a class="header-anchor" href="#实现七彩流水灯" aria-hidden="true">#</a> 实现七彩流水灯</h2><p>前往项目文件夹编辑 <code>main.c</code>，这里我选择在 M33 核心上编写程序，所以选用的是 <code>lichee/rtos/projects/r128s2/module_m33/src/main.c</code> ，如果是编写 C906 核心的程序，请修改 <code>lichee/rtos/projects/r128s2/module_c906/src/main.c</code></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sunxi_hal_ledc.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;hal_cmd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;hal_timer.h&gt;</span></span>

<span class="token comment">// 使用RGB 分量合成颜色值</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">MERAGECOLOR</span><span class="token expression"><span class="token punctuation">(</span>G<span class="token punctuation">,</span> R<span class="token punctuation">,</span> B<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token punctuation">)</span>G <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span><span class="token punctuation">)</span>R <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> B<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PIXEL_NUM</span> <span class="token expression"><span class="token number">4</span></span></span>

<span class="token comment">// 生成颜色</span>
<span class="token class-name">uint32_t</span> <span class="token function">WS281x_Wheel</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> wheelPos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  wheelPos <span class="token operator">=</span> <span class="token number">255</span> <span class="token operator">-</span> wheelPos<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>wheelPos <span class="token operator">&lt;</span> <span class="token number">85</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">MERAGECOLOR</span><span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">-</span> wheelPos <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wheelPos <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>wheelPos <span class="token operator">&lt;</span> <span class="token number">170</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wheelPos <span class="token operator">-=</span> <span class="token number">85</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">MERAGECOLOR</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> wheelPos <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">255</span> <span class="token operator">-</span> wheelPos <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  wheelPos <span class="token operator">-=</span> <span class="token number">170</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">MERAGECOLOR</span><span class="token punctuation">(</span>wheelPos <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">255</span> <span class="token operator">-</span> wheelPos <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 亮度设置</span>
<span class="token class-name">uint32_t</span> <span class="token function">WS281xLSet</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span> rgb<span class="token punctuation">,</span> <span class="token keyword">float</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
    <span class="token keyword">float</span> h<span class="token punctuation">,</span> s<span class="token punctuation">,</span> v<span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> cmax<span class="token punctuation">,</span> cmin<span class="token punctuation">,</span> cdes<span class="token punctuation">;</span>

    r <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>rgb <span class="token operator">&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>rgb <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>rgb<span class="token punctuation">)</span><span class="token punctuation">;</span>

    cmax <span class="token operator">=</span> r <span class="token operator">&gt;</span> g <span class="token operator">?</span> r <span class="token operator">:</span> g<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&gt;</span> cmax<span class="token punctuation">)</span>
        cmax <span class="token operator">=</span> b<span class="token punctuation">;</span>
    cmin <span class="token operator">=</span> r <span class="token operator">&lt;</span> g <span class="token operator">?</span> r <span class="token operator">:</span> g<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&lt;</span> cmin<span class="token punctuation">)</span>
        cmin <span class="token operator">=</span> b<span class="token punctuation">;</span>
    cdes <span class="token operator">=</span> cmax <span class="token operator">-</span> cmin<span class="token punctuation">;</span>

    v <span class="token operator">=</span> cmax <span class="token operator">/</span> <span class="token number">255.0f</span><span class="token punctuation">;</span>
    s <span class="token operator">=</span> cmax <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> cdes <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> cmax<span class="token punctuation">;</span>
    h <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmax <span class="token operator">==</span> r <span class="token operator">&amp;&amp;</span> g <span class="token operator">&gt;=</span> b<span class="token punctuation">)</span>
        h <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>g <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60.0f</span> <span class="token operator">/</span> cdes<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cmax <span class="token operator">==</span> r <span class="token operator">&amp;&amp;</span> g <span class="token operator">&lt;</span> b<span class="token punctuation">)</span>
        h <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>g <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60.0f</span> <span class="token operator">/</span> cdes<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">360</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cmax <span class="token operator">==</span> g<span class="token punctuation">)</span>
        h <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">-</span> r<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60.0f</span> <span class="token operator">/</span> cdes<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">120</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        h <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>r <span class="token operator">-</span> g<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60.0f</span> <span class="token operator">/</span> cdes<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">240</span><span class="token punctuation">;</span>

    v <span class="token operator">*=</span> k<span class="token punctuation">;</span>

    <span class="token keyword">float</span> f<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> t<span class="token punctuation">;</span>
    <span class="token keyword">float</span> rf<span class="token punctuation">,</span> gf<span class="token punctuation">,</span> bf<span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>h <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    f <span class="token operator">=</span> <span class="token punctuation">(</span>h <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">-</span> i<span class="token punctuation">;</span>
    p <span class="token operator">=</span> v <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    q <span class="token operator">=</span> v <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> f <span class="token operator">*</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    t <span class="token operator">=</span> v <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> f<span class="token punctuation">)</span> <span class="token operator">*</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
        rf <span class="token operator">=</span> v<span class="token punctuation">;</span>
        gf <span class="token operator">=</span> t<span class="token punctuation">;</span>
        bf <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
        rf <span class="token operator">=</span> q<span class="token punctuation">;</span>
        gf <span class="token operator">=</span> v<span class="token punctuation">;</span>
        bf <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
        rf <span class="token operator">=</span> p<span class="token punctuation">;</span>
        gf <span class="token operator">=</span> v<span class="token punctuation">;</span>
        bf <span class="token operator">=</span> t<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
        rf <span class="token operator">=</span> p<span class="token punctuation">;</span>
        gf <span class="token operator">=</span> q<span class="token punctuation">;</span>
        bf <span class="token operator">=</span> v<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
        rf <span class="token operator">=</span> t<span class="token punctuation">;</span>
        gf <span class="token operator">=</span> p<span class="token punctuation">;</span>
        bf <span class="token operator">=</span> v<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>
        rf <span class="token operator">=</span> v<span class="token punctuation">;</span>
        gf <span class="token operator">=</span> p<span class="token punctuation">;</span>
        bf <span class="token operator">=</span> q<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    r <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>rf <span class="token operator">*</span> <span class="token number">255.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>gf <span class="token operator">*</span> <span class="token number">255.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>bf <span class="token operator">*</span> <span class="token number">255.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token punctuation">)</span> r <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token punctuation">)</span> g <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 延时函数</span>
<span class="token keyword">static</span> <span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">msleep</span><span class="token punctuation">(</span><span class="token keyword">int</span> ms<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">vTaskDelay</span><span class="token punctuation">(</span>ms <span class="token operator">/</span> portTICK_RATE_MS<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>

<span class="token comment">// 测试 LEDC</span>
<span class="token keyword">int</span> <span class="token function">ledc_test_loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> err<span class="token punctuation">;</span>
  <span class="token keyword">int</span> mode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token class-name">uint8_t</span> R <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> G <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> B <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  err <span class="token operator">=</span> <span class="token function">hal_ledc_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;ledc init error\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> PIXEL_NUM<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">sunxi_set_led_brightness</span><span class="token punctuation">(</span>
            i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token function">WS281xLSet</span><span class="token punctuation">(</span><span class="token function">WS281x_Wheel</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">256</span> <span class="token operator">/</span> PIXEL_NUM<span class="token punctuation">)</span> <span class="token operator">+</span> j<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">msleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">msleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并且将测试函数加入到 <code>cpu0_app_entry</code> 中。</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image15.png" alt=""></p><p>重新烧录即可实现七彩流水灯</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter6/image16.png" alt=""></p>`,52),o=[e];function c(l,i){return s(),a("div",null,o)}const u=n(t,[["render",c],["__file","chapter6.html.vue"]]);export{u as default};
