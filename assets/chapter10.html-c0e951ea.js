import{_ as n,o as a,c as s,e}from"./app-e85d5a28.js";const i={},t=e(`<h1 id="wi-fi-wi-fi-manager" tabindex="-1"><a class="header-anchor" href="#wi-fi-wi-fi-manager" aria-hidden="true">#</a> Wi-Fi - Wi-Fi Manager</h1><h2 id="wi-fi-简介" tabindex="-1"><a class="header-anchor" href="#wi-fi-简介" aria-hidden="true">#</a> Wi-Fi 简介</h2><p>FreeRTOS 上的网络，驱动部分源码没有开源，用户实际使用时也无需关系具体实现，更多的是做网络管理的逻辑接口开发，所以我们提供了网络中间件 <code>Wi-Fi Manager</code>，<code>Wi-Fi Manager</code> 支持<code>sta</code>, <code>ap</code>, <code>monitor</code> 等多种网络工作模式的管理，本文档重点介绍 <code>Wi-Fi Manager</code> 中间件的使用，配置，框架，接口。</p><h3 id="wi‐fi-工作的几种模式" tabindex="-1"><a class="header-anchor" href="#wi‐fi-工作的几种模式" aria-hidden="true">#</a> Wi‑Fi 工作的几种模式</h3><p>目前R128 平台上的Wi‑Fi 一般可处于3 种工作模式，分别是STATION，AP，MONITOR。</p><ul><li>STATION：连接无线网络的终端，大部分无线网卡默认都处于该模式，也是常用的一种模式。</li><li>AP：无线接入点，常称热点，比如路由器功能。</li><li>MONITOR：也称为混杂设备监听模式，所有数据包无过滤传输到主机。</li></ul><h3 id="代码路径" tabindex="-1"><a class="header-anchor" href="#代码路径" aria-hidden="true">#</a> 代码路径</h3><p>FreeRTOS 中wlan 相关代码主要分布在四个地方：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1）驱动部分：lichee/rtos/drivers/drv/wireless/xradio
2）协议栈部分：lichee/rtos‑components/thirdparty/network/lwip‑2.1.2
3）应用协议部分：lichee/rtos‑components/aw/network/service
4）中间件部分：lichee/rtos‑components/aw/wireless/Wi-Fi Manager
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置介绍" tabindex="-1"><a class="header-anchor" href="#配置介绍" aria-hidden="true">#</a> 配置介绍</h3><p>FreeRTOS 中 wlan 相关配置分为 c906 和 m33：</p><h4 id="c906-配置" tabindex="-1"><a class="header-anchor" href="#c906-配置" aria-hidden="true">#</a> C906 配置</h4><ol><li>Wi-Fi Manager demo 配置</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt; System components &gt; aw components &gt; wireless
[*] wireless common
[*] Wi-Fi Manager‑v2.0 ‑‑‑&gt;
    Wi-Fi Manager‑v2.0 Configuration ‑‑‑&gt;
    [ ] CONFIG_WMG_PROTOCOL_SOFTAP
    [ ] CONFIG_WMG_PROTOCOL_BLE
    [ ] CONFIG_WMG_PROTOCOL_XCONFIG
    [ ] CONFIG_WMG_PROTOCOL_SOUNDWAVE
        Wi-Fi Manager support platform (FREERTOS PLATFORM OS) ‑‑‑&gt;
            (X) FREERTOS PLATFORM OS
        [*] Wi-Fi Manager unregister callback function
        [*] Wi-Fi Manager support send expand cmd
            Wi-Fi Manager support mode Configuration ‑‑‑&gt;
                [*] Wi-Fi Manager support sta mode enable
                [*] Wi-Fi Manager support ap mode enable
                [ ] Wi-Fi Manager support monitor mode enable
                [ ] Wi-Fi Manager support p2p mode enable
                Wi-Fi Manager set default debug level (default debug level: to info) ‑‑‑&gt;
                    (X) default debug level: to info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>driver 配置</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt; Drivers Options &gt; other drivers
    [*] rfkill drivers

&gt; Drivers Options &gt; other drivers &gt; wireless devices
    [*] XRADIO driver ‑‑‑&gt;
    [*] Enable xradio test cmd
        Xradio chip (Enable r128 driver) ‑‑‑&gt;
    [*] Wi‑Fi Certification of WFA
    [*] wlan station mode
    [ ] wlan station mode with wps support
    [*] wlan monitor mode
    [*] wlan ap mode
        select the source of frequency offset (SDD file) ‑‑‑&gt;
    [ ] wlan ETF test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>应用协议配置</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt; System components &gt; aw components &gt; aw network
    [*] tcp ip adapter
    [ ] loop interface test demo
    [ ] wifi test demo
    [ ] wifi fast connect test demo
    [ ] get mac_addr test demo
    [ ] set/get country code optional
    service ‑‑‑&gt;
        [ ] udhcpd demo
        [ ] sntp demo
        [*] iperf demo
        [*] ping demo
        [ ] nopoll demo
        [ ] mqtt demo
        [ ] shttpd demo
        [ ] mbedtls demo
        [ ] httpc demo
        [ ] mini_wget
        [ ] telnet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>AMP 网络配置</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt; System components &gt; aw components &gt; AMP Components Support
    [*] AMP Network Stub Functions
    [*] AMP Network Service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>协议配置</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt; System components &gt; thirdparty components &gt; network
    ‑*‑ lwip ‑‑‑&gt;
        lwip version (lwip‑2.1.2) ‑‑‑&gt;
    ‑*‑ udhcpd (DHCP Server)
    [*] ping
    ‑*‑ mbedtls ‑‑‑&gt;
        mbedtls version (mbedtls‑2.16.0) ‑‑‑&gt;
    [ ] httpclient
    [ ] websocket
    [ ] nghttp2
    [ ] sntp
    [ ] nopoll
    [ ] shttpd
    [ ] mqtt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="m33-配置" tabindex="-1"><a class="header-anchor" href="#m33-配置" aria-hidden="true">#</a> M33 配置</h4><ol><li>driver 配置</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt; Drivers Options &gt; other drivers
    [*] rfkill drivers

&gt; Drivers Options &gt; other drivers &gt; wireless devices
    [*] XRADIO driver ‑‑‑&gt;
    [*] Enable xradio test cmd
        Xradio chip (Enable r128 driver) ‑‑‑&gt;
    [*] Wi‑Fi Certification of WFA
    [*] wlan station mode
    [ ] wlan station mode with wps support
    [*] wlan monitor mode
    [*] wlan ap mode
        select the source of frequency offset (SDD file) ‑‑‑&gt;
    [ ] wlan ETF test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>AMP 网络配置</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt; System components &gt; aw components &gt; AMP Components Support
    [*] AMP Network Stub Functions
    [*] AMP Network Service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>协议配置</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt; System components &gt; thirdparty components &gt; network
    [ ] lwip ‑‑‑‑
    [ ] udhcpd (DHCP Server)
    [ ] ping
    ‑*‑ mbedtls ‑‑‑&gt;
        mbedtls version (mbedtls‑2.16.0) ‑‑‑&gt;
    [ ] httpclient
    [ ] nghttp2
    [ ] sntp
    [ ] nopoll
    [ ] shttpd
    [ ] mqtt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="wi-fi-manager-简介" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-简介" aria-hidden="true">#</a> Wi-Fi Manager 简介</h2><p>Wi-Fi Manager 用于wifi 的连接管理，通信以及wifi 的一些额外功能。支持sta、ap、monitor、p2p 模式，并且集成了配网模式以及其他功能。屏蔽了底层系统的具体实现，能对接各种差异化系统平台例如 linux，rtos，xrlink(linux 系统mcu 模组)。用户如果需要进行独自的2 次开发(把对应的wifi 功能集成到各自的应用里)，请重点查阅 Wi-Fi Manager 框架，Wi-Fi Manager 代码目录结构，核心层代码章节。用户如果不需要独自的2 次开发，可以直接使用 Wi-Fi Manager 提供的命令行demo，仅需查看Wi-Fi Manager demo 介绍章节。</p><h3 id="wi-fi-manager-框架" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-框架" aria-hidden="true">#</a> Wi-Fi Manager 框架</h3><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part1/chapter10/image1.png" alt=""></p><p>Wi-Fi Manager: 兼容linux，xrlink，freertos 等系统。支持sta，ap，monitor 和p2p 等模式，集成了softap，ble，xconfig，soundwave 等配网功能。提供了完善的api 接口方便用户调用，同时提供了一个基本完整功能的demo，方便用户直接使用和测试。上图是Wi-Fi Manager 的软件结构，整体分为3 部分：应用层，lib 层(接口抽象层，模式抽象层，os 抽象层)，os 具体实现层。</p><ul><li>应用层：主要提供一个基本完整功能的demo，方便用户直接使用，用户也可以不使用该 demo，直接调用lib 库提供的api 接口。把具体功能集成到自己的应用。</li><li>lib 层：包含了接口层，模式抽象层，os 抽象层，对上提供统一的api 接口(wifimg.h)，处理各种模式的逻辑以及共存功能，对下屏蔽os 的具体模式功能。</li><li>具体 os 实现层：该层主要是不同系统对 wifi 功能的具体功能。</li></ul><h3 id="wi-fi-manager-代码目录结构" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-代码目录结构" aria-hidden="true">#</a> Wi-Fi Manager 代码目录结构</h3><p>wifimager 开发包在FreeRTOS SDK 里的路径如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rtos/lichee/rtos‑components/aw/wireless/Wi-Fi Manager
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Wi-Fi Manager 的主要目录结构如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>├── app                   // 用于保存配网时使用的一些配网工具。
├── core                  // 核心代码
│ ├── include             // 存放核心代码相关头文件
│ │ └── wifimg.h          // 对上提供的api接口头文件
│ └── src                 // 核心代码具体实现
│ ├── linkd.c             // 配网抽象层代码
│ ├── wifimg.c            // 对上提供的api接口实现代码
│ ├── wmg_common.c        // 模式切换共存逻辑处理层实现代码
│ ├── wmg_sta.c           // sta模式抽象层代码
│ ├── wmg_ap.c            // ap模式抽象层代码
│ ├── wmg_monitor.c       // monitor模式抽象层代码
│ ├── wmg_p2p.c           // p2p模式抽象层代码
│ ├── expand_cmd.c        // 扩展命令(与模组或系统特殊功能有关，例如获取或设置mac地址，设置特殊模组的ioct等)
│ └── os                  // 具体os(linux,xrlink,freertos)模式功能实现代码
├── demo                  // 比较完整功能的demo实例
│ ├── wifi.c
│ └── wifi_daemon.c
├── files                 // 相关的配置文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>app 目录：存放用于配网测试的apk 安装包。</li><li>core 目录：存放Wi-Fi Manager 核心代码的目录，会编译出libwifimg‑v2.0 库</li><li>demo 目录：存放一个使用libwifimg‑v2.0 接口的demo，用户可以直接使用该demo，也可以 参考该demo 对libwifimg‑v2.0 库api 的使用方式，把功能集成到自己的应用中去。</li><li>files：存放相关的配置文件</li></ul><h2 id="wi-fi-manager-核心代码" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-核心代码" aria-hidden="true">#</a> Wi-Fi Manager 核心代码</h2><h3 id="wi-fi-manager-核心代码目录结构" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-核心代码目录结构" aria-hidden="true">#</a> Wi-Fi Manager 核心代码目录结构</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.
├── include
│ ├── linkd.h
│ ├── os
│ ├── wifi_log.h
│ ├── wifimg.h
│ ├── wmg_ap.h
│ ├── wmg_common.h
│ ├── wmg_monitor.h
│ ├── wmg_p2p.h
│ ├── expand_cmd.h
│ └── wmg_sta.h
└── src
├── linkd.c
├── log
├── os
│ ├── linux      // (在非linux系统该目录不存在)
│ ├── xrlink     // (在非xrlink系统该目录不存在)
│ └── freertos   // (在非freertos系统该目录不存在)
├── wifimg.c
├── wmg_ap.c
├── wmg_common.c
├── wmg_monitor.c
├── wmg_p2p.c
├── expand_cmd.c
└── wmg_sta.c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>include: 保存核心代码相关头文件目录</li><li>src : 保存核心代码源码文件目录</li><li>src/log：打印相关代码</li><li>src/wifimg.c : 用户接口对接口层文件（提供用户对接层API 接口文件，对接api 请查看 wifimg.h）</li><li>src/wmg_common.c：wifi 模式抽象层（各种模式的抽象层，处理切换和共存逻辑）</li><li>src/wmg_sta.c：station 模式抽象层</li><li>src/wmg_ap.c：ap 模式抽象层</li><li>src/wmg_monitor.c: monitor 模式抽象层。</li><li>src/expand_cmd.c：特殊额外功能抽象层。</li><li>src/os : 对应的系统模式实现层代码。</li><li>src/os/linux：linux 平台wifi 模式功能具体实现代码存放目录(在非linux 系统该目录不存在)</li><li>src/os/xrlink：xrlink 平台wifi 模式功能具体实现代码存放目录(在非xrlink 系统该目录不存在)</li><li>src/os/freertos：freertos 平台wifi 模式功能具体实现代码存放目录(在非freertos 系统该目录不存在)</li></ul><p>核心代码里各文件调用关系图如下：</p><p><img src="http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part1/chapter10/image2.png" alt=""></p><ol><li>用户会调用wifimg.c 提供的接口函数</li><li>wifimg.c 的接口函数会调用到模式抽象层wmg_common.c 里的函数</li><li>wmg_common.c 里的函数会根据不同的模式调用到wmg_sta.c(sta 模式抽象层)，wmg_ap.c(ap 模式抽象层)wmg_monitor.c(monitor 模式抽象层)wmg_p2p.c(p2p 模式抽象层) 里的函数</li><li>wmg_sta.c(sta 模式抽象层) 会根据不同的平台调用到linux_sta.c(linux 平台具体实现文件)，xrlink_sta.c(xrlink 平台具体实现文件)，freertos_sta.c(rtos 平台具体实现文件)。</li><li>wmg_ap.c(ap 模式抽象层) 会根据不同的平台调用到freertos_ap.c(linux 平台具体实现文件)，xrlink_ap.c(xrlink 平台具体实现文件)，freertos_ap.c(rtos 平台具体实现文件)。</li><li>wmg_monitor.c(monitor 模式抽象层) 会根据不同的平台调用到linux_monitor.c(linux 平台具体实现文件)，xrlink_monitor.c(xrlink 平台具体实现文件)，freertos_monitor.c(rtos 平台具体实现文件)。</li><li>wmg_p2p.c(p2p 模式抽象层) 会根据不同的平台调用到linux_p2p.c(linux 平台具体实现文件)。</li><li>自定义扩展(expand_cmd.c) 与系统或模组特殊功能有关，例如设置或获取mac 地址，特殊ioct等功能。</li></ol><h2 id="wi-fi-manager-核心代码关键结构体说明" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-核心代码关键结构体说明" aria-hidden="true">#</a> Wi-Fi Manager 核心代码关键结构体说明</h2><p>该章节主要用于描述核心代码中使用到的一些关键的结构体。不需要单独阅读该章节，该章节属于查询性质，当在其他章节中查看到需要查询的结构体时再查询该章节即可。该章节的关键结构体都在 <code>Wi-Fi Manager/core/include/wifimg.h</code> 文件里定义。</p><h3 id="定义wi-fi-manager-的错误码" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-的错误码" aria-hidden="true">#</a> 定义Wi-Fi Manager 的错误码</h3><p>结构体描述：该结构体主要用于定义Wi-Fi Manager 各函数执行后的返回码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    WMG_STATUS_SUCCESS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    WMG_STATUS_FAIL <span class="token operator">=</span> ‑<span class="token number">1</span><span class="token punctuation">,</span>
    WMG_STATUS_NOT_READY <span class="token operator">=</span> ‑<span class="token number">2</span><span class="token punctuation">,</span>
    WMG_STATUS_NOMEM <span class="token operator">=</span> ‑<span class="token number">3</span><span class="token punctuation">,</span>
    WMG_STATUS_BUSY <span class="token operator">=</span> ‑<span class="token number">4</span><span class="token punctuation">,</span>
    WMG_STATUS_UNSUPPORTED <span class="token operator">=</span> ‑<span class="token number">5</span><span class="token punctuation">,</span>
    WMG_STATUS_INVALID <span class="token operator">=</span> ‑<span class="token number">6</span><span class="token punctuation">,</span>
    WMG_STATUS_TIMEOUT <span class="token operator">=</span> ‑<span class="token number">7</span><span class="token punctuation">,</span>
    WMG_STATUS_UNHANDLED <span class="token operator">=</span> ‑<span class="token number">8</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token class-name">wmg_status_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>WMG_STATUS_SUCCESS：函数执行成功</li><li>WMG_STATUS_FAIL：函数执行失败</li><li>WMG_STATUS_NOT_READY：函数没有准备好</li><li>WMG_STATUS_NOMEM：函数无法申请到需要的内存</li><li>WMG_STATUS_BUSY：函数处于忙状态</li><li>WMG_STATUS_UNSUPPORTED：函数不支持该功能</li><li>WMG_STATUS_INVALID：函数收到无效数据</li><li>WMG_STATUS_TIMEOUT：函数执行超时</li><li>WMG_STATUS_UNHANDLED：函数不处理该次调用</li></ul><h3 id="定义wi-fi-manager-支持的模式" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-支持的模式" aria-hidden="true">#</a> 定义Wi-Fi Manager 支持的模式</h3><p>结构体描述：该结构体主要用于定义Wi-Fi Manager 的模式</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    WIFI_MODE_UNKNOWN <span class="token operator">=</span> <span class="token number">0</span>b0<span class="token punctuation">,</span>
    WIFI_STATION <span class="token operator">=</span> <span class="token number">0</span>b1<span class="token punctuation">,</span>
    WIFI_AP <span class="token operator">=</span> <span class="token number">0</span>b10<span class="token punctuation">,</span>
    WIFI_MONITOR <span class="token operator">=</span> <span class="token number">0</span>b100<span class="token punctuation">,</span>
    WIFI_P2P <span class="token operator">=</span> <span class="token number">0</span>b1000<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_mode_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>WIFI_STATION：station 模式</li><li>WIFI_AP：ap 模式</li><li>WIFI_MONITOR：monitor 模式</li><li>WIFI_P2P：p2p 模式</li><li>WIFI_MODE_UNKNOWN：未定义模式</li></ul><h3 id="定义wi-fi-manager-网络接口状态" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-网络接口状态" aria-hidden="true">#</a> 定义Wi-Fi Manager 网络接口状态</h3><p>结构体描述：该结构体主要用于定义Wi-Fi Manager 对网卡设备状态的识别</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    WLAN_STATUS_DOWN<span class="token punctuation">,</span>
    WLAN_STATUS_UP<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_dev_status_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>WLAN_STATUS_DOWN：网卡设备关闭</li><li>WLAN_STATUS_UP：网卡设备启动</li></ul><h3 id="定义wi-fi-manager-收到的消息类型" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-收到的消息类型" aria-hidden="true">#</a> 定义Wi-Fi Manager 收到的消息类型</h3><p>结构体描述：该结构体主要用于定义Wi-Fi Manager 收到的回调消息的类型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    WIFI_MSG_ID_DEV_STATUS<span class="token punctuation">,</span>
    WIFI_MSG_ID_STA_CN_EVENT<span class="token punctuation">,</span>
    WIFI_MSG_ID_STA_STATE_CHANGE<span class="token punctuation">,</span>
    WIFI_MSG_ID_AP_CN_EVENT<span class="token punctuation">,</span>
    WIFI_MSG_ID_P2P_CN_EVENT<span class="token punctuation">,</span>
    WIFI_MSG_ID_P2P_STATE_CHANGE<span class="token punctuation">,</span>
    WIFI_MSG_ID_MONITOR<span class="token punctuation">,</span>
    WIFI_MSG_ID_MAX<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_msg_id_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>WIFI_MSG_ID_DEV_STATUS：设备状态发生了改变的消息</li><li>WIFI_MSG_ID_STA_CN_EVENT：sta 模式在连接过程中事件发生改变的消息</li><li>WIFI_MSG_ID_STA_STATE_CHANGE：sta 模式状态发生改变的消息</li><li>WIFI_MSG_ID_AP_CN_EVENT：ap 模式在连接过程中事件发生改变的消息</li><li>WIFI_MSG_ID_P2P_CN_EVENT：p2p 模式在连接过程中事件发生改变的消息</li><li>WIFI_MSG_ID_P2P_STATE_CHANGE：p2p 模式状态发生改变的消息</li><li>WIFI_MSG_ID_MONITOR：monitor 模式的消息</li><li>WIFI_MSG_ID_MAX：无意义消息类型，界限结构体用</li></ul><h3 id="定义wi-fi-manager-的加密方式" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-的加密方式" aria-hidden="true">#</a> 定义Wi-Fi Manager 的加密方式</h3><p>结构体描述：该结构体主要用于定义Wi-Fi Manager 的加密方式</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    WIFI_SEC_NONE<span class="token punctuation">,</span>
    WIFI_SEC_WEP<span class="token punctuation">,</span>
    WIFI_SEC_WPA_PSK<span class="token punctuation">,</span>
    WIFI_SEC_WPA2_PSK<span class="token punctuation">,</span>
    WIFI_SEC_WPA3_PSK<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_secure_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>WIFI_SEC_NONE：没有加密</li><li>WIFI_SEC_WEP：wep 加密方式</li><li>WIFI_SEC_WPA_PSK：wpa 加密方式</li><li>WIFI_SEC_WPA2_PSK：wpa2 加密方式</li><li>WIFI_SEC_WPA3_PSK：wpa3 加密方式</li></ul><h3 id="定义wi-fi-manager-station-模式的状态" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-station-模式的状态" aria-hidden="true">#</a> 定义Wi-Fi Manager station 模式的状态</h3><p>结构体描述：该结构体主要用于定义Wi-Fi Manager 的station 模式状态</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    WIFI_STA_IDLE<span class="token punctuation">,</span>
    WIFI_STA_CONNECTING<span class="token punctuation">,</span>
    WIFI_STA_CONNECTED<span class="token punctuation">,</span>
    WIFI_STA_OBTAINING_IP<span class="token punctuation">,</span>
    WIFI_STA_NET_CONNECTED<span class="token punctuation">,</span>
    WIFI_STA_DHCP_TIMEOUT<span class="token punctuation">,</span>
    WIFI_STA_DISCONNECTING<span class="token punctuation">,</span>
    WIFI_STA_DISCONNECTED<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_sta_state_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>WIFI_STA_IDLE：station 模式处于空闲状态</li><li>WIFI_STA_CONNECTING：station 模式处于正在连接ap 状态</li><li>WIFI_STA_CONNECTED：station 模式处于已连接上ap 状态</li><li>WIFI_STA_OBTAINING_IP：station 模式处于正在获取IP 状态</li><li>WIFI_STA_NET_CONNECTED：station 模式处于网络连接已完成状态</li><li>WIFI_STA_DHCP_TIMEOUT：station 模式处于DHCP 超时状态</li><li>WIFI_STA_DISCONNECTING：station 模式处于正在取消连接状态</li><li>WIFI_STA_DISCONNECTED：station 模式处于已取消连接状态</li></ul><h3 id="定义wi-fi-manager-station-模式在连接过程中的事件" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-station-模式在连接过程中的事件" aria-hidden="true">#</a> 定义Wi-Fi Manager station 模式在连接过程中的事件</h3><p>结构体描述：该结构体主要用于定义Wi-Fi Manager 的station 模式在连接ap 过程中的事件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>typedef enum {
    WIFI_DISCONNECTED,
    WIFI_SCAN_STARTED,
    WIFI_SCAN_FAILED,
    WIFI_SCAN_RESULTS,
    WIFI_NETWORK_NOT_FOUND,
    WIFI_PASSWORD_INCORRECT,
    WIFI_AUTHENTIACATION,
    WIFI_AUTH_REJECT,
    WIFI_ASSOCIATING,
    WIFI_ASSOC_REJECT,
    WIFI_ASSOCIATED,
    WIFI_4WAY_HANDSHAKE,
    WIFI_GROUNP_HANDSHAKE,
    WIFI_GROUNP_HANDSHAKE_DONE,
    WIFI_CONNECTED,
    WIFI_CONNECT_TIMEOUT,
    WIFI_DEAUTH,
    WIFI_DHCP_START,
    WIFI_DHCP_TIMEOUT,
    WIFI_DHCP_SUCCESS,
    WIFI_TERMINATING,
    WIFI_UNKNOWN,
} wifi_sta_event_t;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>WIFI_DISCONNECTED：已取消连接</li><li>WIFI_SCAN_STARTED：扫描开始</li><li>WIFI_SCAN_FAILED：扫描失败</li><li>WIFI_SCAN_RESULTS：获取到扫描结果</li><li>WIFI_NETWORK_NOT_FOUND：没有找到对应的network</li><li>WIFI_PASSWORD_INCORRECT：密码不正确</li><li>WIFI_AUTHENTIACATION：认证</li><li>WIFI_AUTH_REJECT：认证被拒绝</li><li>WIFI_ASSOCIATING：关联</li><li>WIFI_ASSOC_REJECT：关联被拒绝</li><li>WIFI_ASSOCIATED：关联完成</li><li>WIFI_4WAY_HANDSHAKE：4 次握手</li><li>WIFI_GROUNP_HANDSHAKE：交换组密钥</li><li>WIFI_GROUNP_HANDSHAKE_DONE：交换组密钥完成</li><li>WIFI_CONNECTED：连接完成</li><li>WIFI_CONNECT_TIMEOUT：连接超时</li><li>WIFI_DEAUTH：取消认证</li><li>WIFI_DHCP_START：DHCP 开始</li><li>WIFI_DHCP_TIMEOUT：DHCP 超时</li><li>WIFI_DHCP_SUCCESS：DHCP 成功</li><li>WIFI_TERMINATING：终止</li><li>WIFI_UNKNOWN：未知</li></ul><h3 id="定义-wi-fi-manager-station-模式的一些信息" tabindex="-1"><a class="header-anchor" href="#定义-wi-fi-manager-station-模式的一些信息" aria-hidden="true">#</a> 定义 Wi-Fi Manager station 模式的一些信息</h3><p>结构体描述：该结构体主要用于定义Wi-Fi Manager 的station 模式的一些信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>typedef struct {
    int id;
    int freq;
    int rssi;
    uint8_t bssid[6];
    char ssid[SSID_MAX_LEN + 1];
    uint8_t mac_addr[6];
    uint8_t ip_addr[4];
    uint8_t gw_addr[4];
    wifi_secure_t sec;
} wifi_sta_info_t;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>id：wpa_supplicant 里保存的network id 号</li><li>freq：频率(指的是信道频率，2412 = channel 1)</li><li>rssi：信号强度</li><li>bssid[6]：连接的ap 的bssid</li><li>ssid[SSID_MAX_LEN]：连接的ap 的ssid</li><li>mac_addr[6]：本地mac 地址</li><li>ip_addr[4]：本地ip 地址</li><li>gw_addr[4]：网关地址</li><li>sec：加密方式</li></ul><h3 id="定义wi-fi-manager-station-模式保存的ap-信息" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-station-模式保存的ap-信息" aria-hidden="true">#</a> 定义Wi-Fi Manager station 模式保存的ap 信息</h3><p>结构体描述：该结构体主要用于定义Wi-Fi Manager station 模式时曾经连接过的一条ap 信息</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> id<span class="token punctuation">;</span>
    <span class="token keyword">char</span> ssid<span class="token punctuation">[</span>SSID_MAX_LEN <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> bssid<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> flags<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_sta_list_nod_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>id：wpa_supplicant 里保存的network id 号，某些系统不会使用到，用户可以不用关心</li><li>ssid[SSID_MAX_LEN]：连接过的ap 的ssid</li><li>bssid[BSSID_MAX_LEN]：连接过的ap 的bssid</li><li>flags[16]：一些状态码，用户可以不用关心</li></ul><h3 id="定义wi-fi-manager-station-模式时要进行连接的ap-的配置信息" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-station-模式时要进行连接的ap-的配置信息" aria-hidden="true">#</a> 定义Wi-Fi Manager station 模式时要进行连接的ap 的配置信息</h3><p>结构体描述：该结构体主要用于描述Wi-Fi Manager station 模式时要连接过的ap 的配置信息，在连接某个特定ap 时，用户需要填充这个结构体。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> ssid<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> password<span class="token punctuation">;</span>
    <span class="token class-name">wifi_secure_t</span> sec<span class="token punctuation">;</span>
    bool fast_connect<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_sta_cn_para_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>ssid：要连接的ap 的ssid</li><li>password：要连接的ap 的password</li><li>sec：要连接的ap 的加密方式</li><li>fast_connect：该参数暂时没有作用，扩展用，用户可以不用关心</li></ul><h3 id="定义wi-fi-manager-station-模式时扫描到的一条-ap-结果" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-station-模式时扫描到的一条-ap-结果" aria-hidden="true">#</a> 定义Wi-Fi Manager station 模式时扫描到的一条 ap 结果</h3><p>结构体描述：该结构体主要用于定义Wi-Fi Manager station 模式时扫描到的一条ap 结果包含什么内容</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> bssid<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> ssid<span class="token punctuation">[</span>SSID_MAX_LEN <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">uint32_t</span> freq<span class="token punctuation">;</span>
    <span class="token keyword">int</span> rssi<span class="token punctuation">;</span>
    <span class="token class-name">wifi_secure_t</span> key_mgmt<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_scan_result_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>bssid：扫描到的ap 的bssid</li><li>ssid：扫描到的ap 的ssid</li><li>freq：扫描到的ap 的频率(指的是信道频率，2412 = channel 1)</li><li>rssi：扫描到的ap 的信号强度</li><li>key_mgmt：扫描到的ap 的加密方式</li></ul><h3 id="定义wi-fi-manager-ap-模式的状态" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-ap-模式的状态" aria-hidden="true">#</a> 定义Wi-Fi Manager ap 模式的状态</h3><p>结构体描述：该结构体主要用于描述Wi-Fi Manager ap 模式时的状态</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    WIFI_AP_DISABLE<span class="token punctuation">,</span>
    WIFI_AP_ENABLE<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_ap_state_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>WIFI_AP_DISABLE：ap 模式处于非使能状态</li><li>WIFI_AP_ENABLE：ap 模式处于使能状态</li></ul><h3 id="定义wi-fi-manager-ap-模式时的事件" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-ap-模式时的事件" aria-hidden="true">#</a> 定义Wi-Fi Manager ap 模式时的事件</h3><p>结构体描述：该结构体主要用于描述Wi-Fi Manager ap 模式时的状态</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    WIFI_AP_ENABLED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
    WIFI_AP_DISABLED<span class="token punctuation">,</span>
    WIFI_AP_STA_DISCONNECTED<span class="token punctuation">,</span>
    WIFI_AP_STA_CONNECTED<span class="token punctuation">,</span>
    WIFI_AP_UNKNOWN<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_ap_event_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>WIFI_AP_ENABLED：ap 模式已使能</li><li>WIFI_AP_DISABLED：ap 模式未使能</li><li>WIFI_AP_STA_DISCONNECTED：ap 模式触发了有sta 取消连接事件</li><li>WIFI_AP_STA_CONNECTED：ap 模式触发了有sta 进行连接事件</li><li>WIFI_AP_UNKNOWN：ap 模式下未定义事件</li></ul><h3 id="定义wi-fi-manager-ap-模式时开启的ap-热点的配置信息" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-ap-模式时开启的ap-热点的配置信息" aria-hidden="true">#</a> 定义Wi-Fi Manager ap 模式时开启的ap 热点的配置信息</h3><p>结构体描述：该结构体主要用于定义Wi-Fi Manager ap 模式时开启的ap 热点的配置信息</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>ssid<span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>psk<span class="token punctuation">;</span>
    <span class="token class-name">wifi_secure_t</span> sec<span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> channel<span class="token punctuation">;</span>
    <span class="token keyword">int</span> key_mgmt<span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> mac_addr<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> ip_addr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> gw_addr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>dev_list<span class="token punctuation">[</span>STA_MAX_NUM<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> sta_num<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_ap_config_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>ssid：要开启的ap 热点的ssid</li><li>psk：要开启的ap 热点的密码</li><li>sec：要开启的ap 热点的加密方式</li><li>channel：要开启的ap 热点的信道</li><li>key_mgmt：加密类型</li><li>mac_addr：开启的ap 地址(信息获取非设置)</li><li>ip_addr：开启的ap 的ip 地址(信息获取非设置)</li><li>gw_addr：开启的ap 的网关(信息获取非设置)</li><li>dev_list：连接到ap 热点的sta 设备(信息获取非设置)</li><li>sta_num：连接到ap 热点的sta 设备的个数(信息获取非设置)</li></ul><h3 id="定义wi-fi-manager-monitor-模式的状态" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-monitor-模式的状态" aria-hidden="true">#</a> 定义Wi-Fi Manager monitor 模式的状态</h3><p>结构体描述：该结构体主要用于定义Wi-Fi Manager monitor 模式的状态</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    WIFI_MONITOR_DISABLE<span class="token punctuation">,</span>
    WIFI_MONITOR_ENABLE<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_monitor_state_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>WIFI_MONITOR_DISABLE：使能状态的monitor 模式</li><li>WIFI_MONITOR_ENABLE：使能状态的monitor 模式</li></ul><h3 id="定义wi-fi-manager-monitor-模式时收到的数据帧" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-monitor-模式时收到的数据帧" aria-hidden="true">#</a> 定义Wi-Fi Manager monitor 模式时收到的数据帧</h3><p>结构体描述：该结构体主要用于描述Wi-Fi Manager monitor 模式时收到的帧的内容</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> <span class="token operator">*</span>data<span class="token punctuation">;</span>
    <span class="token class-name">uint32_t</span> len<span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> channel<span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token operator">*</span>info<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_monitor_data_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>data：monitor 模式时收到的帧数据</li><li>len：monitor 模式时收到的帧的长度</li><li>channel：monitor 模式时从什么信道收到的帧</li><li>info：monitor 模式时收到帧的扩展信息(目前暂时没有意义)</li></ul><h3 id="定义wi-fi-manager-p2p-模式时开启p2p-热点的配置信息" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-p2p-模式时开启p2p-热点的配置信息" aria-hidden="true">#</a> 定义Wi-Fi Manager p2p 模式时开启p2p 热点的配置信息</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>dev_name<span class="token punctuation">;</span>
    <span class="token keyword">int</span> listen_time<span class="token punctuation">;</span>
    <span class="token keyword">int</span> p2p_go_intent<span class="token punctuation">;</span>
    bool auto_connect<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_p2p_config_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>dev_name：p2p 设备名</li><li>listen_time：启动p2p 模式时进行监听多少秒</li><li>p2p_go_intent：启动p2p 模式是go intent 值设置多少(0 ~ 15 会影响到gc go 的协商)</li><li>auto_connect：是否支持被动连接</li></ul><h3 id="定义wi-fi-manager-p2p-模式时p2p-连接成功后的信息" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-p2p-模式时p2p-连接成功后的信息" aria-hidden="true">#</a> 定义Wi-Fi Manager p2p 模式时p2p 连接成功后的信息</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> bssid<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> mode<span class="token punctuation">;</span>
    <span class="token keyword">int</span> freq<span class="token punctuation">;</span>
    <span class="token keyword">char</span> ssid<span class="token punctuation">[</span>SSID_MAX_LEN <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_p2p_info_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>bssid：p2p 的bssid</li><li>mode：连接成功后协助的模式go/gc</li><li>freq：连接成功后的频率(信道)</li><li>ssid：连接成功后的ssid</li></ul><h3 id="定义wi-fi-manager-p2p-模式时的状态" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-p2p-模式时的状态" aria-hidden="true">#</a> 定义Wi-Fi Manager p2p 模式时的状态</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    WIFI_P2P_ENABLE<span class="token punctuation">,</span>
    WIFI_P2P_DISABLE<span class="token punctuation">,</span>
    WIFI_P2P_CONNECTD_GC<span class="token punctuation">,</span>
    WIFI_P2P_CONNECTD_GO<span class="token punctuation">,</span>
    WIFI_P2P_DISCONNECTD<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_p2p_state_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>WIFI_P2P_ENABLE：使能状态的p2p 模式</li><li>WIFI_P2P_DISABLE：不使能状态的p2p 模式</li><li>WIFI_P2P_CONNECTD_GC：连接状态，协商模式为gc</li><li>WIFI_P2P_CONNECTD_GO：连接状态，协商模式未go</li><li>WIFI_P2P_DISCONNECTD：未连接状态</li></ul><h3 id="定义wi-fi-manager-p2p-模式时的事件" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-p2p-模式时的事件" aria-hidden="true">#</a> 定义Wi-Fi Manager p2p 模式时的事件</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
    WIFI_P2P_DEV_FOUND<span class="token punctuation">,</span>
    WIFI_P2P_DEV_LOST<span class="token punctuation">,</span>
    WIFI_P2P_PBC_REQ<span class="token punctuation">,</span>
    WIFI_P2P_GO_NEG_RQ<span class="token punctuation">,</span>
    WIFI_P2P_GO_NEG_SUCCESS<span class="token punctuation">,</span>
    WIFI_P2P_GO_NEG_FAILURE<span class="token punctuation">,</span>
    WIFI_P2P_GROUP_FOR_SUCCESS<span class="token punctuation">,</span>
    WIFI_P2P_GROUP_FOR_FAILURE<span class="token punctuation">,</span>
    WIFI_P2P_GROUP_STARTED<span class="token punctuation">,</span>
    WIFI_P2P_GROUP_REMOVED<span class="token punctuation">,</span>
    WIFI_P2P_CROSS_CONNECT_ENABLE<span class="token punctuation">,</span>
    WIFI_P2P_CROSS_CONNECT_DISABLE<span class="token punctuation">,</span>
    <span class="token comment">/*Wi-Fi Manager self‑defined state*/</span>
    WIFI_P2P_SCAN_RESULTS<span class="token punctuation">,</span>
    WIFI_P2P_GROUP_DHCP_DNS_FAILURE<span class="token punctuation">,</span>
    WIFI_P2P_GROUP_DHCP_SUCCESS<span class="token punctuation">,</span>
    WIFI_P2P_GROUP_DHCP_FAILURE<span class="token punctuation">,</span>
    WIFI_P2P_GROUP_DNS_SUCCESS<span class="token punctuation">,</span>
    WIFI_P2P_GROUP_DNS_FAILURE<span class="token punctuation">,</span>
    WIFI_P2P_UNKNOWN<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_p2p_event_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>WIFI_P2P_DEV_FOUND：寻找p2p 设备事件</li><li>WIFI_P2P_DEV_LOST：p2p 设备丢失事件</li><li>WIFI_P2P_PBC_REQ：以pbc 方式连接请求事件</li><li>WIFI_P2P_GO_NEG_RQ：go 模式协商请求事件</li><li>WIFI_P2P_GO_NEG_SUCCESS：go 模式协商成功事件</li><li>WIFI_P2P_GO_NEG_FAILURE：go 模式协商失败事件</li><li>WIFI_P2P_GROUP_FOR_SUCCESS：p2p 组创建成功事件</li><li>WIFI_P2P_GROUP_FOR_FAILURE：p2p 组创建失败事件</li><li>WIFI_P2P_GROUP_STARTED：p2p 组创建开始事件</li><li>WIFI_P2P_GROUP_REMOVED：p2p 移除组事件</li><li>WIFI_P2P_CROSS_CONNECT_ENABLE</li><li>WIFI_P2P_CROSS_CONNECT_DISABLE</li><li>/Wi-Fi Manager self‑defined state/ –&gt; Wi-Fi Manager 自定义事件</li><li>WIFI_P2P_SCAN_RESULTS：p2p 扫描完成事件</li><li>WIFI_P2P_GROUP_DHCP_DNS_FAILURE：p2p 组dhcp/dns 启动失败事件</li><li>WIFI_P2P_GROUP_DHCP_SUCCESS：p2p dhcp 成功事件(gc 模式下获取到了ip 地址)</li><li>WIFI_P2P_GROUP_DHCP_FAILURE：p2p dhcp 失败事件</li><li>WIFI_P2P_GROUP_DNS_SUCCESS：p2p dns 服务启动成功事件(go 模式下dns 服务成功)</li><li>WIFI_P2P_GROUP_DNS_FAILURE：p2p dns 服务启动失败事件</li><li>WIFI_P2P_UNKNOWN：未知p2p 事件</li></ul><h3 id="定义wi-fi-manager-收到的回调事件" tabindex="-1"><a class="header-anchor" href="#定义wi-fi-manager-收到的回调事件" aria-hidden="true">#</a> 定义Wi-Fi Manager 收到的回调事件</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
<span class="token class-name">wifi_msg_id_t</span> id<span class="token punctuation">;</span>
    <span class="token keyword">union</span> <span class="token punctuation">{</span>
        <span class="token class-name">wifi_dev_status_t</span> d_status<span class="token punctuation">;</span>
        <span class="token class-name">wifi_sta_event_t</span> event<span class="token punctuation">;</span>
        <span class="token class-name">wifi_sta_state_t</span> state<span class="token punctuation">;</span>
        <span class="token class-name">wifi_ap_event_t</span> ap_event<span class="token punctuation">;</span>
        <span class="token class-name">wifi_ap_state_t</span> ap_state<span class="token punctuation">;</span>
        <span class="token class-name">wifi_monitor_state_t</span> mon_state<span class="token punctuation">;</span>
        <span class="token class-name">wifi_monitor_data_t</span> <span class="token operator">*</span>frame<span class="token punctuation">;</span>
        <span class="token class-name">wifi_p2p_event_t</span> p2p_event<span class="token punctuation">;</span>
        <span class="token class-name">wifi_p2p_state_t</span> p2p_state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> data<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token class-name">wifi_msg_data_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>id：回调事件的数据类型，根据这个id 好确定data 里的数据是什么类型的data：数据类型</li><li>d_status：回调事件数据类型是设备状态变化信息</li><li>even：回调事件数据类型是sta 模式连接ap 过程中状态变化信息</li><li>state：回调事件数据类型是sta 模式状态信息</li><li>ap_event：回调事件数据类型是ap 模式连接过程中状态变化信息</li><li>ap_state：回调事件数据类型是ap 模式状态信息</li><li>mon_state：回调事件数据类型是monitor 模式状态信息</li><li>p2p_event：回调事件数据类型是p2p 模式连接过程中状态变化信息</li><li>p2p_state：回调事件数据类型是p2p 模式状态信息</li><li>frame：回调事件数据类型是monitor 模式收到的数据帧</li></ul><h2 id="wi-fi-manager-核心代码各函数说明" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-核心代码各函数说明" aria-hidden="true">#</a> Wi-Fi Manager 核心代码各函数说明</h2><p>该章节主要用于介绍核心代码中各API (需要2 次开发的人员重点关注和查阅)</p><h3 id="初始化wi-fi-manager" tabindex="-1"><a class="header-anchor" href="#初始化wi-fi-manager" aria-hidden="true">#</a> 初始化Wi-Fi Manager</h3><p>想要使用Wi-Fi Manager 的功能前，必须调用该函数进行Wi-Fi Manager 初始化。</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>void</li></ul><p>返回值：</p><ul><li>0：Wi-Fi Manager 初始化成功；</li><li>0：Wi-Fi Manager 初始化失败。</li></ul><h3 id="反初始化wi-fi-manager" tabindex="-1"><a class="header-anchor" href="#反初始化wi-fi-manager" aria-hidden="true">#</a> 反初始化Wi-Fi Manager</h3><p>反初始化Wi-Fi Manager</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_deinit</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>void</li></ul><p>返回值：</p><ul><li>0：Wi-Fi Manager 反初始化成功；</li><li>非0：Wi-Fi Manager 反初始化失败。</li></ul><h3 id="打开wi-fi-manager-某种模式" tabindex="-1"><a class="header-anchor" href="#打开wi-fi-manager-某种模式" aria-hidden="true">#</a> 打开Wi-Fi Manager 某种模式</h3><p>想要使用Wi-Fi Manager 的功能前，必须调用该函数进行Wi-Fi Manager 初始化。</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_on</span><span class="token punctuation">(</span><span class="token class-name">wifi_mode_t</span> mode<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>wifi_mode_t：需要打开的模式（WIFI_STATION / WIFI_AP / WIFI_MONITOR/WIFI_P2P）</li></ul><p>返回值：</p><ul><li>0：Wi-Fi Manager；</li><li>非0：Wi-Fi Manager 初始化失败。</li></ul><h3 id="关闭wi-fi-manager" tabindex="-1"><a class="header-anchor" href="#关闭wi-fi-manager" aria-hidden="true">#</a> 关闭Wi-Fi Manager</h3><p>关闭Wi-Fi Manager 后，要重新使用Wi-Fi Manager 需要重新调用wifi_on</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_off</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>void</li></ul><p>返回值：</p><ul><li>0：成功</li><li>非0：失败</li></ul><h3 id="sta-模式下连接ap" tabindex="-1"><a class="header-anchor" href="#sta-模式下连接ap" aria-hidden="true">#</a> sta 模式下连接ap</h3><p>连接到某个特定的ap</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_sta_connect</span><span class="token punctuation">(</span><span class="token class-name">wifi_sta_cn_para_t</span> <span class="token operator">*</span> cn_para）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>wifi_sta_cn_para_t 需要连接的ap 的信息</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="sta-模式下断开与ap-的连接" tabindex="-1"><a class="header-anchor" href="#sta-模式下断开与ap-的连接" aria-hidden="true">#</a> sta 模式下断开与ap 的连接</h3><p>只有在已连接上某个ap 后调用该接口才有用，否则会返回失败</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_sta_disconnect</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>void</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="sta-模式下自动连接上某个ap" tabindex="-1"><a class="header-anchor" href="#sta-模式下自动连接上某个ap" aria-hidden="true">#</a> sta 模式下自动连接上某个ap</h3><p>该功能主要有2 个附加作用</p><ol><li>当系统有保存已连接过的ap 信息时，调用该接口后会自动尝试去连接已连接过的ap。</li><li>当已连接上某个ap 后，因某些原因导致了与ap 断开，打开了该功能会尝试继续连接该ap；</li></ol><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_sta_auto_reconnect</span><span class="token punctuation">(</span><span class="token class-name">wmg_bool_t</span> enable<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>wmg_bool_t：打开或关闭该功能；</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="sta-模式下获取当前状态的一些信息" tabindex="-1"><a class="header-anchor" href="#sta-模式下获取当前状态的一些信息" aria-hidden="true">#</a> sta 模式下获取当前状态的一些信息</h3><p>获取当前station 模式状态的一些信息(包括连接上的ap 的ssid，bssid 等)</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_sta_get_info</span><span class="token punctuation">(</span><span class="token class-name">wifi_sta_info_t</span> <span class="token operator">*</span> sta_info<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>wifi_sta_info_t，station 模式的一些信息</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="sta-模式下列出已保存的ap-的信息" tabindex="-1"><a class="header-anchor" href="#sta-模式下列出已保存的ap-的信息" aria-hidden="true">#</a> sta 模式下列出已保存的ap 的信息</h3><p>在sta 模式下移除某个ap 信息，R128平台仅列出最后一次连接的ap的信息</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_sta_list_networks</span><span class="token punctuation">(</span><span class="token class-name">wifi_sta_list_t</span> <span class="token operator">*</span> sta_list<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>wifi_sta_list_t 保存列表信息</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="sta-模式下移除某个ap-信息" tabindex="-1"><a class="header-anchor" href="#sta-模式下移除某个ap-信息" aria-hidden="true">#</a> sta 模式下移除某个ap 信息</h3><p>该接口主要配合wifi_sta_list_networks 接口使用</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_sta_remove_networks</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> ssid<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>ssid：要移除的ap 的ssid</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="ap-模式下使能ap-热点功能" tabindex="-1"><a class="header-anchor" href="#ap-模式下使能ap-热点功能" aria-hidden="true">#</a> ap 模式下使能ap 热点功能</h3><p>根据 wifi_ap_config_t 的设置不同，启动的热点会不同</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>wifi_ap_config_t，使能ap 热点时的配置参数</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="ap-模式下关闭ap-热点功能" tabindex="-1"><a class="header-anchor" href="#ap-模式下关闭ap-热点功能" aria-hidden="true">#</a> ap 模式下关闭ap 热点功能</h3><p>在ap 模式下关闭ap 热点功能</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_ap_disable</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>void</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="ap-模式下获取当前ap-热点的配置信息" tabindex="-1"><a class="header-anchor" href="#ap-模式下获取当前ap-热点的配置信息" aria-hidden="true">#</a> ap 模式下获取当前ap 热点的配置信息</h3><p>该接口主要是用于获取当前启动的ap 热点的配置信息</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_ap_get_config</span><span class="token punctuation">(</span><span class="token class-name">wifi_ap_config_t</span> <span class="token operator">*</span> ap_config<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>ifi_ap_config_t，ap 热点的配置参数</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="monitor-模式使能monitor-功能" tabindex="-1"><a class="header-anchor" href="#monitor-模式使能monitor-功能" aria-hidden="true">#</a> monitor 模式使能monitor 功能</h3><p>在monitor 模式下使能monitor 功能</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_monitor_enable</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> channel<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>channel：使能monitor 模式时需要监听的信道</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="monitor-模式下动态切换监听的信道" tabindex="-1"><a class="header-anchor" href="#monitor-模式下动态切换监听的信道" aria-hidden="true">#</a> monitor 模式下动态切换监听的信道</h3><p>在monitor 模式下动态切换要监听信道</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_monitor_set_channel</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> channel<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>channel：要修改监听的信道</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="monitor-模式下关闭monitor-功能" tabindex="-1"><a class="header-anchor" href="#monitor-模式下关闭monitor-功能" aria-hidden="true">#</a> monitor 模式下关闭monitor 功能</h3><p>monitor 模式下关闭monitor 功能</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_monitor_disable</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>void</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="p2p-模式下使能p2p-功能" tabindex="-1"><a class="header-anchor" href="#p2p-模式下使能p2p-功能" aria-hidden="true">#</a> p2p 模式下使能p2p 功能</h3><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_p2p_enable</span><span class="token punctuation">(</span><span class="token class-name">wifi_p2p_config_t</span> <span class="token operator">*</span>p2p_config<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>p2p_config_t，使能p2p 时的配置参数</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="p2p-模式下关闭p2p-功能" tabindex="-1"><a class="header-anchor" href="#p2p-模式下关闭p2p-功能" aria-hidden="true">#</a> p2p 模式下关闭p2p 功能</h3><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_p2p_disable</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>void</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="p2p-模式下发起扫描" tabindex="-1"><a class="header-anchor" href="#p2p-模式下发起扫描" aria-hidden="true">#</a> p2p 模式下发起扫描</h3><p>在执行扫描的过程中也需要对端发起扫描，否则扫描不到对端设备</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_p2p_find</span><span class="token punctuation">(</span><span class="token class-name">wifi_p2p_peers_t</span> <span class="token operator">*</span>p2p_peers<span class="token punctuation">,</span> <span class="token class-name">uint8_t</span> find_second<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>p2p_config_t，使能p2p 时的配置参数</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="p2p-模式下连接另外一个p2p-设备" tabindex="-1"><a class="header-anchor" href="#p2p-模式下连接另外一个p2p-设备" aria-hidden="true">#</a> p2p 模式下连接另外一个p2p 设备</h3><p>连接的过程中需要对方同意连接，否则会连接失败</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_p2p_connect</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>p2p_mac_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>p2p_mac_addr：需要连接的p2p 设备的mac 地址</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="p2p-模式下断开已连接的p2p-设备" tabindex="-1"><a class="header-anchor" href="#p2p-模式下断开已连接的p2p-设备" aria-hidden="true">#</a> p2p 模式下断开已连接的p2p 设备</h3><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_p2p_disconnect</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>p2p_mac_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>p2p_mac_addr：需要断开的p2p 设备的mac 地址</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="p2p-模式下获取p2p-设备的某些信息" tabindex="-1"><a class="header-anchor" href="#p2p-模式下获取p2p-设备的某些信息" aria-hidden="true">#</a> p2p 模式下获取p2p 设备的某些信息</h3><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>p2p_info，p2p 设备信息参数</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="任意模式下注册回调函数" tabindex="-1"><a class="header-anchor" href="#任意模式下注册回调函数" aria-hidden="true">#</a> 任意模式下注册回调函数</h3><p>该接口可以在任意模式下调用，但必须在调用wifi_on 函数后才能调用，否则会注册回调函数失败。</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_register_msg_cb</span><span class="token punctuation">(</span><span class="token class-name">wifi_msg_cb_t</span> msg_cb<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>wifi_msg_cb_t：要回调的回调函数</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="sta-模式下设置扫描参数" tabindex="-1"><a class="header-anchor" href="#sta-模式下设置扫描参数" aria-hidden="true">#</a> sta 模式下设置扫描参数</h3><p>预留接口，功能没有实现</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_set_scan_param</span><span class="token punctuation">(</span><span class="token class-name">wifi_scan_param_t</span> <span class="token operator">*</span> scan_param<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>无效</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="sta-模式下获取扫描结果" tabindex="-1"><a class="header-anchor" href="#sta-模式下获取扫描结果" aria-hidden="true">#</a> sta 模式下获取扫描结果</h3><p>调用者需要根据具体情况申请内存</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_get_scan_results</span><span class="token punctuation">(</span><span class="token class-name">wifi_scan_result_t</span> <span class="token operator">*</span> result<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> <span class="token operator">*</span>bss_num<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> arr_size<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>wifi_scan_result_t，扫描结果保存结构体</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="任意模式下设置mac-地址" tabindex="-1"><a class="header-anchor" href="#任意模式下设置mac-地址" aria-hidden="true">#</a> 任意模式下设置mac 地址</h3><p>该接口可以在任意模式下调用，但必须在调用wifi_on 函数后才能调用，否则会设置失败。</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_set_mac</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> ifname<span class="token punctuation">,</span> <span class="token class-name">uint8_t</span> <span class="token operator">*</span> mac_addr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>ifname：要设置mac 地址的网卡名</li><li>mac_addr：要设置mac 地址</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="任意模式下获取mac-地址" tabindex="-1"><a class="header-anchor" href="#任意模式下获取mac-地址" aria-hidden="true">#</a> 任意模式下获取mac 地址</h3><p>该接口可以在任意模式下调用，但必须在调用wifi_on 函数后才能调用，否则会设置失败。需要调用者申请内存来保存mac 地址</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_get_mac</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> ifname<span class="token punctuation">,</span> <span class="token class-name">uint8_t</span> <span class="token operator">*</span> mac_addr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>ifname：要设置mac 地址的网卡名</li><li>mac_addr: 获取到的mac 地址</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="配网模式" tabindex="-1"><a class="header-anchor" href="#配网模式" aria-hidden="true">#</a> 配网模式</h3><p>该接口可以在任意模式下调用，调用后已某种配网模式去获取配网结果(ssid和psk)，配网模式根据当前系统的支持</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_linkd_protocol</span><span class="token punctuation">(</span><span class="token class-name">wifi_linkd_mode_t</span> mode<span class="token punctuation">,</span> <span class="token keyword">void</span> params<span class="token punctuation">,</span> <span class="token keyword">int</span> second<span class="token punctuation">,</span> <span class="token class-name">wifi_linkd_result_t</span> linkd_result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>mode：要使用哪种配网模式params: 配网模式的参数</li><li>second：配网多少秒</li><li>linkd_result: 配网获取到的结果(ssid 和psk)</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h3 id="任意模式下获取wi-fi-manager-的状态信息" tabindex="-1"><a class="header-anchor" href="#任意模式下获取wi-fi-manager-的状态信息" aria-hidden="true">#</a> 任意模式下获取Wi-Fi Manager 的状态信息</h3><p>该接口可以在任意模式下调用，用于获取Wi-Fi Manager 的状态信息，只有返回值为0 时获取的状态信息才有效</p><p>函数原型</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">wmg_status_t</span> <span class="token function">wifi_get_wmg_state</span><span class="token punctuation">(</span><span class="token class-name">wifi_wmg_state_t</span> <span class="token operator">*</span>wmg_state<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><ul><li>wmg_state：获取到的Wi-Fi Manager 的状态信息</li></ul><p>返回值：</p><ul><li>0：成功；</li><li>非0：失败；</li></ul><h2 id="wi-fi-manager-核心代码函数调用流程介绍" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-核心代码函数调用流程介绍" aria-hidden="true">#</a> Wi-Fi Manager 核心代码函数调用流程介绍</h2><p>下面提供Wi-Fi Manager 各功能的开发流程(简单介绍api 的调用流程)。更详细的调用流程可以参考wifi_deamon.c 文件里的编写流程。</p><h3 id="以某种模式打开wi-fi-manager" tabindex="-1"><a class="header-anchor" href="#以某种模式打开wi-fi-manager" aria-hidden="true">#</a> 以某种模式打开Wi-Fi Manager</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">1.</span><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_STATION<span class="token punctuation">)</span> ‑‑‑‑<span class="token operator">&gt;</span> 以station模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_AP<span class="token punctuation">)</span> ‑‑‑‑<span class="token operator">&gt;</span> 以ap模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">3.</span><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_MONITOR<span class="token punctuation">)</span> ‑‑‑‑<span class="token operator">&gt;</span> 以monitor模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">4.</span><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_P2P<span class="token punctuation">)</span> ‑‑‑‑<span class="token operator">&gt;</span> 以p2p模式打开Wi<span class="token operator">-</span>Fi Manager
在调用libwifimg‑v2<span class="token punctuation">.</span><span class="token number">0</span>库中的任何api前都必须调用Wi<span class="token operator">-</span>Fi Manager_init函数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="station-模式—关闭wi-fi-manager" tabindex="-1"><a class="header-anchor" href="#station-模式—关闭wi-fi-manager" aria-hidden="true">#</a> station 模式—关闭Wi-Fi Manager</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_STATION<span class="token punctuation">)</span><span class="token punctuation">;</span> ‑‑‑‑<span class="token operator">&gt;</span> 以station模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token function">wifi_off</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ‑‑‑‑<span class="token operator">&gt;</span> 关闭Wi<span class="token operator">-</span>Fi Manager
<span class="token number">1.</span>以station模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>wifi_off函数只需在不再使用Wi<span class="token operator">-</span>Fi Manager时调用一次即可，中间无法频繁调用
备注<span class="token operator">:</span>
调用wifi_off后想再使用Wi<span class="token operator">-</span>Fi Manager必须重新再调用一次wifi_on。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="station-模式—扫描环境中存在哪些ap" tabindex="-1"><a class="header-anchor" href="#station-模式—扫描环境中存在哪些ap" aria-hidden="true">#</a> station 模式—扫描环境中存在哪些ap</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_STATION<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_get_scan_results</span><span class="token punctuation">(</span>scan_res<span class="token punctuation">,</span> <span class="token operator">&amp;</span>bss_num<span class="token punctuation">,</span> RES_LEN<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token number">1.</span>以station模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>获取扫描结果
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token class-name">wifi_scan_result_t</span> scan_res<span class="token operator">:</span>该参数需要用户申请内存，主要是用于保存扫描结果
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token class-name">uint32_t</span> bss_num<span class="token operator">:</span>该参数用于传到库底层，记录系统能扫到多少条结果。
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token class-name">uint32_t</span> RES_LEN<span class="token operator">:</span>该参数主要是表明scan_res的大小。
备注<span class="token operator">:</span>
    假设用户在调用该函数前，申请了一个可以保存<span class="token number">5</span>条扫描结果的buff，那么scan_res填写buff指针，RES_LEN填写<span class="token number">5</span>，扫描后系统扫到了<span class="token number">20</span>条结果。用户只能获取到<span class="token number">5</span>条扫描结果，不过可以在bss_num中获取到系统中实际上扫描到<span class="token number">20</span>条结果。用户环境ap如果多，可以把buff调大点，如果少可以把buff调小一点。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="station-模式—连接某个特定的ap" tabindex="-1"><a class="header-anchor" href="#station-模式—连接某个特定的ap" aria-hidden="true">#</a> station 模式—连接某个特定的ap</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_STATION<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_sta_connect</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cn_para<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以station模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>填充好连接参数，调用连接函数即可
备注<span class="token operator">:</span>
其中cn_para是一个连接参数配置结构体，只需要填充好ssid，password，sec字段参数即可，fast_connect字段预留字段，暂时没有作用。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="station-模式—断开与某个ap-的连接" tabindex="-1"><a class="header-anchor" href="#station-模式—断开与某个ap-的连接" aria-hidden="true">#</a> station 模式—断开与某个ap 的连接</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_STATION<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_sta_connect</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cn_para<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_sta_disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>；
<span class="token number">1.</span>以station模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>连接某个ap
<span class="token number">3.</span>断开与ap的连接
备注<span class="token operator">:</span>
在连接上某个ap后调用wifi_sta_disconnect函数可以断开与ap的连接。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="station-模式—设置自动连接功能" tabindex="-1"><a class="header-anchor" href="#station-模式—设置自动连接功能" aria-hidden="true">#</a> station 模式—设置自动连接功能</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_STATION<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_sta_auto_reconnect</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_sta_connect</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cn_para<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_sta_auto_reconnect</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以station模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>打开自动连接功能
<span class="token number">3.</span>连接上某个ap
<span class="token number">4.</span>关闭自动连接功能
备注<span class="token operator">:</span>
自动连接功能在底层有<span class="token number">2</span>种作用
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>开启自动连接功能后，如果连接上了某个ap，该ap的信息会保存在系统中，下次系统启动后会尝试去连接已连接过的<span class="token function">ap</span>
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>开启自动连接功能后，如果已经连上了某个ap，但某些原因与该ap断开了连接，系统会尝试继续与该ap进行连接
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="station-模式—列出已保存的ap-列表信息" tabindex="-1"><a class="header-anchor" href="#station-模式—列出已保存的ap-列表信息" aria-hidden="true">#</a> station 模式—列出已保存的ap 列表信息</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_STATION<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_sta_list_networks</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>sta_list_networks<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token number">1.</span>以station模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>调用列出ap列表函数
备注<span class="token operator">:</span>
    sta_list_networks参数是<span class="token class-name">wifi_sta_list_t</span>类型的结构体，需要用户申请相关的内存，其中list_nod字段用于保存列表信息，list_num字段用于告诉系统列表空间的大小，sys_list_num字段是返回值，调用函数后系统实际列表项数目会保存在该字段。
    R128 平台仅列出最后一次连接的ap的信息
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="station-模式—列出连接的ap-信息" tabindex="-1"><a class="header-anchor" href="#station-模式—列出连接的ap-信息" aria-hidden="true">#</a> station 模式—列出连接的ap 信息</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_STATION<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_sta_connect</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cn_para<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_sta_get_info</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>wifi_sta_info<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以station模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>连接上某个特定的ap
<span class="token number">3.</span>获取连接的ap的信息
备注<span class="token operator">:</span>
该函数主要是获取连接的ap的信息，因此需要连接上某个ap后才能调用，调用是用户需要自己申请一个wifi_sta_info结构体
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="station-模式—移除某个或全部已保存的ap-信息" tabindex="-1"><a class="header-anchor" href="#station-模式—移除某个或全部已保存的ap-信息" aria-hidden="true">#</a> station 模式—移除某个或全部已保存的ap 信息</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_STATION<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_sta_remove_networks</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token operator">/</span>ssid<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以station模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>移除某个ssid或全部已保存的ap的信息
备注<span class="token operator">:</span>
该函数要配合wifi_sta_list_networks函数来使用，调用wifi_sta_list_networks函数列出已保存的ap信息，再根据信息来移除不需要的ap。如果wifi_sta_remove_networks传入的参数是一个具体的ssid，那么仅仅移除该ssid的信息，如果传入的参数是一个<span class="token constant">NULL</span>指针，那么把所有的已保存的ap信息都删掉。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ap-模式—启动ap-节点" tabindex="-1"><a class="header-anchor" href="#ap-模式—启动ap-节点" aria-hidden="true">#</a> ap 模式—启动ap 节点</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_AP<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_ap_enable</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ap_config<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以ap模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>使能ap功能
备注<span class="token operator">:</span>
如果想启动无密码ap，需要把ap_config结构体中的psk字段填充“<span class="token constant">NULL</span>”字符串。其它字段按实际需求填写
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ap-模式—获取ap-配置信息" tabindex="-1"><a class="header-anchor" href="#ap-模式—获取ap-配置信息" aria-hidden="true">#</a> ap 模式—获取ap 配置信息</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_AP<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_ap_enable</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ap_config<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_ap_get_config</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ap_config<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以ap模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>使能ap功能
<span class="token number">3.</span>获取ap模式的配置信息
备注<span class="token operator">:</span> 无
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ap-模式—关闭ap-热点" tabindex="-1"><a class="header-anchor" href="#ap-模式—关闭ap-热点" aria-hidden="true">#</a> ap 模式—关闭ap 热点</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_AP<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_ap_enable</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ap_config<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_ap_disable</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以ap模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>使能ap功能
<span class="token number">3.</span>关闭ap热点
备注<span class="token operator">:</span> 无
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="monitor-模式—使用monitor-功能" tabindex="-1"><a class="header-anchor" href="#monitor-模式—使用monitor-功能" aria-hidden="true">#</a> monitor 模式—使用monitor 功能</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_MONITOR<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_monitor_enable</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以monitor模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>使能monitor功能
备注<span class="token operator">:</span> channel指的是监听哪条信道
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="monitor-模式—切换监听的信道" tabindex="-1"><a class="header-anchor" href="#monitor-模式—切换监听的信道" aria-hidden="true">#</a> monitor 模式—切换监听的信道</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_MONITOR<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_monitor_enable</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_monitor_set_channel</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以monitor模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>使能monitor功能
<span class="token number">3.</span>切换要监听的信道
备注<span class="token operator">:</span> 无
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="monitor-模式—关闭monitor-功能" tabindex="-1"><a class="header-anchor" href="#monitor-模式—关闭monitor-功能" aria-hidden="true">#</a> monitor 模式—关闭monitor 功能</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_MONITOR<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_monitor_enable</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_monitor_disable</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以monitor模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>使能monitor功能
<span class="token number">3.</span>关闭monitor功能
备注<span class="token operator">:</span> 无
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="p2p-模式—启动p2p-功能" tabindex="-1"><a class="header-anchor" href="#p2p-模式—启动p2p-功能" aria-hidden="true">#</a> p2p 模式—启动p2p 功能</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_P2P<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_p2p_enable</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>p2p_config<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以p2p模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>使能p2p功能
备注<span class="token operator">:</span> 启动p2p功能时可以对p2p设备名，协商等级等一下参数进行设置
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="p2p-模式—关闭p2p-功能" tabindex="-1"><a class="header-anchor" href="#p2p-模式—关闭p2p-功能" aria-hidden="true">#</a> p2p 模式—关闭p2p 功能</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_P2P<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_p2p_enable</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>p2p_config<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_p2p_disable</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以ap模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>使能ap功能
<span class="token number">3.</span>获取ap模式的配置信息
备注<span class="token operator">:</span> 无
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="p2p-模式—扫描周围p2p-设备" tabindex="-1"><a class="header-anchor" href="#p2p-模式—扫描周围p2p-设备" aria-hidden="true">#</a> p2p 模式—扫描周围p2p 设备</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_P2P<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_p2p_find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>p2p_peers<span class="token punctuation">,</span> find_second<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以p2p模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>扫描周围p2p设备
备注<span class="token operator">:</span> 对端设备也必须处于扫描状态才能被发现
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="p2p-模式—连接某个p2p-设备" tabindex="-1"><a class="header-anchor" href="#p2p-模式—连接某个p2p-设备" aria-hidden="true">#</a> p2p 模式—连接某个p2p 设备</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_P2P<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_p2p_find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>p2p_peers<span class="token punctuation">,</span> find_second<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_p2p_connect</span><span class="token punctuation">(</span>p2p_mac_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以p2p模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>扫描周围p2p设备
<span class="token number">3.</span>连接某个p2p设备
备注<span class="token operator">:</span> 在连接前必须进行扫描，只有相互发现后才能连接成功
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="p2p-模式—断开与p2p-设备的连接" tabindex="-1"><a class="header-anchor" href="#p2p-模式—断开与p2p-设备的连接" aria-hidden="true">#</a> p2p 模式—断开与p2p 设备的连接</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_P2P<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_p2p_find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>p2p_peers<span class="token punctuation">,</span> find_second<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_p2p_connect</span><span class="token punctuation">(</span>p2p_mac_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_p2p_disconnect</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>p2p_mac_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以p2p模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>扫描周围p2p设备
<span class="token number">3.</span>连接某个p2p设备
<span class="token number">4.</span>断开与p2p设备的连接
备注<span class="token operator">:</span> 无
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="p2p-模式—获取p2p-设备信息" tabindex="-1"><a class="header-anchor" href="#p2p-模式—获取p2p-设备信息" aria-hidden="true">#</a> p2p 模式—获取p2p 设备信息</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>WIFI_P2P<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_p2p_find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>p2p_peers<span class="token punctuation">,</span> find_second<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_p2p_connect</span><span class="token punctuation">(</span>p2p_mac_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_p2p_get_info</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>p2p_info<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>以p2p模式打开Wi<span class="token operator">-</span>Fi Manager
<span class="token number">2.</span>扫描周围p2p设备
<span class="token number">3.</span>连接某个p2p设备
<span class="token number">4.</span>获取p2p设备信息
备注<span class="token operator">:</span> 无
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="任意模式—获取mac-地址" tabindex="-1"><a class="header-anchor" href="#任意模式—获取mac-地址" aria-hidden="true">#</a> 任意模式—获取mac 地址</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>XXX<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_get_mac</span><span class="token punctuation">(</span>ifname<span class="token punctuation">,</span> mac_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>打开任意模式
<span class="token number">2.</span>调用函数获取mac地址
备注<span class="token operator">:</span>
用户需要申请空间mac_addr来保存获取到的mac地址，ifname是网卡名，如果传入的网卡名为<span class="token constant">NULL</span>，那么底层逻辑默认获取wlan0网卡的mac地址
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="任意模式—设置mac-地址" tabindex="-1"><a class="header-anchor" href="#任意模式—设置mac-地址" aria-hidden="true">#</a> 任意模式—设置mac 地址</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wifi_on</span><span class="token punctuation">(</span>XXX<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wifi_set_mac</span><span class="token punctuation">(</span>ifname<span class="token punctuation">,</span> mac_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>打开任意模式
<span class="token number">2.</span>调用函数设置mac地址
备注<span class="token operator">:</span>
用户需要申请空间mac_addr来保存获取到的mac地址，ifname是网卡名，如果传入的网卡名为<span class="token constant">NULL</span>，那么底层逻辑默认设置wlan0网卡的mac地址，设置网卡的mac地址是临时性的，重启后设置的mac地址会失效。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="任意模式—获取打印等级" tabindex="-1"><a class="header-anchor" href="#任意模式—获取打印等级" aria-hidden="true">#</a> 任意模式—获取打印等级</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wmg_get_debug_level</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>获取Wi<span class="token operator">-</span>Fi Manager的当前打印等级
备注<span class="token operator">:</span>
该函数不需要调用wifi_on即可调用
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="任意模式—设置打印等级" tabindex="-1"><a class="header-anchor" href="#任意模式—设置打印等级" aria-hidden="true">#</a> 任意模式—设置打印等级</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">wmg_set_debug_level</span><span class="token punctuation">(</span>XXX<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1.</span>设置Wi<span class="token operator">-</span>Fi Manager的当前打印等级
备注<span class="token operator">:</span>
该函数不需要调用wifi_on即可调用
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="wi-fi-manager-配网模式" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-配网模式" aria-hidden="true">#</a> Wi-Fi Manager 配网模式</h2><p>wifimager 集成了smartlink 部分的配网功能，便于用户使用，用户只需要使用wifimager 提供的demo 即可进行配网功能，无需额外再使用smartlink。</p><h3 id="wifimager-配网模式简介" tabindex="-1"><a class="header-anchor" href="#wifimager-配网模式简介" aria-hidden="true">#</a> wifimager 配网模式简介</h3><p>目前wifimager 支持sofap，蓝牙，xconfig 和声波配网4 种配网模式。所有的配网模式实质上都只包含了2 部分。 1. 获取连接ap 的ssid 和psk</p><ol><li>根据获取到的信息进行联网</li></ol><p>每种配网模式的第二部分的实现都是一样的，调用libwifimg‑v2.0 里提供的API 进行网络连接。差异化部分只有获取ap 的ssid 和psk 部分。sofap 配网模式是通过开启一个ap 热点，用户通过手机app 连上该ap 热点后把配网信息传送到小机端。蓝牙配网模式是启动蓝牙后，用户通过手机app把配网信息通过蓝牙传送到小机端。xconfig 配网模式是启动了monitor 模式，用户通过手机app发送一些特定的配网包从而达到把配网信息传递到小机端。声波配网模式是启动mic 后，用户通过手机app 发送一段带有配网信息的声波给小机端。</p><h3 id="wi-fi-manager-扩展模式" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-扩展模式" aria-hidden="true">#</a> Wi-Fi Manager 扩展模式</h3><p>Wi-Fi Manager 同样集成了扩展模式，扩展模式主要用于扩展wifi 差异性功能。这些功能与模组或系统有强相关，非通用性。例如A 模组支持使用ioct 或设备节点控制唤醒功能，但B 模组没有这些功能，A 模组的这些差异性功能就会被集成到扩展模式里。扩展功能没有通用性，因此不在此处进行简述，需要自行查看源码，同样也可以根据模组的特性在此处添加模组差异性功能。</p><p><code>core/src/expand_cmd.c</code> 文件是扩展命令屏蔽层，该文件(层) 屏蔽了系统性差异功能。</p><p><code>core/src/os/linux/expand/ –&gt; linux</code> 系统差异性功能具体实现代码(非通用性，自行查阅以及增删)</p><p><code>core/src/os/xrlink/expand/ –&gt; xrlink</code>系统差异性功能具体实现代码(非通用性，自行查阅以及增删)</p><p><code>core/src/os/freertos/expand/ –&gt; freertos</code> 系统差异性功能具体实现代码(非通用性，自行查阅以及增删)</p><h2 id="wi-fi-manager-demo" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-demo" aria-hidden="true">#</a> Wi-Fi Manager demo</h2><p>Wi-Fi Manager demo 是提供给用户的一个参考demo，它提供了基本的网络功能，用户可以直接使用该demo 来进行网络配置，连接等。也可以参考该demo 对核心代码API 的使用方法，把对应的功能集成到用户自己的应用中去。</p><h3 id="wi-fi-manager-demo-目录结构" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-demo-目录结构" aria-hidden="true">#</a> Wi-Fi Manager demo 目录结构</h3><p>wifimager demo 在SDK 里的路径如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Wi-Fi Manager/demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Wi-Fi Manager demo 的主要目录结构如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>├── wifi.c
├── wifi_deamon.c
└── wifi_deamon.h
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>wifi.c：wifi 组件主要是提供了一些简单易用的命令行命令给用户。用户可以直接使用这些简单的命令行命令即可连接网络和配网。</li><li>wifi_deamon.c：wifi_deamon，linux 下的实现，wifi.c 文件通过解析用户输入的命令后通过socket 接口发送给后台组件wifi_deamon，由wifi_deamon 组件实现真正的网络功能。freertos下的实现，直接采用函数调用的方式。</li><li>wifi_deamon.h：wifi_deamon 头文件</li></ul><h3 id="编译-wi-fi-manager-demo" tabindex="-1"><a class="header-anchor" href="#编译-wi-fi-manager-demo" aria-hidden="true">#</a> 编译 Wi-Fi Manager demo</h3><p>勾选选项并编译即可</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt; System components &gt; aw components &gt; wireless
    [*] wireless common
    [*] Wi-Fi Manager ‑‑‑&gt;
        [*] Wi-Fi Manager demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="wi-fi-manager-demo-快速测试命令简介" tabindex="-1"><a class="header-anchor" href="#wi-fi-manager-demo-快速测试命令简介" aria-hidden="true">#</a> Wi-Fi Manager demo 快速测试命令简介</h2><h3 id="station-模式常用命令" tabindex="-1"><a class="header-anchor" href="#station-模式常用命令" aria-hidden="true">#</a> station 模式常用命令</h3><table><thead><tr><th style="text-align:left;">测试命令</th><th style="text-align:left;">解释说明</th></tr></thead><tbody><tr><td style="text-align:left;">wifi ‑o sta</td><td style="text-align:left;">以sta 模式打开Wi-Fi Manager</td></tr><tr><td style="text-align:left;">wifi ‑s</td><td style="text-align:left;">扫描周围网络</td></tr><tr><td style="text-align:left;">wifi ‑c ssid [passwd]</td><td style="text-align:left;">以加密或非加密的方式连接指定网络</td></tr><tr><td style="text-align:left;">wifi ‑d</td><td style="text-align:left;">断开已经连接的网络</td></tr><tr><td style="text-align:left;">wifi ‑l [all]</td><td style="text-align:left;">列出保存的网络</td></tr><tr><td style="text-align:left;">wifi ‑a [enable/disable]</td><td style="text-align:left;">重连断开的网络</td></tr><tr><td style="text-align:left;">wifi ‑r [ssid/all]</td><td style="text-align:left;">移除保存的指定网络</td></tr></tbody></table><blockquote><p>ssid 网络名，passwd 密码，在使用 sta 模式其他命令前先要执行wifi ‑o sta 打开sta 模式。</p></blockquote><h3 id="ap-模式常用命令" tabindex="-1"><a class="header-anchor" href="#ap-模式常用命令" aria-hidden="true">#</a> ap 模式常用命令</h3><table><thead><tr><th style="text-align:left;">测试命令</th><th style="text-align:left;">解释说明</th></tr></thead><tbody><tr><td style="text-align:left;">wifi ‑o ap [ssid] [passwd]</td><td style="text-align:left;">以ap 模式打开Wi-Fi Manager</td></tr><tr><td style="text-align:left;">wifi ‑l</td><td style="text-align:left;">列出连接到ap 热点的sta 信息</td></tr></tbody></table><blockquote><p>ssid 网络名，passwd 密码，在使用ap 模式其他命令前先要执行wifi ‑o ap 打开ap 模式。</p></blockquote><h3 id="monitor-模式常用命令" tabindex="-1"><a class="header-anchor" href="#monitor-模式常用命令" aria-hidden="true">#</a> monitor 模式常用命令</h3><table><thead><tr><th style="text-align:left;">测试命令</th><th style="text-align:left;">解释说明</th></tr></thead><tbody><tr><td style="text-align:left;">wifi ‑o monitor</td><td style="text-align:left;">以monitor 模式打开Wi-Fi Manager</td></tr></tbody></table><h3 id="额外功能常用命令" tabindex="-1"><a class="header-anchor" href="#额外功能常用命令" aria-hidden="true">#</a> 额外功能常用命令</h3><table><thead><tr><th style="text-align:left;">测试命令</th><th style="text-align:left;">解释说明</th></tr></thead><tbody><tr><td style="text-align:left;">wifi ‑f</td><td style="text-align:left;">关闭Wi-Fi Manager</td></tr><tr><td style="text-align:left;">wifi ‑p [softap/ble/xconfig/soundwave]</td><td style="text-align:left;">配网</td></tr><tr><td style="text-align:left;">wifi ‑D [error/warn/info/debug/dump/exce/open/colse]</td><td style="text-align:left;">设置打印等级</td></tr><tr><td style="text-align:left;">wifi ‑g</td><td style="text-align:left;">获取mac 地址信息</td></tr><tr><td style="text-align:left;">wifi ‑i</td><td style="text-align:left;">查看网络状态</td></tr><tr><td style="text-align:left;">wifi ‑m [macaddr]</td><td style="text-align:left;">设置mac 地址</td></tr><tr><td style="text-align:left;">wifi ‑e [freertos: XXX]</td><td style="text-align:left;">支持扩展命令</td></tr><tr><td style="text-align:left;">wifi ‑h</td><td style="text-align:left;">打印帮助信息</td></tr></tbody></table>`,446),l=[t];function p(c,d){return a(),s("div",null,l)}const r=n(i,[["render",p],["__file","chapter10.html.vue"]]);export{r as default};
